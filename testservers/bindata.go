// Code generated by go-bindata.
// sources:
// loggregator-certs/cc_trafficcontroller.crt
// loggregator-certs/cc_trafficcontroller.csr
// loggregator-certs/cc_trafficcontroller.key
// loggregator-certs/doppler.crt
// loggregator-certs/doppler.csr
// loggregator-certs/doppler.key
// loggregator-certs/loggregator-ca.crl
// loggregator-certs/loggregator-ca.crt
// loggregator-certs/loggregator-ca.key
// loggregator-certs/metron.crt
// loggregator-certs/metron.csr
// loggregator-certs/metron.key
// loggregator-certs/reverselogproxy.crt
// loggregator-certs/reverselogproxy.csr
// loggregator-certs/reverselogproxy.key
// loggregator-certs/rlpgateway.crt
// loggregator-certs/rlpgateway.csr
// loggregator-certs/rlpgateway.key
// loggregator-certs/syslogdrainbinder.crt
// loggregator-certs/syslogdrainbinder.csr
// loggregator-certs/syslogdrainbinder.key
// loggregator-certs/trafficcontroller.crt
// loggregator-certs/trafficcontroller.csr
// loggregator-certs/trafficcontroller.key
// DO NOT EDIT!

package testservers

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cc_trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEMzCCAhugAwIBAgIRAICmRxeFE4JF4qcI+ku8V+YwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTYxOTU1MzVaFw00MzA3
MTYxOTU1MzFaMB8xHTAbBgNVBAMMFGNjX3RyYWZmaWNjb250cm9sbGVyMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqn7RBfTcY2OC0p2jcc/bwEtoTibv
F4GK8JRbJqamEDemOfu37V/JvRFJAJMtsApO+V5MW/3poT4MFh/k9JgVJWtE6rWg
nYSlQn29/eP4sBZGy5rx4r93LwXghBsGMnxmJ95QujigTuOdpw1l3HlVKhqI5r6A
yp6iTqLZsljXcPaxRjXHcu8l8vKNNYD54YHhh2VArhnPr3E9StD2aFx2xQIxxs4a
pepjuQekLZLIthIseOCj3sbBKkHYA/1CtIbRgWzhVpFQihVebD9gKrxR0QY32PRO
RcDdpQIOmeHreSxkCztbheeph5ugqZZjBTpU7drlodDttwI2XRH81RCB+wIDAQAB
o3EwbzAOBgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUF
BwMCMB0GA1UdDgQWBBRjMo+ncr/Ac0YG0KacKX6w3MCq5jAfBgNVHSMEGDAWgBS7
nh3kObnsyNMoLipAzd0lPNg62DANBgkqhkiG9w0BAQsFAAOCAgEAIiz/ZeToCvEN
toZMHp+Bkyzzd4uvi5xNe754bHz6iOV779d1seu1+BtwU2Zvdt4S7aNKr5Uufy/X
gaCm34h5FIwRZDdUOAi64f0+82qi58h8fg3kIolKOvdMBB6zuq/wHGKDT5mBSOL9
nk6VnK6bAmbZv+s1M0NUbV4OSOI9iE0hDlAS5P+Nb0UlOHCJZz4BFI5dtW+EBPRx
PyjzpXImSxU0MYzp+Tw7a7fJc8Ljzn+vab1R/FCPD0V8gq7zBsIh1zbLiFemRbZS
8aVT+JJ80uwcFdni89rriDntpLAgdjzm/RprBXKcVWsUZ3xWB5X4oF5VJuhk5k5i
XB1h0BTlEXmYQjf9Fi6jA40fGvOVBUddJi4DSnjRzDNfxtpi17ristNpkadlAAcC
c49H+F15WJlURNjHmBTM9xyIc7VFdkaFFo/MD8rLR1VMoVizC+LlHSwY0kcacKaD
m3N5pdUt2qXEvl4ZzcR8Y9DP6ZdAXcJgRUN93DZECwwsy67cCt1sIuDT3a3OpXot
j1qd/eMhYULee+hvKrgPXx8Pk57U7h4/LMjTUQSw4WMrX4QSDXgYb3BvL+OpnTaE
JsyvUHKbpasWA9F3llE9Y0mR07xb7tz7QgqrcJR1gqIVz5clT/geL8omP1U2WZjv
urlsvQL1j6DFiEAX2CoErLXSpozo0mw=
-----END CERTIFICATE-----
`)

func cc_trafficcontrollerCrtBytes() ([]byte, error) {
	return _cc_trafficcontrollerCrt, nil
}

func cc_trafficcontrollerCrt() (*asset, error) {
	bytes, err := cc_trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.crt", size: 1517, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cc_trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICZDCCAUwCAQAwHzEdMBsGA1UEAwwUY2NfdHJhZmZpY2NvbnRyb2xsZXIwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqftEF9NxjY4LSnaNxz9vAS2hO
Ju8XgYrwlFsmpqYQN6Y5+7ftX8m9EUkAky2wCk75Xkxb/emhPgwWH+T0mBUla0Tq
taCdhKVCfb394/iwFkbLmvHiv3cvBeCEGwYyfGYn3lC6OKBO452nDWXceVUqGojm
voDKnqJOotmyWNdw9rFGNcdy7yXy8o01gPnhgeGHZUCuGc+vcT1K0PZoXHbFAjHG
zhql6mO5B6Qtksi2Eix44KPexsEqQdgD/UK0htGBbOFWkVCKFV5sP2AqvFHRBjfY
9E5FwN2lAg6Z4et5LGQLO1uF56mHm6CplmMFOlTt2uWh0O23AjZdEfzVEIH7AgMB
AAGgADANBgkqhkiG9w0BAQsFAAOCAQEAIKAI35UJqeOiKBRM+wPXhrt1sOcCgHJ4
B/P8gIOi6DrJv6m6d4tKUkM4sLXUjjrp/mDAHLDTcvhI3VCbhMayZ7dGnshU4ueB
4UQn/k0v1hQkmg8h/ncaycdPLm86o0iQS30BqLMHteXb/8FLt6Zd5I/EV1TwEMI2
jmAkM4UfZSURAbQl4f6L5suh09LUrjousFpzNs686cDRzXvmwP9UUxstqknDJiBT
jptGElR1ZaogeXnc2k4dPcfpP4EZcJ4m/hkSHJOslXHrjTeWxk79Ogmotf8yOSKi
uYuJEZG0c5fBZG9oOLy1/9YhLPpM88YSH3P7W5Q3iXXZeWS+bMY8CA==
-----END CERTIFICATE REQUEST-----
`)

func cc_trafficcontrollerCsrBytes() ([]byte, error) {
	return _cc_trafficcontrollerCsr, nil
}

func cc_trafficcontrollerCsr() (*asset, error) {
	bytes, err := cc_trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.csr", size: 907, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cc_trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAqn7RBfTcY2OC0p2jcc/bwEtoTibvF4GK8JRbJqamEDemOfu3
7V/JvRFJAJMtsApO+V5MW/3poT4MFh/k9JgVJWtE6rWgnYSlQn29/eP4sBZGy5rx
4r93LwXghBsGMnxmJ95QujigTuOdpw1l3HlVKhqI5r6Ayp6iTqLZsljXcPaxRjXH
cu8l8vKNNYD54YHhh2VArhnPr3E9StD2aFx2xQIxxs4apepjuQekLZLIthIseOCj
3sbBKkHYA/1CtIbRgWzhVpFQihVebD9gKrxR0QY32PRORcDdpQIOmeHreSxkCztb
heeph5ugqZZjBTpU7drlodDttwI2XRH81RCB+wIDAQABAoIBAAy4rav+GzunPymr
7XgehE0S01ORgCGG3vEYgLyfjqCDJnoJGC40CX97/LB4St5pxn7A1H3Asl//mzND
aff+KQXDvT6uEq/uJ86QR07cZb/tyZaDlyzOEHyHubrhsVKvCYhMBEYA16VLQoYm
b8VFoF8l37Un3cBAmee4KvotutWI03oWNquQ0n2UE9sCbxafDPOvS65YcFvzj7B6
sKLjYpR6u5MhHHBcCYaoB64K1t42CCPdQxJOmXXFUCWooAgEonjpA31B3R4PoLO2
aWpU6S3AQ7mSGdtuRo0cyE5yw6zygw7dI7tY2uxCXEP7XvvKrppFnmeoewdyQsgu
TgI8FvECgYEAyP1dplUnQ/Y2R/LmYudAxbXZvhCfvKEIWhMCjwL8SgLhh7F9W5/X
o0h/NUI8yRJodHxgAhI5ST1Key/hsLsHQOl7x8EaLJ9BOAvIFKJ18fpM2hYsqONy
Z0OJF5MdhwHc8+AMbiBmMLEnmrkNuDAOySzRiTa3kgUOrilnTM5pwrUCgYEA2SjS
OfFO8oJpes+6n7en2FnbHjkqJheF6MPhMS6Ci6By9V9OC+dexb4/BL8E6RK0zIN/
Hf/6r7aVrbalRYHkXlwUDMu8VGYhYZGeSld3S+kTixsooaOib4CatbtTGMfRRSsR
eXbbFYU9p5V1+sPpWki4fpbsZ4fK//WgGkWSr+8CgYA537LyrTxkNmZE621pdztQ
ct+i+fh1AU19WlH3Sh3JVfEI+JOnKWyXSM3QUSVdpJ5NRG8EyaiTLUHgHNZ45DHf
gBuzVigqRyUpdUMEpg8eQTuV5KKxcuTDVVAJaMQs1t1/n7kUkOG8DZbg135a1gO7
69reDtJnCmvCvItRM3KCrQKBgQCRFi7uu4Rtjif+/47GayPe7pnxJWw9qvWywDxS
aaqaswZbXeN9HIY7Q5JDD4SuW+sjwK9LUd0hTLHQL/lX6SK00Hws2GnpUZr33xyM
usdflkeSZwDMjdFXAetbg95O7iGpPs8cAgb55917e+YpNn9P7Mom+ZrUyOsd+/ON
2fHZTQKBgFzHle2LEZ8yB0k7Hz3VoGxtZ+PUoNoy9ss927NBLny1KHhfTYuszYrm
aZyHmUs3NmUe8g7kxY/WtLL+wbNlUSXPN7TXxpv71LCbUJ1rhKkW1T8+kz/cx6g1
3BsfsYmhGd7Nq4mx0IxOxa4EZFWgrt5C2uu1caXEAch4porQnjOV
-----END RSA PRIVATE KEY-----
`)

func cc_trafficcontrollerKeyBytes() ([]byte, error) {
	return _cc_trafficcontrollerKey, nil
}

func cc_trafficcontrollerKey() (*asset, error) {
	bytes, err := cc_trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJjCCAg6gAwIBAgIRAOF5XAnS/X16MKuEY5MCwb0wDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTYxOTU1MzRaFw00MzA3
MTYxOTU1MzFaMBIxEDAOBgNVBAMTB2RvcHBsZXIwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQDXxSzPL70MZTZvhXt0W42tH7JDhmEygftfr3VgtIr7GqQY
UfiuAGbVOocz14hDMuh1KKgW4yXdg6xRopYBlqwzdLPlc4ZmHvbvbIayaXg6ZiQv
7EFBt9dZteNkBGpeFA6/CEoPLyu9rwKRMXo/vCToaGMAHH7SJYGp880r16T4ZBAQ
WiSq2HtOds8hGPxe1R7pEG2t6x5zK7fdkg8GN34ztUwyPDGX8dM3NV0L0zjurPGw
qRKJysxYgDjQHZNIzeUXiKAlJQxjXUV5YYft2ESwBw2TFSvxDgP2lSkkESFqixak
yp/tx+xAL+uou9+UVCmMyXqCsTiMHxDmOddkg8K1AgMBAAGjcTBvMA4GA1UdDwEB
/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHQYDVR0OBBYE
FPasICq6fmqHZpym+KMaKvXUgFLjMB8GA1UdIwQYMBaAFLueHeQ5uezI0yguKkDN
3SU82DrYMA0GCSqGSIb3DQEBCwUAA4ICAQDPfKztoWgCQK3gVMRsSHIK3C+1yaCw
ObM8rQV6e9twhyPjYuoQapm02QI+yRsRniPLX3QRtEefPgx/gXjdmDA5CVnrLhuK
KuIeEXRsGtuttHldqtXIBkckGO9sp4rg357v2xtZmUNAFFNmGYtehwsBPuf8RbkY
En8heEIiKafBGfGrUPPtLEL70ygT7VnqH3Zpne5ejgQFhXu62pblrNOaBZB8XEeL
b6bWfvFSblaaoYNCWuOb9xneR705pbf6SJxb7QxfbMtgT+uOk/IoXbS3qNOTzEgF
4e8HitT5fEbgCNX3VmZdWF/0Rhvd4BCofFxklDRmeKIkRaNd+s5MhgMG64I/uNDw
GrO04XCEmYzEgYRQM1N29emzAevH27j9Viqojk6iIuOGq36z+1cHpZ0zhQB03gHa
1hxDtJOQDicC/RqNx5c70QgzZC5eON51A8MiDGK+h8VqhCOnhPeGuh+vdOcKRfO2
Euz92VtjfaBlq1FghHtuQXA29T/gwhuHWDSowjJG2ulC69RbRmFvEQ/tGu8cDgVT
Bs/uXxwUhNrFKbVJbTw1B7fbGmlXFOdSJjagMyJDY2vc/0pDCs+0+sZa4MJLunGU
Xo+ZzSnUymHPYWB655ElaJLN8Wvp/hikn8+WiaS8CbGnifQ1H/JAwrPmNgRuQ/qR
xEFdiOjqrgjfrA==
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1501, mode: os.FileMode(292), modTime: time.Unix(1531770934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANfFLM8vvQxlNm+Fe3Rbja0fskOGYTKB+1+vdWC0ivsa
pBhR+K4AZtU6hzPXiEMy6HUoqBbjJd2DrFGilgGWrDN0s+VzhmYe9u9shrJpeDpm
JC/sQUG311m142QEal4UDr8ISg8vK72vApExej+8JOhoYwAcftIlganzzSvXpPhk
EBBaJKrYe052zyEY/F7VHukQba3rHnMrt92SDwY3fjO1TDI8MZfx0zc1XQvTOO6s
8bCpEonKzFiAONAdk0jN5ReIoCUlDGNdRXlhh+3YRLAHDZMVK/EOA/aVKSQRIWqL
FqTKn+3H7EAv66i735RUKYzJeoKxOIwfEOY512SDwrUCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQB9Gk0lkdUdDMIk4RSgs1vwiwB8tPDllexaF50rBnzMlr2lil7M
TU7DxgdPmM5JFwq1OJ5xJxTi4zbn7NJ1KQJQRx97+AIpbziWj4DhQCxlDWzxmdO4
BeFKELaKyyzHChOQ654XOBFaIgp91AUToZcNlrwMtn3/240wUXeB2jSauko+1Wmr
BYEYb6MaITcep+BHafkkylWeaL2bpC22vDv4mTogPe1XPVVhtBkq327LCGm4jd93
OaHc78qRogbSdl8Ezyu0q+nzTJxLPf6mcbc2ESXQ4WUAIY8u+dwGCeh1yBsE8hbM
QLJGkEeo0oRyaetS09rf4cgas6h3ns0CIK03
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1531770934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEA18Uszy+9DGU2b4V7dFuNrR+yQ4ZhMoH7X691YLSK+xqkGFH4
rgBm1TqHM9eIQzLodSioFuMl3YOsUaKWAZasM3Sz5XOGZh7272yGsml4OmYkL+xB
QbfXWbXjZARqXhQOvwhKDy8rva8CkTF6P7wk6GhjABx+0iWBqfPNK9ek+GQQEFok
qth7TnbPIRj8XtUe6RBtresecyu33ZIPBjd+M7VMMjwxl/HTNzVdC9M47qzxsKkS
icrMWIA40B2TSM3lF4igJSUMY11FeWGH7dhEsAcNkxUr8Q4D9pUpJBEhaosWpMqf
7cfsQC/rqLvflFQpjMl6grE4jB8Q5jnXZIPCtQIDAQABAoIBABgOoOdc0DwwkLgw
bspTZuF1lj+XHQEvouJRQsoMdy52EvOvOAXWf6CojOiH0GaFp4tghBVBMDiZdL4J
XaZBsWNvUJt1nPeH3kpllEMSJViFiOVa9w+nurgC4p6FK4Lfw6EjAHbe8IaOm7+q
f5HZnVfYQ6mAg9dUXTegujB4M6mJ8gatbfdzeXarmp57jvLfghYgxNhqeSk1ELp7
J7KICDLw9PHtmE6UAKGDc3PPGhh7XLq+kEfuh8Xbph1vyoxRETRq0FiAnQuxAVSO
cCNjirhvuQTDFyJHqRZysTJp8+Nl+DZEAdq20JuY2GyoaBIHHed90cgiwrEXjAbg
5hdk1WUCgYEA+w5GXqbCMXJ4nZxfbCykYNoFL23MV9K06H133nh3VB7ZRVq6AWCz
GEmFezQsSul2TGiw4DN9VhsV+8UGmAILL6YwnlLX9wDS+gHdRjVv2sTabnrtMF4e
Il0ijPYRbUw1mJrUUu5TkL/NS6dpjVxPYtvwwDzqLasBCt83UhoLOc8CgYEA3AUB
E8ww4gu+Pp5UQyOiiYToCLXucUsBjO4aUtQuJfu751l4Fw3/hRjG77UEpsYidUeS
6OvxeHfxi07rrc968GO27MoauByA8JEQr/I6BhHoSZeb/KWnIsupERZhTNu80uuU
RNgxJjLxN1+SRPXdv+hi9zwfuMw6ZcxCSQVHkDsCgYANojXSGA49rzC7pm1MK5R1
qgFUFQtezZODeKTU0Qfx6ob0DDxDrOOs8vkruqaZHtqMxbatRj6NOYVVGdsE0D+Z
Q9YqEuelg0bxyr4gfPBpGf2euFA/Ky1JwnMI4qgJnnTep7HWGxkwqCnW7O1/fr7U
6IrHdcdl2X6B/6M6cy2e4wKBgCXjnrngEhL7Xrm93ljpjBYOkz7cxcEw34V7g4D8
FS5pWYSPvcSKnpQ3Hhstmy11NX3o433FFAJg9XG+F4wJDOzU3y2L6GoITpQfBzal
iiR9dPknaK9rf4rYc7cDmaH4vV29P/1TFbO0ViHpDXFevd9Mj65v5i6WzP+22ztj
81z9AoGAK/NpOcu3OdLeJ6023I/wUNd1YddSm2XoTymkp05bTJGI2fZFuOtLd+Ux
Ntm7PYkHdqL3AhIRS9wqTqn1Lq9+mX0xjwmjo0+SCCtplBCLOej+Mamfy5plifeE
uS0f0A4eyblIQKd0EQs8LDc40uoZHDBfy+YDsEglC024Gl4BJ9M=
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531770934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE4MDcxNjE5NTUzNFoXDTQzMDcxNjE5NTUzMlowAKAjMCEwHwYDVR0jBBgw
FoAUu54d5Dm57MjTKC4qQM3dJTzYOtgwDQYJKoZIhvcNAQELBQADggIBACyHq7Dw
zGKI2sk2YoltKOBWIR50sVBYbAfofOHXoB+g5xmj/OWE7yAQFTMGzbQtMYoegypq
0H+wV4hVBlroBL+28B6mag3yjvU4y+kEqCLD5i8Fg300pq6wMFXwXYCNc5QVG1i0
RkQtCwu/G9/FWyP8SDUH++mlMMn6llghhiez86jl/H1ZRXCApSuS/fFRTVOv/5wK
zt2uro5+W69BlDwKS9OKhnUnsnptxlsCtU5X44qxqKHEL8A0PBx2TzbMW8mdafGd
hmZQitSLxJPHoyDSHf394Kn9MfXzYysFuZHmlfOsQ6exHhrut7YDafTBMd4Y9o2c
BR8voRCnsVw+4J38jod1ZtJkjr0frI6j65kIyoO5/i3YjYlDpLu9yS/8vsuA9K9z
HMoL8OK9E8iHkazt60r6m800OCl2bOwSg6RxMRaBcTj/A0LRz1NfwyL9jCHGcqzx
MeF+pcrgLs5XPHvUVF+grxYxkI6rQ16JQa97WtMdG08zV/xlgYDta1dsmpMEmYNm
ULnabKpL2TryswXR0lXdyJ69h6yNBVAPBx+764rYT9t5aBR1HLbE9C21C+64UV8N
V10I17ZjGc5sp81A582IcIi1tcxPU3ZpNOpSerggnx5rezaRZzdUPcABFcAW27xo
a4Ht1fC+/BBcsBcsMBst/mSKlOixrFzc5A5K
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1531770934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE4MDcxNjE5NTUzMloXDTQzMDcxNjE5NTUzMlowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBANiA94uRNa8KzHP8ZUdDai4HUyrOxqG/244keRTUmegs252F5wzMU5Gg5PzQ
cL7YfItafNDdFD8WjzgEC8amytDPzK94v2nC6g0KDCeE3OX4acD86mcJ0DrUpy0g
hFpy82ac5Xl0xghV9uy64tc9qFx7XH7FKv4/wRf25efqji8wyV5mZgTR/UIQubXO
RWy6gqgu+dr4Jm1RPEMuRMxIU3XdgzN/0AL9zZPGpyGe3fW+DH7zSyoeYWYji4g8
ourSeY7QOBSuBqf65gMuGRMezkGSBS+7cqOK7ZhRbuSgH2lA9S8LpqE2792Yedci
KJDB8xUgBKjlCe05Y0/vpaAN5C+5bTTeFv4nHLFwcoldwjXKXlJErD3RKuzRzYV5
DuM6LSSxcc/bIvRuFq+cWNZ9WGBIxxm9/M0W1tgVOH7Yx+D+3a6oIKnH2CgQw0Ql
7oE9iFfw0e4w8q1/sXlqlLicQQU4D2K2gteXnWLSfUudlg4W9aSDbvneIYCaixOs
THUOx7X5hIy3jDVk4MeogbBk98VLz7d8E/Abb5+jQmfUgrdyCC2qc//xJgfhgBz7
J+wxwJDsgspYpiPZu2y3ViCboUaUbM1lsNUsORxcef+FKqcRoXL7f/yTJSvRfU2z
A3grIclaPpy1BvduLfpYhNfQDtvjD62R8z8gzhFPeUN5iX2PAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBS7nh3k
ObnsyNMoLipAzd0lPNg62DANBgkqhkiG9w0BAQsFAAOCAgEAh0cpYHazK0FyI3ap
IgLq33CTv5EtTuBgjnGuOFXDEwp0U599BUgmQvSpffsGcixWNsPP8Lm1Xf2xJ1HV
//XroLzXJC0+J7jbnqCzfIsC7Pt1jU9CbX85mOdpS47FRoq4HyBz6Qtjq0+zlZ1Q
+F3+N7+11AB6dlQ5aiyZDiIOwl+Qfi/gAr6odxyvHVc446jcCyoChbxr8Gw30Uwr
s+mL+UBeBoSgtEUDynDWlCYRVmb6vCxBq57TMRp21A0kzlUnkOog7heq2ofLYjNN
TnJI98nDb6T0FyjvG9moLX49yOd3SSmYaLrPh7Aa/FuYSyPNGzDNBb8uAbIWhpF/
EJSF1huLpP99d1pPUzu6Z8dbdSmNhwfv/MbdJIklagh8A4IHqjhHLSFs9HZ+UyXR
aG8GRBUAc2Pg1t2YwyB/sEtgmjQ/8G++tDNLcif65+q4VEsROakrZyV7ir6XVzTG
s/MW3WplwA/rFgRvvLs4Ov6gljMSxVKo1+sPPFF5bMQYPgVeaJFWSKN5QVsBFrYi
FINOtOYdfPeFDvVxCVcyOOCgxdFQznmL3a/Axc2AJ6O1tmWC6G98rbaUiJYpjswA
NBx75SxaS6Ow8yCrLZYmAUNBEgSFS5iG7sNTqPzg/tAJVX1Pff2lQ0zU3RNmF2iX
KiSHzDKYg9U3lK6dG74We7Y1rJk=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1531770934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3247, mode: os.FileMode(288), modTime: time.Unix(1531770934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJDCCAgygAwIBAgIQQwmr13DFxTgKlKzkDLNwhjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNjE5NTUzNVoXDTQzMDcx
NjE5NTUzMVowETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA1JG2gCewn6ijSaY4p7Q4Et5yT8RVQgRe1+10Yhjk+BcrOtml
UxqPFjay7BMoz+h9TeGo2MSBbXTr9lkMZxbT9oW0oLGPY+waQ0kuqW/qgB/pLkjK
C8ytPArANN1xopGMqLF/127r7MBnHd6fBkBrTLgh0AWE99IGPzaEM/LcguFrzga8
595z2PunCkJr4PhcEihS5sYTQhW4YCMCwiPH29076scRhZoccfco4QCPXOdno2/+
QN6e7su/JiND9MzDZy02Ho8tO6/Vu4mKXzZ5fh4MK4+X3XJnpGj4+Ag31T0aaiwY
2+yV8EQlrxGzJwLtDCRNw76bdmnmwSrmuqbtEwIDAQABo3EwbzAOBgNVHQ8BAf8E
BAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBQ+
huv7wdJavWwzXBqpCh7YpgUvxTAfBgNVHSMEGDAWgBS7nh3kObnsyNMoLipAzd0l
PNg62DANBgkqhkiG9w0BAQsFAAOCAgEArnm7/IlDYwPm+tm+zlT9+iARFRcKq0Q8
/jAJzxWsHISmr4i9fnae3QKxortJpDvuAemkbCcpF09TQ4nSIqh9jwiOmODVKkNE
TWbjFLkW812MCPi7TjMlQaSQ6Cptmp75CTFh+JQrvkLFrHJm0Sm1PqUBkazofcpV
c8wbnsTXZpLD/YVZOxIbcwiwhkXQPPnjjrhPr1MGrcNxB83v6C4Yh3ElptkxYXCh
vGjnsTrrDbpT2rP7lFlcYsI6LMn+8gg3HIO5OUyCfKguoH8K7mJuzzzx4jHLQgqM
TSpMwpOS+2vPMwdpGk1fo4znw2Ws28uHmqThKh7wCYMLQuPLM2IGM+Ph919uTS+k
aIUyQbJ8NThHFuNL24XNl/gkgJGBFo5MPvj4qWPwpZtReGBdehJ+Y0xmCM8QVnks
rtaey29i5X65bSHygWaLEZr+AOuXQ6HBJMvvTYbX/uZ5TGgMvUgx7dYPrR8kJAc6
cwoEFXMgRdowlL1EZhNRPJuyf26dh7aRMErAQusLZiOCKnn4fql/V0YVwAtJMB45
kxTrfEHTYoNDsveuVYyz1Gnf75TxbxCSxBtAPjTciHIhEvem73kmmOGZY/+ADSfj
UV1PHJ56heriG1Lg0LBZB9F93QHRfgjMKuzlMTdQGLO83uH83P5SBdg5dB8Odcp7
H90+Ct3DRcY=
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA1JG2gCewn6ijSaY4p7Q4Et5yT8RVQgRe1+10Yhjk+Bcr
OtmlUxqPFjay7BMoz+h9TeGo2MSBbXTr9lkMZxbT9oW0oLGPY+waQ0kuqW/qgB/p
LkjKC8ytPArANN1xopGMqLF/127r7MBnHd6fBkBrTLgh0AWE99IGPzaEM/LcguFr
zga8595z2PunCkJr4PhcEihS5sYTQhW4YCMCwiPH29076scRhZoccfco4QCPXOdn
o2/+QN6e7su/JiND9MzDZy02Ho8tO6/Vu4mKXzZ5fh4MK4+X3XJnpGj4+Ag31T0a
aiwY2+yV8EQlrxGzJwLtDCRNw76bdmnmwSrmuqbtEwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBALYZCUQ0+K1TA/kDpPdhhhew8JsmtnDaRXsE2Mt8HEYg0htkJYgP
QitkieLCrs2qPjt8NQxyo5vG4azjCo8SEmpDf1VR8I2T4XqitcohQsvY1T63mGdQ
1Zn+cba+IF2IQJsTyQsOjNXgfZItRrwAi58g+GHuZ2fQUOkF6g9LMkrP9Z1Rn5ak
inUy5jWngKUTyjgOdWalBNCEGpDpqsWNIwy5aGU0eYHOwrT7wC+UQ7ybSAPuvSdI
m0gskJJfUm1MudM6iVOFNzRQEEYaXLUP6CpcdQkdHqFgHz4SigMhQ0iSOp6fBb1Z
QbCM3kBlpph2H5SkN6UmNjrsDJ9lNT/Lrzk=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA1JG2gCewn6ijSaY4p7Q4Et5yT8RVQgRe1+10Yhjk+BcrOtml
UxqPFjay7BMoz+h9TeGo2MSBbXTr9lkMZxbT9oW0oLGPY+waQ0kuqW/qgB/pLkjK
C8ytPArANN1xopGMqLF/127r7MBnHd6fBkBrTLgh0AWE99IGPzaEM/LcguFrzga8
595z2PunCkJr4PhcEihS5sYTQhW4YCMCwiPH29076scRhZoccfco4QCPXOdno2/+
QN6e7su/JiND9MzDZy02Ho8tO6/Vu4mKXzZ5fh4MK4+X3XJnpGj4+Ag31T0aaiwY
2+yV8EQlrxGzJwLtDCRNw76bdmnmwSrmuqbtEwIDAQABAoIBAAxXbW4hX8rVQq26
/d0WxI6r5Z0l/AE6Obt1qOUtJtYUmkjva/7YMuiKQnccYak4iVXlPSVgu1b8i9qg
ruypUaMlfig6RuX5RkkTzaa+vbG0qJgsV7a5qnEq+p/XH4rdwnnk3FRIt1/mh9Yf
H8KAKPqqUiQ+vcqZog03gBN4DT939db8jGcVSvGsbr2nSxFxSEDamnXdb8eLAyzM
qWVa/uGgN/oVh+WQRtvBRK1/M9R5XeaAc6aQ6XVRXEOKazmW8ujTuAfp36IDyK7v
KRC5tCkbIaxF3frdZRW3dDs4Zu98BmJd2YsG1SRUhvwh4Ci30V0aEc3lKDlxGjsX
zMtUH9kCgYEA1fhNPCAHcC2y27vknwDDAEEGvQxMApD2lisvIjLP7Rm/ZqpLnyBt
ih4Rh45ZN0aYtGmX9/fSpVJ8Re8uCo1aRLBsD1MqtGEUUDomu0NNvJKokkHosqpW
iwvxTTVDbhWalnIi8kBJ5ztS3eUuZhxBMyP0HI6cBWzZ21b5Pa12JicCgYEA/lL5
Qhm9cjZTmS1DLRqVdG6koB2hC0+Ua+QX29lgWkd1ZBEVP/8IE9bh5pHWawO5lSki
fj6DZSz5c140FFURcZwAiewqCU+2uQ+PFEfKiXakLu+JRm/nlq8r/AwyG4BTvVUR
bqxLrZ6PgGTXxsdYBiP4jt0RfSu4B+cyrVlKITUCgYEAv04gp+gvHlINfz6v+qWw
s3JwNuhesVCw17TGkHoDw4Zoxb7um9hfd8TIgX15MN2yvGNIl1EBCgUEzXY6oP6e
vZlLFCyUmu/NPKmxZW6Ye0hY5WN+TPfVJr7HwPMlVbCFJYvoyNVH/jDhNzmoUW1j
sfisUjgDMSqQYfaSI14Kq7MCgYBNMXoeqhlqdTrin25oXk1Gzd6CCvw6pqjyJoVn
YY9xV4c2HElK52nYO7zNcy6VxMerkpS5pNfU+dWtQsaj9T4aMbOoKVqJAP0BJsvS
6Ad9udkTtfkAvC6a+ghrtHfxCP5h1VQ5N2qxBBOicPldiFwbYQestUT9rStqmq4z
F4r8kQKBgQC/9a7JKSqF6QrYnVnJwF3peRjlMaHlDqOH9F1M0D2wth1P/km6fO8Z
pwRBszcov0R/DS1/Wfmyi/3376xO5xM0INt2wQ6NmLF1ZcRdLlK/0rgiloL43FtA
A94Gv+5Y6FLrVBqLyjBnOcGTsGqr82t/ekZ9f53h8QaVV/C0phCqTw==
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELTCCAhWgAwIBAgIQVZo/mwk6zfleW5uMFV7GzjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNjE5NTUzNVoXDTQzMDcx
NjE5NTUzMVowGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsXV5lzkTgWN8SoVhHrGtYqPNbLenBdwYnt7W
zvoeXftvuS8jVvwSSdKrb/E83C2363dB3i6Aw09CWSlmaJQ6AJtXbtvw3dnpd2Og
wCYiX+vVwL8ShBzPw7hv/VbYS5p6Wio7jPRe1bXKQq6cJ/oP7NDElXNgOCtPXQ8S
vJm/KAYzQak2irMcV+y1tBHU+nGxQZOnECxtZ09TC/GBpKdoZMiRUas4lb4N2RUE
5oVh4nlqq/j+K4jZyKf1cVfbFxIcgH4BpMsfmk3R6GvU6g8Fl/gQcun/3BQ+1MDa
AaXaSGF+g4UqJxA4WzbU+xm0CJmlFNpigFcc9qNjNt5SBdkuZwIDAQABo3EwbzAO
BgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0G
A1UdDgQWBBQxIIQv46mX3xvX1ll8MHt+fD2IGDAfBgNVHSMEGDAWgBS7nh3kObns
yNMoLipAzd0lPNg62DANBgkqhkiG9w0BAQsFAAOCAgEANGPGq7Q3qLQRRzm6JG6z
jexenJf9FRIg6hRuv2lHnA5DJH1nJ/yoSWKM7dcCuFrsvUz56b8l9O0wrjUiYpu3
GxdMiWxSEhMV6RcWf4imsJ+I2DkqGoq2/GnRVNrMblWiQyJGSiIrUuNVRR2wnFae
KSGskaZGUErYyYAW0A0Jjv4J6OK2y0r4rJeOfYDOlNTKTsn0oR92CP7o0KOJOUTf
W5QCNz2OOEWJpw3sW40kj42SuiDlLE6GKoJR9yoU1vdQW6nye4UXgcqsfPiCHCPy
YQR2WalZo9tPree0rPXcPiG7CBSSsbdnbzfJHSS5oDiMwCAzZzbdYnWmNBcTeZya
by22aDNpiSJNneTfSmKswicQiNzvvSIGvIGV7G7czXci0FpdPwGHNGkcCkHC1x1v
uFmYMe3nKTO4xA/d4MARrND2XAw919P13YyRlg1w/VK31V8vHdSCSO1fA4pRgQCS
t7bW7wKp8oTDOnUffOBZgTQHYu/8eSTJbBHHqC7QPq0QvdUvZthTnjX9NroGaX4x
qsnqnH+hqRqMB5rFodontWHEnZ3iWlnQZOlzrrt6Z4GYwTkNyOcsCdOEhTMtSeFF
noeJrPJxaVXGSE6LDV+x0RnpPFBHVfn3q+7+XYBELA+LyLlQDa58Cd/6tg4hggiR
x984kAIVbnoXKoKA/AjKKBw=
-----END CERTIFICATE-----
`)

func reverselogproxyCrtBytes() ([]byte, error) {
	return _reverselogproxyCrt, nil
}

func reverselogproxyCrt() (*asset, error) {
	bytes, err := reverselogproxyCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXzCCAUcCAQAwGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsXV5lzkTgWN8SoVhHrGtYqPNbLenBdwY
nt7WzvoeXftvuS8jVvwSSdKrb/E83C2363dB3i6Aw09CWSlmaJQ6AJtXbtvw3dnp
d2OgwCYiX+vVwL8ShBzPw7hv/VbYS5p6Wio7jPRe1bXKQq6cJ/oP7NDElXNgOCtP
XQ8SvJm/KAYzQak2irMcV+y1tBHU+nGxQZOnECxtZ09TC/GBpKdoZMiRUas4lb4N
2RUE5oVh4nlqq/j+K4jZyKf1cVfbFxIcgH4BpMsfmk3R6GvU6g8Fl/gQcun/3BQ+
1MDaAaXaSGF+g4UqJxA4WzbU+xm0CJmlFNpigFcc9qNjNt5SBdkuZwIDAQABoAAw
DQYJKoZIhvcNAQELBQADggEBAF2PkcTz4aaJS+pVfhxMMngqZZoE4NJZEwbHjA4k
FUPJnfXB6AWSlQAXRNR/HgUKw6gq1RhSVNNQbxI9UmFCdD92bzmXhaDyzmWp3gYE
aUUBna3B5PvDE3CWnte+YFnN61bOdAJqswbGs0OwmYaZvhIliEE57OAaoLDc0jXJ
qUW2K/O5Rp2TRA8gY+JvsIPvP8kZ+baXaMvI7jMxRgiPeWU1BlWSU4t+e/SpmI8s
ZcgU80xkTAb4HO+nx86HTHOrlBtlprToZDb8371/Z0o2voBIwdr+OoLx3AxOkAXB
qFz3VvH7ujDqjFstJOatlAsu2mMmopU8o5RGutyD+q8bJfs=
-----END CERTIFICATE REQUEST-----
`)

func reverselogproxyCsrBytes() ([]byte, error) {
	return _reverselogproxyCsr, nil
}

func reverselogproxyCsr() (*asset, error) {
	bytes, err := reverselogproxyCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.csr", size: 899, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAsXV5lzkTgWN8SoVhHrGtYqPNbLenBdwYnt7WzvoeXftvuS8j
VvwSSdKrb/E83C2363dB3i6Aw09CWSlmaJQ6AJtXbtvw3dnpd2OgwCYiX+vVwL8S
hBzPw7hv/VbYS5p6Wio7jPRe1bXKQq6cJ/oP7NDElXNgOCtPXQ8SvJm/KAYzQak2
irMcV+y1tBHU+nGxQZOnECxtZ09TC/GBpKdoZMiRUas4lb4N2RUE5oVh4nlqq/j+
K4jZyKf1cVfbFxIcgH4BpMsfmk3R6GvU6g8Fl/gQcun/3BQ+1MDaAaXaSGF+g4Uq
JxA4WzbU+xm0CJmlFNpigFcc9qNjNt5SBdkuZwIDAQABAoIBAHLCAlBtw5Rfzoeu
e2DLC9IHFZghp6wdafqLJqSQkMS8DcLWnebpebYtu1nXykCkfBSUeY8ByZkED2bz
Y9trR5sO2drB9qCxA86GKfU4c/BN5VwQ9BtlOmJaSmmtGJDDpC3cs8fyW8WeGt9G
ZYtgpZ3CX+45v1Zzg44tajN2xWxOinh3BVPA1X1T04xfeURxqUVznrRxLne042qo
4cVISch2QY8jJ8r2O6hyk8swfPj1Aacinz/Rhuc/hF38r1mldg3r9agLB/HRuWh0
ltzjCk1duJqh4hLBbVa1dIeXQlviak8HrLx/LzSIKN6/Ee5NDqFbBBfHW/x+hrVX
L4sgxZECgYEA1jx+D12+yIA+UY70seYgj/b2MIUk6aYngLoGZNyz50jhc+3gEHSX
Xx4ZzKAbAtgI2zlM7L/Zj+aG+vjRn7fv+8z9T0uhfPNbUZoJ9ndduTaXeM1v5d2w
vohxc/RfueklJsKyx7Adq9mi87p2YZHYuSTRE4wQ7VtSaDrSqby8IH8CgYEA1A2Z
GjhgO4XQLRdXato23jAAZgWoNYgNl90Ch1PSxVG1+DoFBMGGUrr3w2NLDPLPQjtr
Jiq6Jqgk4gKPatqBI8FdjlEpM1Vu+ahXtokzKSNS3mC6TReM1dkaHtjKMF9Ns6yJ
wXlGBHojwTh4vrfsi867Q2A7daWCbqp2xfLE/hkCgYA+DQteHAL0Q+DI8qUBGex4
hklMSGQmoI90g2zyrdIVvVA/qbhqS7rEPA2w7Pal3jjCdlhHglHbkiOqcYMVxcrm
nbsIypkdfccHXZxhHLWyvZMl1CsC4zEcHpztvuwzBspR7bami+YsLj86ZNmA7SNe
jMFZ7gnBFeBKfC8kJpw+tQKBgGhu2fwDz8EAwemzGSZSmbsLQOb92j2i567m9ZvY
OHFdMJUzXc1d0d1knyjm+ctCubgQs1B0soDfRmrYf/FL81W8oWq5peTWKnVh5vDK
2RtlfiZu1NGqy312ElsmwUzZYtceHinepBEIZht+yFiFFEY2ZhtkhWQHQxllcmFC
kqnhAoGBAMQg9JIrBaMXohbblc72WGoSMT2JQH5BB17HTm1L6+4wsUXD2h9FsTbc
OsAlZIkRdvzKgCGhYCFc0D4zrPoKSLjHbMkVFvWGvCazA3HRRJIWDv+X7ZHVrFB3
2lvkpbXEh/c9PU/RzZtOeiugw4hIVkfivOuY9RTFQo5+4fry16AN
-----END RSA PRIVATE KEY-----
`)

func reverselogproxyKeyBytes() ([]byte, error) {
	return _reverselogproxyKey, nil
}

func reverselogproxyKey() (*asset, error) {
	bytes, err := reverselogproxyKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKDCCAhCgAwIBAgIQLcDzQWHIMnpRa4iYOxoPaTANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNjE5NTUzN1oXDTQzMDcx
NjE5NTUzMVowFTETMBEGA1UEAxMKcmxwZ2F0ZXdheTCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALXJEdKNiIacXOKilvCr3Q6G78ZOePux/bXjcWjvCDHG
GNX1B6djulPQIGQB1ehD0nw9xkG/Jjd8yOHmRg9d18nSSzwsGXVtC+gv9OI0j4fF
bwJdSaKNfiWKO+ocje7rn4wKHX1un4NAydoMzkwAMnUNBbuLQcJaOqMlp+V+h2dV
HC12c6neE19XiwR2ffpg753BRJ/yXq1PLJWNVKmI828z+KsoJgxp78mRcs8WbUo1
hCsoCLV95RJrEox1EgPfi2rhx+0SshszWhK4NZlx+21sTzF1BB6NjwcQUDdg1zVJ
8LFJkrJabrB+3yyjIr6DitPU40PKTUaQet8f8OoDE18CAwEAAaNxMG8wDgYDVR0P
AQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4E
FgQUV5c73aiaGRGAZyalBqEfUnlceOAwHwYDVR0jBBgwFoAUu54d5Dm57MjTKC4q
QM3dJTzYOtgwDQYJKoZIhvcNAQELBQADggIBAFhqPQ6wKVcpJkzNtuoOxS+Im9Ml
0VZDaknHS2lliDMeob+WE0gfbuRsiXAXrZZe0uRrcMg2PX9EBzjB9BMXcl09WTpH
qSYk1CRRUYX4Iv7K7VUBjkt1f0wKh/YsAsDoeBCg0TiYSNsmH9x5lwpgrbMMdcLk
HLhQXABKYumY4tuELxC3vJyxY+tNOJvdU/Z/I/6Pou+/iUP2WU0tzj0RszCEttgM
BZF6+Mb3DrzOau5OwaWB6kpDeTvwfklAsIzY+CDfzL+uuWchVLzD9FYeTXq0U9Rv
imTq36uFJWZXKT+Nd/TYWCvcAvqckdQzSckwa59OhV2enGQg7X3x78nKRV80zmHs
D4EzWQwW+RtVQ73rsdF48q1J7XVF7qIL8I2GJo3yS1Reu6lBqPC+hlo0wYUWVAQ7
CocWFb0b9RTLNatQvDqnwnc0cB3QMszZEH0SDj30hZ9SFLkJ7WZEbJfr/QaldgGe
RHIxsTcjOGzW10gIYf+GUProc5os3nbx1QzoH/xGgRTLaN2vQy2RywKJcs8pvGz8
1uzG+2wET3NvXNhpuRjTthq8cl3lxJuhN7t2XQLFNelGADFp098zMtdkslgTtt2y
572KhAUVB6R/gRB8/js32XJbHvv9r16ksGqsIjjwbZjA7o8YSgnT0kc9s+CFcz6m
ezdu+lXEos1b+n/Y
-----END CERTIFICATE-----
`)

func rlpgatewayCrtBytes() ([]byte, error) {
	return _rlpgatewayCrt, nil
}

func rlpgatewayCrt() (*asset, error) {
	bytes, err := rlpgatewayCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.crt", size: 1501, mode: os.FileMode(292), modTime: time.Unix(1531770937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWjCCAUICAQAwFTETMBEGA1UEAxMKcmxwZ2F0ZXdheTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBALXJEdKNiIacXOKilvCr3Q6G78ZOePux/bXjcWjv
CDHGGNX1B6djulPQIGQB1ehD0nw9xkG/Jjd8yOHmRg9d18nSSzwsGXVtC+gv9OI0
j4fFbwJdSaKNfiWKO+ocje7rn4wKHX1un4NAydoMzkwAMnUNBbuLQcJaOqMlp+V+
h2dVHC12c6neE19XiwR2ffpg753BRJ/yXq1PLJWNVKmI828z+KsoJgxp78mRcs8W
bUo1hCsoCLV95RJrEox1EgPfi2rhx+0SshszWhK4NZlx+21sTzF1BB6NjwcQUDdg
1zVJ8LFJkrJabrB+3yyjIr6DitPU40PKTUaQet8f8OoDE18CAwEAAaAAMA0GCSqG
SIb3DQEBCwUAA4IBAQB/IraSG3p//HWrWae2455+0XP86DyXrglMCrkzLC5rJCoQ
t6cRCkg5CSXb1l3WGBQ9Avekaua/G6kwSu3f67u0wZVt1hrgd8P4nJvfR6TP82i7
F5ZaVY+//KXKrfB/G8gaikqtLEAhMOMZm3ehSOOmlAqSrX0KFhjoqkerifBDJ//p
ooVkhie2UiGmdHXbNO8drqrsveBuKdIv+AUMcwDAntyqSmkxVpMSeM/fzOxODWTT
I1H/YuMt3beqvY/QhSdqrJNr0f8KEHTT4g8i64V49um2Y8Vn9ooIxCnKW2pWf3iO
IZUzwZWgcioZovfPWd5fmi+kWC/qpjrJWsEVu9tM
-----END CERTIFICATE REQUEST-----
`)

func rlpgatewayCsrBytes() ([]byte, error) {
	return _rlpgatewayCsr, nil
}

func rlpgatewayCsr() (*asset, error) {
	bytes, err := rlpgatewayCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.csr", size: 891, mode: os.FileMode(292), modTime: time.Unix(1531770937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAtckR0o2Ihpxc4qKW8KvdDobvxk54+7H9teNxaO8IMcYY1fUH
p2O6U9AgZAHV6EPSfD3GQb8mN3zI4eZGD13XydJLPCwZdW0L6C/04jSPh8VvAl1J
oo1+JYo76hyN7uufjAodfW6fg0DJ2gzOTAAydQ0Fu4tBwlo6oyWn5X6HZ1UcLXZz
qd4TX1eLBHZ9+mDvncFEn/JerU8slY1UqYjzbzP4qygmDGnvyZFyzxZtSjWEKygI
tX3lEmsSjHUSA9+LauHH7RKyGzNaErg1mXH7bWxPMXUEHo2PBxBQN2DXNUnwsUmS
slpusH7fLKMivoOK09TjQ8pNRpB63x/w6gMTXwIDAQABAoIBAEcRLWOIK2ictn9v
mtzKA6jLPe/j+85CXnJ+UXb5g9WZoVn76hsZlN1xT0hpo0ujQCWMLPbFGNa2dP5D
fP5C7Lqc+Qa0ItvSXsZOAUlxzO8CU4y0FbZz5G4epZ+3vBE8kmo4BiFkXv38FS2m
tfvmU9OI3MXeAj5N8gCYFxRUK/FMHwPcZ51Q5eqxHs7yS6CYlhC3nljyGMFcPkFk
qcZU2rqvO160sZy++FXU6JtN6VPOphHcyHl9dNhHiCINqRX7+Kq5Ye4nVpVqcq+d
vST38Y4wkgMJIEiQ/Q5VGitKg0ykdbvZ5P6pg+0pE9U/SJBn0fopxnmJUe0muhVA
nePZoyECgYEA2QjYqKjzMlaYhSqGZxyYUK7GZOFeT6ymKooii5d/eIYOQ3TeOuYo
/kpwYgOzBP8rxg4i2yWckIheSx+z2/lytjj8O8eu+Dm+bxUkecjUksEulz/iTb6a
bHP4DDsXSWvqPYXNz8m0PFkqWLBzvQtLUL7jgNf1eO4MgIyK0LFO5o8CgYEA1mwi
Lfw0y8uyJf6JavVcuQTimm+HXKyegB1kqKWo3mdaqfOxVy0phZEukfTW0QAChRCm
3zk7Yg0CO8iU2yio5aJsgpvHneVnNUn4XQ45NLGyAticuJN5ieBrdlmp9XhSneoH
5d/hnK1ZfcdsGW+NIibPi7v1KxcDQtVUCa9w7jECgYBhvVQlEIEFaG4jenUwtnX5
z9vUzpG0e+IRQkgwaTekxWpjApyaFdDcRBW8bkIOvAOwm+kinBuYE3Gzj0FmjT4V
xjABk/m+G/Mg/3p/xevFc25R+xklPfM5aDiK+YmRLSI+NqXrL8EVdGpXqo9U0WNH
p8+41IjdvwauVZymQ1NvDQKBgFMS2/8y+oWGqsO7pSPyYfUw5lZtJWWLX3FFcg1A
+XcJVgAIcUnULoUYJZHY6S1aMp+5Pt23P8GSRq5A3SM30o/9aMsFbcZH7b+go//x
lcpLmisuHzIHuQvpDdlxjb6T2nZiCKNQJQndw5FOpRwJswVrQffiX29NYC8RlZiX
B0rRAoGAcEo1KNef2Dl8vKEhmJ8N59p2ep2Fa1g3SzUQ4gHvWfrmxskoL5S8EiLg
OCMAwDpfJma6NSVAgJvhwqff4HY1Xv4OREoh/YO/2ZZcJpWqY7pXjc5DsBXlFJdR
XnQrj62KnwoTdeftc44aabHs9HcFOH2vhF7GA2qffhd37nn3+p4=
-----END RSA PRIVATE KEY-----
`)

func rlpgatewayKeyBytes() ([]byte, error) {
	return _rlpgatewayKey, nil
}

func rlpgatewayKey() (*asset, error) {
	bytes, err := rlpgatewayKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531770937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEMDCCAhigAwIBAgIRAPFR9vNdVaha0i83IirXqOYwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTYxOTU1MzZaFw00MzA3
MTYxOTU1MzFaMBwxGjAYBgNVBAMTEXN5c2xvZ2RyYWluYmluZGVyMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA23taI/v9KjgDMjyk/9Q+JNxx1Q7m6xch
N57mxjdu2k7hSAFOswLZ2hdho6C0F8Y/zyCINML0OYVMXQjKmGHtg+NfyGCAtZ91
9bNwCBX/1quESz6ZnXBc0ARdmXkdVdeIMrigdMiRGLQZnl2nBmS8PbA0nL0hggUB
7QGjRbyVatbj+g11th0u0Hr0hqvSEA6xgmDIBE67FvYvPUxZvgl5jGYLgxrdx4dT
FhRgyjDYVe/X3B4ZTociNuJbCK4e75AUYM4zvVtyN45MF/9JkEMkSOBjNtASn4uk
iceK3HivLO2uufCvjt3fRTdHDHMMJ0V2tKuUhhQlDbzCOUoPIuffsQIDAQABo3Ew
bzAOBgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
MB0GA1UdDgQWBBT5gMYzeQfQcT1U1D5512w+kQNdOjAfBgNVHSMEGDAWgBS7nh3k
ObnsyNMoLipAzd0lPNg62DANBgkqhkiG9w0BAQsFAAOCAgEAAq6hDtQhFnAbEsv/
gR6ZJ57vw9DnDpDgX6yTJTiEg0Ncy3fasBl3X2NlQVWK6Iy0jSyKFju6LfYJU8AV
ndZ4XLE5FgohiaD10JA9uBW8cHMxiLKMdbdk8t5NyUckq/mzOn0NwtW+bmrtfpKb
Iv53HVINX2/HRenzibaaRP26aHiJ6huRPLZgFnyIsNeug3SOn2m3I/GrSUuRE7Bh
iJAADTboOpX7Jzrpai9XOdQzc8KZbgXdL8at0vI4sjYFhW6GzSufhMg/NMveAHFg
T7m7XqfInkV8EBYztMX+JvmZhVyQEdAs8ovjruFRP2eA/cMyVqLwlsF5RbSXC5Ro
rOb3I+Zof0GmXF36z3hZzA19ZJYj5riAO61/RXXROLNSTHTHEJmLmX5sJ3r8FxXD
DfQ/Lkali4f1c5nlvGpC6uBOaZhSgemBJ9yw4dJPoYkz8SDA6nBayb3etVMkbL2R
IM13ZLMhy4mYzF+MQPDbdLdk3V7hzsEaoi3ElmOPe0mYfV7OLjzCAgq8JJpUpqtj
JLgytkRHmTd+n9cJJsB4p8qYfEOBB+3vBd0YciMkuzhctV5Qivn1CwRqL3Nmpc8R
KjLZq5XA/C2Y+KQL8aLJHvQz67SFL6GTQO+w3DiAhrsSei8hkkW8Q+N50WWSz2Ea
px6ph3jkNFTfNFhn1sOEaSumLtE=
-----END CERTIFICATE-----
`)

func syslogdrainbinderCrtBytes() ([]byte, error) {
	return _syslogdrainbinderCrt, nil
}

func syslogdrainbinderCrt() (*asset, error) {
	bytes, err := syslogdrainbinderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1531770936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDbe1oj+/0qOAMyPKT/1D4k3HHVDubr
FyE3nubGN27aTuFIAU6zAtnaF2GjoLQXxj/PIIg0wvQ5hUxdCMqYYe2D41/IYIC1
n3X1s3AIFf/Wq4RLPpmdcFzQBF2ZeR1V14gyuKB0yJEYtBmeXacGZLw9sDScvSGC
BQHtAaNFvJVq1uP6DXW2HS7QevSGq9IQDrGCYMgETrsW9i89TFm+CXmMZguDGt3H
h1MWFGDKMNhV79fcHhlOhyI24lsIrh7vkBRgzjO9W3I3jkwX/0mQQyRI4GM20BKf
i6SJx4rceK8s7a658K+O3d9FN0cMcwwnRXa0q5SGFCUNvMI5Sg8i59+xAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAyt3sIbFJH3hntMQySEj34ON67cOlWdr1EiLt
dLMmZAJmaYi7nHzY3BQRHGa1kbKBQ7HW5YvjMcg5YA0ZfVyxB1tq1Ry5/EZhFIm+
YSGV2V8K1mvVaL23DS/t8NPjphFmhJ0nbal65Y+UcbFNUoNu/PvnRZErvh1DRqQr
SBL+ljc5SHzQMaUNbDxZ/ReyeGjw6cV4E7uVqxA2PDI3cA01CTmMsUF6lIvFmB87
dera8Qb0rlUk4SqW7Fo+m3TZRaF2ufYVbOrCCiFeIDh1BI1/+zCTHDo7b4LABAV2
mOlblX3/adT0Gbvp3NTU7f01KSSOVbwTR6UavaZFOxlfBaI9bw==
-----END CERTIFICATE REQUEST-----
`)

func syslogdrainbinderCsrBytes() ([]byte, error) {
	return _syslogdrainbinderCsr, nil
}

func syslogdrainbinderCsr() (*asset, error) {
	bytes, err := syslogdrainbinderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1531770936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA23taI/v9KjgDMjyk/9Q+JNxx1Q7m6xchN57mxjdu2k7hSAFO
swLZ2hdho6C0F8Y/zyCINML0OYVMXQjKmGHtg+NfyGCAtZ919bNwCBX/1quESz6Z
nXBc0ARdmXkdVdeIMrigdMiRGLQZnl2nBmS8PbA0nL0hggUB7QGjRbyVatbj+g11
th0u0Hr0hqvSEA6xgmDIBE67FvYvPUxZvgl5jGYLgxrdx4dTFhRgyjDYVe/X3B4Z
TociNuJbCK4e75AUYM4zvVtyN45MF/9JkEMkSOBjNtASn4ukiceK3HivLO2uufCv
jt3fRTdHDHMMJ0V2tKuUhhQlDbzCOUoPIuffsQIDAQABAoIBAQCHj1KHczZUgzAG
MUq/8DlJzxZHv+KERU7w6aYju00ubRXbwWL4UcR4XYSi6bkSDhKPPcqiu97YQCqA
M9Pd9m4aza71NhWJGCplTSTe+aeA0YLuboW2phXNLUUaa6HgyTSID1ybhN2JYoOI
OtPUsRdLCrAUNwShJ7KeziooAmhPCbGIM7tACE8HfyzARn0YrmmaV95SvE736eqW
FiR70X+LrVNVaxSJDZed6KozVXPbvDX59XuScZQC48tPEG6PyjfUMjL+Jp78N20g
18PiXId9/2vvWEx36DIPysvTf/fQ0Lh/3ccesF8Ex5R9akZMTIhQ0bjcAA4nwk7r
rk53MoG5AoGBAN+EFnZrjZwHpA6myz+/XH9LukXcsfht7IImgtEAZUS5Ak/2V5Kt
lJTyDe83woU0c6AxLXPtOJXYL+bornF0nfB+xetAnCQTJwVZXgAnLjIi5PBH+6Or
1c7izJGXt8+ojP4+O8/9NYDFXexBkUASb+GzLRcwOAR29WsacGHgXoCfAoGBAPth
LL7ig6OIZ6mUuPwQmEbgfWU8U8DMrTj4+2EwJswMRBQs9Tf5t9hw2jw4G5TCFlH2
r0raT6IcPcRJt13XetnvZuoPurTe7vB6UhM41iUyHozIRk/pEYN8Rb5StNXzGjBl
tVxCIzqu6V9qasX7I6WXsuvMrWbHUm90+y7DDi2vAoGBAM2NfdLdyldJt5g50AUK
CRiQHfgNpCXhgXWX0QpAIOF4eyXqWFLuCwyHJkVutBcoS4VwdGp+KGG1dSgXqAVy
x6TaEU3uFyod6u7CZu4hGhzFdmF68XJtnq0qahMiwcnZKgDOXtdB96g62cth6SBR
VE7uJnOCxqFkfQJISD3ax03lAoGBAM35ApPpwBkH1ICUFrqa0lsI6FZCBxIr4yeS
g09QCAobZtDtQYQ6/hO/7GF5S8go++bu7RS1KpjW8RlbmX6v576YtcfFWaOII1ox
r/yGDpltprCODWa+vxXwhqj61aeUyPms7NyKaJlV5mzDInfUXpH5aaZiEBbt7TLc
NFBNjNmLAoGAYIp4NMcckqMkqc+QiVrsIrnzNw0q4gYyK6OB12vG64J1bskZjFPu
37S4lu/ZlAvCuqFmSA7sp9yAiTl/A+jTh5cC4BiPiJnnmPHlt7dUNwTqcATyf07X
OAmvG81To2t1SmDsUCV3jFGOCWNaylQGfWrs7mtw1y2Ail3gH8vpimM=
-----END RSA PRIVATE KEY-----
`)

func syslogdrainbinderKeyBytes() ([]byte, error) {
	return _syslogdrainbinderKey, nil
}

func syslogdrainbinderKey() (*asset, error) {
	bytes, err := syslogdrainbinderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531770936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQeY+pmmdhltsfherlvl9C4TANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNjE5NTUzNVoXDTQzMDcx
NjE5NTUzMVowHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDrIx2jiyy7xY88MXdT38LlOACo6yNAmBLW
ximKTAgRL0G4v2EDuL1TjeqdrF6wTisKUstkEFBGskrzB7TgBSRoGI95ygvivHoc
QQzsg1u9OesDIkCe+4Lcp0MC2SaA5NXhbLp73kxt63UVuoSO2ONehzPUO2qwlMZB
tpuM4Tq3TcJucF5fdk0E5d7tLkdfxeQurGvpFsTm07Du289VDu1g5M7Fl6Uch6Jr
YpAbWwg5Mohez5QGsqV6u4gIsN5HSzPOBXpQYTm6z2tTtXJppef+TpZX96lA+/pY
d+p65iBrand5GT0HXNi8WXid/i1hPCgJFyA6ZLE8Dl1skG0eOKjHAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFFED9VzkgfEV81MgUOOnXSvD3qUBMB8GA1UdIwQYMBaAFLueHeQ5
uezI0yguKkDN3SU82DrYMA0GCSqGSIb3DQEBCwUAA4ICAQB5HUbvV64PtMbWJ5Ji
NGMEygEWXuxf/UZ1mPA2ez9yeGe+7sRGwUpMSlPatyhun9LYmxO/Vj9kRTuUBw9A
pp4VDfF4652LlLoxQ2RXcxwg0hwRO9mCoGdSTfzXvxlykuw4QAN0TTf4rueZcZZK
6X6bHs/cE95EPNlfoZsIgztmhi/FjyA1uiziZGnZ1zWfTaw5JdYbr6RfMv3zicdn
1hJJY0KkI7dpSPm7YCW3C0qcE/TtgVa29tiKNoNU6yaE1/1xKTMzbagvLy+sPo1o
NM15GntA04mLV/IE5Px5mQLi4dFm8O+H/CACdiaowsJiwecmZhxSVTdc1KoPVZOv
k2u/ekps1MQ8ixD64IkP6aE/3WlDe4ud3ixC0dkRL5xrhdGAIZwKwDipJsKceb0u
pKQnWjmLFgTQE2Fqnh6kz4OD4rxxoldZifNGNkUniwV0sSkzu7FE/2rSPeE890NU
It0FZJhj2LIKoYSiLlo5bKkTO2bK/GXDjDVjqySSNdPVtufUmnKLYBpuC3WUlczO
CuoQelNkouSB8kiSRH6hzkH6BIgmMirx2yfhQ6BVBB2zfdou1+u4kuHAtxc5Me2R
iBCal814QTbqSKzpjNVGYQmLeM3XIsRTqAzgp5iCl1yKpkOa5L3+oNk9ogZGpssn
/7MAVZKbkcKLl9tOvNaGJAdzNA==
-----END CERTIFICATE-----
`)

func trafficcontrollerCrtBytes() ([]byte, error) {
	return _trafficcontrollerCrt, nil
}

func trafficcontrollerCrt() (*asset, error) {
	bytes, err := trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDrIx2jiyy7xY88MXdT38LlOACo6yNA
mBLWximKTAgRL0G4v2EDuL1TjeqdrF6wTisKUstkEFBGskrzB7TgBSRoGI95ygvi
vHocQQzsg1u9OesDIkCe+4Lcp0MC2SaA5NXhbLp73kxt63UVuoSO2ONehzPUO2qw
lMZBtpuM4Tq3TcJucF5fdk0E5d7tLkdfxeQurGvpFsTm07Du289VDu1g5M7Fl6Uc
h6JrYpAbWwg5Mohez5QGsqV6u4gIsN5HSzPOBXpQYTm6z2tTtXJppef+TpZX96lA
+/pYd+p65iBrand5GT0HXNi8WXid/i1hPCgJFyA6ZLE8Dl1skG0eOKjHAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAvnEo1k8pKyuSeM9uNcd0AvO7bNZJgGY8olwe
ye7pr9RmY5J1dGDXaRPyTSj2mxftD/1wq3MX/7g4d/n2TZtF1XlIEqHmO2b4TVhK
lxntV9nY7YvebsnHs/cnlBc8lnRCMF0iFg6/d6mSGrups/rr1w0/kW0lF9kEl5l4
5ox24N+b1uSrlxtKt/iSxOC6hFdkY95d7FPw94tf0XQbRTQbRr6gEKW4hCNX4GXP
J92HFZ/jm1nfSpSiXPzIEzuWWosxtj03oAn0ypPQg1oQnmVPoHXlGkvwtqhJ8rqy
WVsd3k8SGzRlHFlJu4u6p+lnQNqoDLFlqSoAEogY4ZyoutpUug==
-----END CERTIFICATE REQUEST-----
`)

func trafficcontrollerCsrBytes() ([]byte, error) {
	return _trafficcontrollerCsr, nil
}

func trafficcontrollerCsr() (*asset, error) {
	bytes, err := trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEA6yMdo4ssu8WPPDF3U9/C5TgAqOsjQJgS1sYpikwIES9BuL9h
A7i9U43qnaxesE4rClLLZBBQRrJK8we04AUkaBiPecoL4rx6HEEM7INbvTnrAyJA
nvuC3KdDAtkmgOTV4Wy6e95Mbet1FbqEjtjjXocz1DtqsJTGQbabjOE6t03CbnBe
X3ZNBOXe7S5HX8XkLqxr6RbE5tOw7tvPVQ7tYOTOxZelHIeia2KQG1sIOTKIXs+U
BrKleruICLDeR0szzgV6UGE5us9rU7VyaaXn/k6WV/epQPv6WHfqeuYga2p3eRk9
B1zYvFl4nf4tYTwoCRcgOmSxPA5dbJBtHjioxwIDAQABAoIBAGWiFQKGenxi5Qlo
fCJlulDnRum8UM1vrdzlZDkhqe77lRWsqts386V01u71/SuJbfMVXFJQ9tHH6Ltp
HlYiAt13mDRVD5QeUU17FIH6OSHuMdV17aaKIcMMDNvjTlAyGPxJycUWjcSJHF+a
8gboWkaWe+GFGRVgCN2Id22KQJ3Pi1kR3jqBlrZUrApWXs92Ca/8jAAkRe0l6mk1
HOffevDfJWO0Hr8i59L/+iIEZJRH5HARhUncXgDycTgdajDorc1WITIZhvUWIR65
91JEiHbuA3pTJN0dKUBxngNJ8WSkCxQy3fKuoG6eJxRXCEQFIS/gvnhXog0fvA3J
rK+wJpECgYEA8kvLen1ysyW/50qjLu18AuUqeNq6eDWv0yGq8VuXkZP9+DV7fc8E
bAH1QCgUXzlrBPJwg61pyw+pYraC7eGSpCHb/tYW1/I1h5A0+lC31Zu1i6VCD8og
2fqLjINQ//rGRjIsLKZdC5ewCWUxG0pDiKDt7mFkoylHMTyQwxzlQw8CgYEA+G+q
zEGFpWLM6QfSIKBxiyAK1Ca7UTmRnpo72K3B1jd4DB6R0LbF9mbA9eJs+2UxG57/
rkpbqTv90cHI2Eq6R+qFJuwpyKr53TaCicpTISXfLTxS7/nllE0WhaH7QqHF96vI
bzYl63FwBex2PBOdYU1pPTBPC+y2/DQj5kDw3skCgYBlRy1cnAdPvt3CTj57pSUL
CMOCFNuQ19AQzqfnj0OBxHyKPcDKy7erdf4PvTEWxKdpP/Wr9Nad3IQPEP8VdA6Z
sNWGZfLSfRnG+o5Ke2b8UMPIBWHhu7mTo9ik+VboSOiL+vjgCQInkFYy9ytZnucv
uyT5WZh5Yw2xFQHlrLRgHQKBgEzkYvytGuxBVCKb5RFsFzh0RmW7Ryawpr1sBzHd
Na1Tpbg6je8HYuYMj5SK7Cgy/awK3h/Xq98JTlnpnHw1RMqVb3jIh3YwVP1+rZBw
KqKL0jNyBEl6EvB/m4ToyZep8lfhtzuUitAAYCe1NDML7x36k6P4m76ZGVmd2a6e
Uu7hAoGADaZe1whiDQyrh0BtxY2MQXz5SOfK+KrNz0GHiqfuKoZckCzH/OE+hRGU
lHnle0UzncQINQYBCkwrLp5nPLxfljLjrWgXtBeIVYNo/+8AhEbY/hb8sw2Umhc2
MFXsXE8fRLbJsGPuFSyGZyCOBqDlxjYy6L9pIk/O0qL3l3ciQxY=
-----END RSA PRIVATE KEY-----
`)

func trafficcontrollerKeyBytes() ([]byte, error) {
	return _trafficcontrollerKey, nil
}

func trafficcontrollerKey() (*asset, error) {
	bytes, err := trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531770935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cc_trafficcontroller.crt": cc_trafficcontrollerCrt,
	"cc_trafficcontroller.csr": cc_trafficcontrollerCsr,
	"cc_trafficcontroller.key": cc_trafficcontrollerKey,
	"doppler.crt": dopplerCrt,
	"doppler.csr": dopplerCsr,
	"doppler.key": dopplerKey,
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"metron.crt": metronCrt,
	"metron.csr": metronCsr,
	"metron.key": metronKey,
	"reverselogproxy.crt": reverselogproxyCrt,
	"reverselogproxy.csr": reverselogproxyCsr,
	"reverselogproxy.key": reverselogproxyKey,
	"rlpgateway.crt": rlpgatewayCrt,
	"rlpgateway.csr": rlpgatewayCsr,
	"rlpgateway.key": rlpgatewayKey,
	"syslogdrainbinder.crt": syslogdrainbinderCrt,
	"syslogdrainbinder.csr": syslogdrainbinderCsr,
	"syslogdrainbinder.key": syslogdrainbinderKey,
	"trafficcontroller.crt": trafficcontrollerCrt,
	"trafficcontroller.csr": trafficcontrollerCsr,
	"trafficcontroller.key": trafficcontrollerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cc_trafficcontroller.crt": &bintree{cc_trafficcontrollerCrt, map[string]*bintree{}},
	"cc_trafficcontroller.csr": &bintree{cc_trafficcontrollerCsr, map[string]*bintree{}},
	"cc_trafficcontroller.key": &bintree{cc_trafficcontrollerKey, map[string]*bintree{}},
	"doppler.crt": &bintree{dopplerCrt, map[string]*bintree{}},
	"doppler.csr": &bintree{dopplerCsr, map[string]*bintree{}},
	"doppler.key": &bintree{dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl": &bintree{loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": &bintree{loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": &bintree{loggregatorCaKey, map[string]*bintree{}},
	"metron.crt": &bintree{metronCrt, map[string]*bintree{}},
	"metron.csr": &bintree{metronCsr, map[string]*bintree{}},
	"metron.key": &bintree{metronKey, map[string]*bintree{}},
	"reverselogproxy.crt": &bintree{reverselogproxyCrt, map[string]*bintree{}},
	"reverselogproxy.csr": &bintree{reverselogproxyCsr, map[string]*bintree{}},
	"reverselogproxy.key": &bintree{reverselogproxyKey, map[string]*bintree{}},
	"rlpgateway.crt": &bintree{rlpgatewayCrt, map[string]*bintree{}},
	"rlpgateway.csr": &bintree{rlpgatewayCsr, map[string]*bintree{}},
	"rlpgateway.key": &bintree{rlpgatewayKey, map[string]*bintree{}},
	"syslogdrainbinder.crt": &bintree{syslogdrainbinderCrt, map[string]*bintree{}},
	"syslogdrainbinder.csr": &bintree{syslogdrainbinderCsr, map[string]*bintree{}},
	"syslogdrainbinder.key": &bintree{syslogdrainbinderKey, map[string]*bintree{}},
	"trafficcontroller.crt": &bintree{trafficcontrollerCrt, map[string]*bintree{}},
	"trafficcontroller.csr": &bintree{trafficcontrollerCsr, map[string]*bintree{}},
	"trafficcontroller.key": &bintree{trafficcontrollerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

