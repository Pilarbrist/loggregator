// Code generated by go-bindata.
// sources:
// loggregator-certs/cc_trafficcontroller.crt
// loggregator-certs/cc_trafficcontroller.csr
// loggregator-certs/cc_trafficcontroller.key
// loggregator-certs/doppler.crt
// loggregator-certs/doppler.csr
// loggregator-certs/doppler.key
// loggregator-certs/loggregator-ca.crl
// loggregator-certs/loggregator-ca.crt
// loggregator-certs/loggregator-ca.key
// loggregator-certs/metron.crt
// loggregator-certs/metron.csr
// loggregator-certs/metron.key
// loggregator-certs/reverselogproxy.crt
// loggregator-certs/reverselogproxy.csr
// loggregator-certs/reverselogproxy.key
// loggregator-certs/rlpgateway.crt
// loggregator-certs/rlpgateway.csr
// loggregator-certs/rlpgateway.key
// loggregator-certs/syslogdrainbinder.crt
// loggregator-certs/syslogdrainbinder.csr
// loggregator-certs/syslogdrainbinder.key
// loggregator-certs/trafficcontroller.crt
// loggregator-certs/trafficcontroller.csr
// loggregator-certs/trafficcontroller.key
// DO NOT EDIT!

package testservers

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cc_trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEUDCCAjigAwIBAgIQHG4BBPq0GuuQAmuSJYr5dDANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNzIwMTI0MVoXDTQzMDcx
NzIwMTIzN1owHzEdMBsGA1UEAwwUY2NfdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDcGs6hxBcdd0UG6ysyKFD9qAUil0yA
hmQVVo10N6okM2TtQeJlsdSL40Ef98HFRMTsAVeg3tH93GM2kULZRkS3VCeZIWso
wvgiW3C+MySvkQfNh7ZW5YRDvPN9p41kI2B3iHV9haV627XnM2NVN1rI/GOrwEq6
dyXg3eP6va4VFfHBSjmGG94H2BuHptpwf7y5H8KLdv+jvNtgQ5t7hZfi82DTMtpV
vKnMtQi3m4boN5KULkBjnUTbBPTUegZnKDbaOwL/3L8ZSg0lRSoVbZoM0SwCetuR
VPPNaDgQX08Lft3DIIkd0CSbBVvf5wIplEe5q/6AQyQZXSecYLUQkEDZAgMBAAGj
gY4wgYswDgYDVR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEF
BQcDAjAdBgNVHQ4EFgQU59ZpfjMZoHIT0IfOgYkLDzQuB8IwHwYDVR0jBBgwFoAU
McV+hvBDJkbc0PSQUfCbU9V1D/gwGgYDVR0RBBMwEYIJbG9jYWxob3N0hwR/AAAB
MA0GCSqGSIb3DQEBCwUAA4ICAQCPWLXe0JRdgyv9aMt/iAdpEz1W+w0jlP79x+gz
DNNZIhBtE0hQOuYn5TvC0ncClhlBI5AuRI3NWRmpCjixYVKLs+EAcO85nYpPtTfu
chVylYWEmsLsMlpo25Kqk2FT82kU77o/RjHTOHnVm/7emOuRF+sbVEMnDyH8yvh9
oMvAdJF5cNuNbvWdtCJECxt408dEawXKuE25sUEPPJI7DqxPOsxN2b3D1tHSlVjB
cSe+nthOTpMGswBkho9HYGRh/ze1DaSjN88ltUwFpSwZAEfWKLL6QBB8+FB1GEM5
Ky9gqCZS0PZ3V4YhOFFze8XuLK/2NiAJF3wd30WyFVixQC79YRoP08SopFRY+fmL
YaI31RLTUweCytzq9Yr3Ap19bwFkuWZIkgWyw+qyWaQkfnHNn3Tvi/ON+nhHj5DY
maUUVY4TlZG+YRMzG+Ok1yZio7RZM6IhU73/smYT/q0XhQ+o/8NHsF9zDJLKiODV
djIAyDC32uNYrwfZwY5ezca0oNXA7Wup+5Yx/nLsgWaDxTpv6cjwllYnE9ygxVmh
J2jbws0Jb6bFbIRBMONc5YoWTi6EnZjn2/ucZr5j4fv/AwtGzlELZilpU03mIB+h
rrZLkC6Ow0MosFMQMm2hLYAmWq0ViAeIH3fzMkmi+gcAXqp4NeASeO7GKRi4fZst
whHUSQ==
-----END CERTIFICATE-----
`)

func cc_trafficcontrollerCrtBytes() ([]byte, error) {
	return _cc_trafficcontrollerCrt, nil
}

func cc_trafficcontrollerCrt() (*asset, error) {
	bytes, err := cc_trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.crt", size: 1558, mode: os.FileMode(292), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cc_trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICkTCCAXkCAQAwHzEdMBsGA1UEAwwUY2NfdHJhZmZpY2NvbnRyb2xsZXIwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDcGs6hxBcdd0UG6ysyKFD9qAUi
l0yAhmQVVo10N6okM2TtQeJlsdSL40Ef98HFRMTsAVeg3tH93GM2kULZRkS3VCeZ
IWsowvgiW3C+MySvkQfNh7ZW5YRDvPN9p41kI2B3iHV9haV627XnM2NVN1rI/GOr
wEq6dyXg3eP6va4VFfHBSjmGG94H2BuHptpwf7y5H8KLdv+jvNtgQ5t7hZfi82DT
MtpVvKnMtQi3m4boN5KULkBjnUTbBPTUegZnKDbaOwL/3L8ZSg0lRSoVbZoM0SwC
etuRVPPNaDgQX08Lft3DIIkd0CSbBVvf5wIplEe5q/6AQyQZXSecYLUQkEDZAgMB
AAGgLTArBgkqhkiG9w0BCQ4xHjAcMBoGA1UdEQQTMBGCCWxvY2FsaG9zdIcEfwAA
ATANBgkqhkiG9w0BAQsFAAOCAQEAoineLmpMO30hMyKcn0cvAPy515D7ZDsUn6f1
1GzRcqBIAjyMxiGi17uIJgBA9MLgcECy7vL7L8lraluBN7tW3sCAuG/b6QGNwbmM
scAzFVRtYm9uOD6z4dzdfRqAnu8vQXbKUNwfw5zHwgjndX6MpQAa/GV2rq0OllTU
xh09hibYUwFn8yCnDj0aRpndesvyBbC4Ljp+lUujlh/iKlswJ5CaqUrfcLWZ+tAd
sanXyTsdAeNpkS923JqiXl8YtW3Q32dJSr/g6T6K1IF8JuafQoIrhiLja0zon9E2
3HMhhWU8xNSx3vsJqb1gG+NyiWui+eRbc+2YakHfuSFq7nRkLQ==
-----END CERTIFICATE REQUEST-----
`)

func cc_trafficcontrollerCsrBytes() ([]byte, error) {
	return _cc_trafficcontrollerCsr, nil
}

func cc_trafficcontrollerCsr() (*asset, error) {
	bytes, err := cc_trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.csr", size: 968, mode: os.FileMode(292), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cc_trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA3BrOocQXHXdFBusrMihQ/agFIpdMgIZkFVaNdDeqJDNk7UHi
ZbHUi+NBH/fBxUTE7AFXoN7R/dxjNpFC2UZEt1QnmSFrKML4IltwvjMkr5EHzYe2
VuWEQ7zzfaeNZCNgd4h1fYWletu15zNjVTdayPxjq8BKuncl4N3j+r2uFRXxwUo5
hhveB9gbh6bacH+8uR/Ci3b/o7zbYEObe4WX4vNg0zLaVbypzLUIt5uG6DeSlC5A
Y51E2wT01HoGZyg22jsC/9y/GUoNJUUqFW2aDNEsAnrbkVTzzWg4EF9PC37dwyCJ
HdAkmwVb3+cCKZRHuav+gEMkGV0nnGC1EJBA2QIDAQABAoIBAGg11QFoKx2LW8Yz
z+bWicofJBdFlTYA6x/jM+QDeu3a230txXgqoxx8Q1hUYIz6y1WGKSwEc14DW4H5
crIWf/BgysLIvMi2zu7NZmrXIhZxz0TzbVRlJKNBsfMbQmlYCpNtq1r7zOaHYe+O
OAifxb8FKFeoGnmAchGuXQNZjTNzqHomfrRDsoq7m7V1iUkFpJIB9YT82oylPOhf
n6n7UARoVIKW74f2UamwD7aCii7E+8mQqKfFLhpHSru3j83/t3n9rHDkoIjI6/r7
ERP0HOyKVR1UyRV8F7hLB6eVWg7z3kG3vRXM2Zm14ACjGQLc8+57VqfL2czKAKiY
r2rtkBECgYEA5kPl/BH5e9HF5wTeA6z+XgfoHUbw0uFhvMFCVa7utXfSZmIPmDpK
fYKAHYTUkzwjwsjFPD+k6HeUdCwxDpIJlGsJfOvXcfsI9CsIsbLa/+rU1eojIHVV
2dHDJTdDF17e1ziV5NWBgHa54c3oWqW/aVkkML8/csW6BZXx8FjncB0CgYEA9LQ1
BCpMdCkRPHayHH/P1YRBwZM2fRJ8LJeXfqF9YfRjEHI/ctv+al2MPLLlCxveQymz
Iq4ELSr8wiPp/npHb9IlmTKlOw4Fp9/RdniGd4JIGAWynx0b3Eq+MkTCvLeGP+8a
5pHNQ6ICeup1UFE/upVfKVCwpeULAEa5jKjVbu0CgYBDIuDXUdZPx6XP6Zdhsvqn
J98BSkHE+nmosyBIIyzuM/VgbI7nb3dwiLAZ6zSfiRVUIX2AR34pWVQrWwcinGm2
oE6v4YN7dBn0NufeB6vamflcNVvwhsV1MLeZDje9hKesUI9DnQyZDAS+VW69nz3j
1V276MbzC7tlDYbw8Lrp8QKBgC30uhAyMXGPVOFaGVEo38tlr0O/dfg/RHrLbXQm
t/lxgDlSe4ACuOEY+IFdx44yiadraW0V6UriS93aCNP1+vyRJuaCkG1q0L0aV6g8
MmS3XvrD9yvSt6zDjLy8FSaEAP541UCAGWCeSID1D1sqJyHPc7O6p7JANbSzk51L
B+pxAoGBAIpMP3X3N4qeZVhhhkU+GagOz+0ZtbxKdK4/QzK3TkXFRaaHxDf/6ZS6
W9wBoVQQT832UpceqfsLbMECJ8zLiv+pOOkjZuCoIV/jDGLFJ2O1wkzNgdZi/3VZ
Msz45PY4ZSLEmw1Sd9fiYjn0WxoQj3WS8+W4N7N6NFnlXMvkCnZ2
-----END RSA PRIVATE KEY-----
`)

func cc_trafficcontrollerKeyBytes() ([]byte, error) {
	return _cc_trafficcontrollerKey, nil
}

func cc_trafficcontrollerKey() (*asset, error) {
	bytes, err := cc_trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIERDCCAiygAwIBAgIRAJIJuBpENpa321BGgYr5YlMwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTcyMDEyNDBaFw00MzA3
MTcyMDEyMzdaMBIxEDAOBgNVBAMTB2RvcHBsZXIwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQDc9MivaC2tTyeoWgzzPHY3vip6Cts4lwno171rq/BPEFKY
3NPjDbDWVISt9Wsqk+eVvM+GH0Ur/dvf5rBzGtxbqXIycGvGuE3Xb63tEucGjC/Q
FBctY8iCnVm0zLtPI5key/wIZ36MiNby0ncClNYnWo4Wz4I7jRKPh+AFVqU2WaWj
pdE5al6V4xfCFJKKx+OVMrFXglhhOjrj+evNWru8dXq+V3vbm0X3cSD75DGWH9oM
o4QPMVF9EM4AQxZHS7XH/xZc3gMwQWwt0hH2WdKZBt/2flIy/OeGHU3a5v1q5CXh
Re2NYXQ/Cm52/oWUgS6BwvSvg0hAN6vSUWo3Pn2DAgMBAAGjgY4wgYswDgYDVR0P
AQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4E
FgQUVD5JBIxXd1Fj7189LaNcUhBARrEwHwYDVR0jBBgwFoAUMcV+hvBDJkbc0PSQ
UfCbU9V1D/gwGgYDVR0RBBMwEYIJbG9jYWxob3N0hwR/AAABMA0GCSqGSIb3DQEB
CwUAA4ICAQANxZNmYG3xKDGNHVvEij0Hec6KGsvpkWsDK2/P6mESQm9wjc/6mhHq
B8Tp0ZWNBux9cS4GmRIKLOLf9HNBm7vWS6jGrmuhECVNUV7dDUhRu5iMvYrYaCif
I61jiqh2yV3rjvYIqrZjNwbCltBBLMyQ9EaYzuRSHYjhPtBqeUx1kllcVwtfTIXI
RR64lq5snP76mVngAvdtDDo+sRsoZg7GzFecFPNX0hsb/zLL4ameI9VeOQxjRan8
bEtOfqmzG6ivd9qmcIXFZz4oZ4mVm6/rPlQjCIY8Dv8QoqTdhJS4xx0uwZ2xZ7ap
Dnaxnf+VWS+26vv6p0e4yZpR0LbfVutu2Nw7WIv3zU9q27EPc/+zK/L9Rp07EiGu
Swb8Fn9cTKc14+Pj6szVHT2TZk38OBeVP5QZKWZ6HwCfVWvh0l9rcJw2DiLD3edR
hdOddbCFQeysmeVINntj9uxoN1uA50835BvegTtuZjmy8sRxz2L4E1LzyRglyPit
SB47jHJH9WnP0U3xHW25D+xJkS2H6IbAAlgkOtNdhYm5dTvgbC9dRQjaZ+aQlamR
zYdF8Hgwe+odw6UN5A7/4OGl1Yr4QCG9L5zzXydsYNKE5yGXaOXQhErIEo2iGyjE
89tF2kLHSnOCAlah4c9qH2kyiHoszp5XDNsC0mNzCKgXd1RSykz7Fg==
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1541, mode: os.FileMode(292), modTime: time.Unix(1531858360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIIChDCCAWwCAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANz0yK9oLa1PJ6haDPM8dje+KnoK2ziXCejXvWur8E8Q
Upjc0+MNsNZUhK31ayqT55W8z4YfRSv929/msHMa3FupcjJwa8a4Tddvre0S5waM
L9AUFy1jyIKdWbTMu08jmR7L/AhnfoyI1vLSdwKU1idajhbPgjuNEo+H4AVWpTZZ
paOl0TlqXpXjF8IUkorH45UysVeCWGE6OuP5681au7x1er5Xe9ubRfdxIPvkMZYf
2gyjhA8xUX0QzgBDFkdLtcf/FlzeAzBBbC3SEfZZ0pkG3/Z+UjL854YdTdrm/Wrk
JeFF7Y1hdD8Kbnb+hZSBLoHC9K+DSEA3q9JRajc+fYMCAwEAAaAtMCsGCSqGSIb3
DQEJDjEeMBwwGgYDVR0RBBMwEYIJbG9jYWxob3N0hwR/AAABMA0GCSqGSIb3DQEB
CwUAA4IBAQCpfNiU+TC70yzDT29RsJUPZ5fGc/BeHW/xjA0WBpstZ7ERT5zWc2T7
Lfmyim8e5clZkn5iB3pOtdyh567u21R8wiwttm/uygtYqc5DqCXLWGKoeN+2eToW
Pnjh+t54TMnGP8b1OsfXfayFfnADXwHIfpTbCwLqI0t9n0/1L2n2LX4Qu/5QCk/L
KMjUIrzJBBInNtlYuoN5+QrLGBaKKEN5XUEUKfnm3bjlwHvoh9uf+UTtUiGdluD7
a197GRxGQ739DyGHMLvm7byU2R03+6uiM+FgrMltLb5zJhDfyhE3k/wbLajUKa8Q
2p34PQYr/HpRMNephjd+MmurjpmNWDtY
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 948, mode: os.FileMode(292), modTime: time.Unix(1531858360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpgIBAAKCAQEA3PTIr2gtrU8nqFoM8zx2N74qegrbOJcJ6Ne9a6vwTxBSmNzT
4w2w1lSErfVrKpPnlbzPhh9FK/3b3+awcxrcW6lyMnBrxrhN12+t7RLnBowv0BQX
LWPIgp1ZtMy7TyOZHsv8CGd+jIjW8tJ3ApTWJ1qOFs+CO40Sj4fgBValNlmlo6XR
OWpeleMXwhSSisfjlTKxV4JYYTo64/nrzVq7vHV6vld725tF93Eg++Qxlh/aDKOE
DzFRfRDOAEMWR0u1x/8WXN4DMEFsLdIR9lnSmQbf9n5SMvznhh1N2ub9auQl4UXt
jWF0Pwpudv6FlIEugcL0r4NIQDer0lFqNz59gwIDAQABAoIBAQCwQ5Io4+m0XPXd
BmFYVP5Vv51xGGIDhfIAzsIsN9CPsgzCJz/c3JoakPf7MlHYeH8BY8sFSsLKskwK
FKTkXiQ19znDZQ2FTJfEajIMcszb2091JeHLctOM5uueIMi3/ET1XXLkXXOFttAK
i70m0Qb6A/Jf3hAdY4/P8mvStmk7rdH3K5KbI99QCqtfzBF09gzUFvdaecSMT4ul
BbNqwHI9oRW1IVY7ZLtSOpCwWxnCKDjdhMcIEG8uJSrUmvrSqTjrFRM6Gn36Nf7v
SzxlacaHM26s8wTgmLyR+4e3qt2rqxodiSHf37wKRnjGUt/aYuYIKktSXQONPiLM
tfzKdx1ZAoGBAP5IZG2/guu++aGvuR+KTguJPau6nyGdoQWpf9BjXhmLOBIA5cmu
a10l1Hm0/WGXnzhr9tB52+mK8VMBxtobtsCjZufqgLsEcZdL9mzwO9Xq4MLZhmXs
BnuZx3fDKpFmzPxBIZecRFGjr1MvUKb+IFExWW2Ny2YW1INfr7DACf1FAoGBAN5y
xrC0/7+PYx2Y7IKfNkRKZleW/w+UuQL8gjQ1UIrBu4eWb/1+IN5SFcMIB7PWXC+M
K1mLjYPiD3Q1X1VG5l2rZfmTvHeDWUnmcf3p9LL0+UaouWnh1uz8E9JThVaXNd7O
mY3F5e+gzaXhNZuTcQ454ZwvFt0QIxNl4coSn8gnAoGBAKDCccO0tPeH+FhROQ+I
p8jBTlz4kkx1VGy4+VZsy/wIOT2glaYJAFWWahs74olFi2LnVtX8hJzEu8cHs4kG
xmZJp/BtIE+cAphtbPD4fEvEv65QSZi8PGj+Es5Tc+ETBftgzfUE1WhrvJcxraK1
vQa31Vrerz3upxIbd36eGnKlAoGBAJKMuymflP320S2mmepUScQj39jEubTiHiFB
ieYrWayQhaOGELHIbo8JNR0QJULtbj5E8ipELi88t0GwB+Z+lzYOvVf3ZKq39hMh
pufJQlTD35YVglGnX5kxWT2vmKC7bdoj8jXcsudz4Qfvnwmn0Uu2BlSHEWECSJl2
/ZHLQ0jxAoGBANjQj0VACvShne8DtvvOHdcsIHN9feg7t8y3lrGUTKKKIzn0XG/7
mt3yDnSEb68uY02rnDFPuiO+Z61yBctdo3XLb6QfpSnP68k72r3f85rpWajnDDO2
3hK5eArXyVXd74onKSKICeKgSRjWacbrB5s6x5GDdj3Xtwl2OAqEkwGh
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531858360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE4MDcxNzIwMTI0MFoXDTQzMDcxNzIwMTIzOFowAKAjMCEwHwYDVR0jBBgw
FoAUMcV+hvBDJkbc0PSQUfCbU9V1D/gwDQYJKoZIhvcNAQELBQADggIBAFE3lh0y
XLmiWLL45aO395agVd7N2pCPEO7pH2+0soMjjs0JH6HeYobszcuLcD5VocArF5sk
ivZokx0V1nfA0zrGGo6deQV0m2K5pgzqlYhxk5iAFfYMS45iC7Mzt0/uutXy6MdM
JtWHJN4DuwEYNt1YzcpCMbdbjOtq4QyTJnPsaesWgcacAsrBAOU6tDxAMqUl6yXR
qT1aSxjxWN2iPh+BdI0Em90EmDizFfCS4RjNytEE1kM3FgwkuPQ2D3NSwgII/YXx
qbyP7Vzzrb0SVDutn1y0oPYXnZiRRZQlqmeL1HTTlKMqGPvhnvbr+z8GiTifzqFM
SvBZKQ+wp8kaZFLXBduIZE5hK2fNPnFnrtmzBYXm+RwpySYCpyHjHiugNyuOvTm8
05dVnaN4PHKJ6HND72LG3yVmE5el18XaHvaB6mxzMINDXd3TxQf/KHsegUf4bXEC
laSEAIMwoWRS67No02GMZpOLAiutxxQzfXXZVyZ3vrrMPsbjtS1BkgtQ4XITwpBm
ZqLSKeum/wQ1k7BMUNxGsov5tPzMLt3P/tHlNIdke9OSRr9n+68ILss8Vpp6E+A2
HB0VN9gNgkxVXaeqZvaedkqXgr99rJx11Frh0XuyXi8AO58hc0y0iFKwFGXi2JY3
MmtapLKOGFdWAcdv1fZm34uhtTQPs3bxsNaI
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1531858360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE4MDcxNzIwMTIzOFoXDTQzMDcxNzIwMTIzOFowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBALm/BJUjMDVl1QVSAaRg6W46XongHdCIrsLgJMuu3TfmC92ifIagrDgCWvKM
+0/8iXY/Dwkdwvo9j39dE1TkNtlF0OVig8dkurfWyNCvibri0g3a1rNtV0/4un++
lQYCnWtEie3EdnkHeA0Xo9YPOga6GLwk8WvKhsYltW6sq2Itp6e270tk34AY7z46
D5jJZLYn/zsupqLacSibc+dqbkNXrBwyMsR7JLI4BFZ5pzUr1cbNu6Y+iAxQtkNx
NLe5rGKDtYvsCKu/DZftZ1424+I3fFMG5tWTtiHZx4Xg8x33YBBxklWzk0L22vYt
RgP7yqN72JFuSqYxua8mks1Dj1pyvr9Tj/LcslSP93PxxKk0aQGM/QbNtufYTrbL
DgofonhM7DsJ8UYyNx60dsfzK8MZV6sUYfY6Bt+X8GYAygjEeqLaw2u3D2qeI+g8
VVYOw8KBzhyKV2gl4tjJPwy1e2WJ7Lqnh8cVn04XpTkfhQP+IPETTqAuzH5+2XSG
3mtzEcqPHxpx08jUyxIjX7ObOPxYIafuROV67U67SC+Qr1e6Bu0SqtHi/q2ywFoH
bdT5I582V6vvdUapbWGimM8dq05X6xwhZ1n1U9H/jLNgCZefdTkJg4pGjbyqbA8T
LJOiIUVlYdeBBCMQffpYaU1TD//rb+2mKxsOVs1Qik2eDNpnAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBQxxX6G
8EMmRtzQ9JBR8JtT1XUP+DANBgkqhkiG9w0BAQsFAAOCAgEAVmxULAFFSBE8j2zV
YQXE5Q3qv9FoTvDH4VCXeSJXDPvXVwVgP/btfRXHlDJA2+BozLcKh1YdG1HNeFwr
64Q3NDLCNZSm1DINTR2vwhHPFFs1GspaAKYN6sfjeGWWb9yint9hv/GF4wpheW0f
jKREb69QamI6aIKO1lujqke/cQDmiYlxOgoQvxP1d+CVMFpoqtdolO/+wx3ObJV6
P1h1fS6a6u3Xu2iju06At85ZagRyQEI905G11yCC/7wlKgXsMumsGjeXzua1VD7U
tz03jrugnKsOmSQis6AN+XNZilx3S2MC1ZKZ4kju/0GMPGUdausaAFxual/agJuA
pP7wNPmPl+c2xMP++dFGUuHxZWnHbYgxXQH7IXgC2B4n6aoraljxBMZ5ZAkxn30D
DIBrRjLgl/IrU3bkDu8K9PVezeP++Gmk9HeAYrTDtaDpxKLK96KbeBC+oU6bkMRA
vwEgLUKEH7XgYyPgbuNsrX7ypbP90Hgow1FcYk0fI/jFA+vTY999IjEnz6A1VCDp
FgJfxe2DhBQkwP5bGW5LxRTWaWWta3iY9EM55s4w/j6JswgiMNE6WorqmazviPCN
w6e283ywAcWoQ6tOanKnZp/BXZMS0+pQ6zVduRxXkP0nrGaUKySgp044om7wA7Ok
dW7kqgpCPRfrih3N9Lp91K+kWrM=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1531858360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1531858360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEQzCCAiugAwIBAgIRAKGBguRHbArKV37QRUdACTgwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTcyMDEyNDFaFw00MzA3
MTcyMDEyMzdaMBExDzANBgNVBAMTBm1ldHJvbjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBALTF0lr0vPVqdVoEjhbkE2crgvOmO3p+pQa3hj5MkrHJANdo
zG62dbYZ1ZKgHS2D8lhx+Gv5FO90+uoEkpeCnSBp9/rCy4UMiQ1j1DVmU65N4qlt
V8pYsfaSJEx8ZSrjvLbef6Uu0Z+J4Pjp1hei9+UmGPxzfY62GCoeiBTKgJmIue5n
2Ftzh/F+9RkRI/vzeCJ2T55+WhH7+B/oLPo9A6fLoGqPaez5st5Gmy6Jx0vjrD4J
GtFJQfCd5utIaqWo4L/ASEC1mxHxwkD8PBioXg8jM/ubZXUgMpWpXzSIKfJBFHfb
ebfFL+e+gX+gYN96URu/rqGpxls0NrWvfmIAsKUCAwEAAaOBjjCBizAOBgNVHQ8B
Af8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQW
BBQhRqJlVSV+5imkw1NGKMygLQ/pKDAfBgNVHSMEGDAWgBQxxX6G8EMmRtzQ9JBR
8JtT1XUP+DAaBgNVHREEEzARgglsb2NhbGhvc3SHBH8AAAEwDQYJKoZIhvcNAQEL
BQADggIBAEeJgUB03w46SnPZk0qRsBhhG2LekNkUKhgMtDHXnrOMNj9li6VIzy7c
SM07ic909TYhZfz/tOK8HcHAI/TwQhygZbLP86Cq38HwLHu1U+1CPzUNekxPELDA
grCJf+5YZVtwrRt/iFhuH6Ko5UAe/Z9uCwisGJwJaH1bZcqEqbCtgHgHsWT+d9t+
csBhwvXjkKHjw382X0QGpDqC12A86mXzVVw5Qyto1KEXvG+ToDtzyyaDaqXRFxAu
Whj0ynM6TB/b07DZbZjJVrA8mkWPERbMZVozapGdsENqxNqr4VGvkj8cXIK8mtal
vsy8MScTbH2HMD6iNYJJR7+evxSTzY+1luec7PUHYKFfLQmmjGj8/9NeBiU0LCIn
+qrOIo5H34xRfi3N61ChZYXCxHSGU6DaSKX0MEixjcY9ZLWRCkh8p9rnvjV9FnKE
ONaJhtrDCY3gAlIScorVuwib698b45wHUPqXEQrvA3AFB3v/j68o+8Bbd39JA63O
qKDlmZRz1YxObnwRHvVe3bgvsV2G860GYB1cdpFPM03hMetrbUX8C44YOFbkMLMk
qbwCrr/nRk9U2ABZYOKNXNsx5BUhgwu8aFAN9RIqAMl/wpo0VHtjT7aJA0lM14WK
EejQF3ylTzSpHBcEz4OnCXhIB4dXmAHRb2i9fvgI20Dw4tL872TE
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1537, mode: os.FileMode(292), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICgzCCAWsCAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAtMXSWvS89Wp1WgSOFuQTZyuC86Y7en6lBreGPkySsckA
12jMbrZ1thnVkqAdLYPyWHH4a/kU73T66gSSl4KdIGn3+sLLhQyJDWPUNWZTrk3i
qW1Xylix9pIkTHxlKuO8tt5/pS7Rn4ng+OnWF6L35SYY/HN9jrYYKh6IFMqAmYi5
7mfYW3OH8X71GREj+/N4InZPnn5aEfv4H+gs+j0Dp8ugao9p7Pmy3kabLonHS+Os
Pgka0UlB8J3m60hqpajgv8BIQLWbEfHCQPw8GKheDyMz+5tldSAylalfNIgp8kEU
d9t5t8Uv576Bf6Bg33pRG7+uoanGWzQ2ta9+YgCwpQIDAQABoC0wKwYJKoZIhvcN
AQkOMR4wHDAaBgNVHREEEzARgglsb2NhbGhvc3SHBH8AAAEwDQYJKoZIhvcNAQEL
BQADggEBAGhs47JmL/v4CE5UuoTsgCFCg0mRJ0GG1KNgZDh27qozmuNJMed6Vybx
9KxUqX2t9mnI2yWDz3TIa+7V409KM7lheRBAtmHwFUjd8qx1bVCjKKdpywQDvVsI
Suz6QBLOXPd/ktK5Qc51h2iUjtpiyq8SYgJQEyldI/jFzKKzqqtpegXhkV3WiLZj
JHJ3mON8a2h6V4e0dJXo4Ch0sAbZOz1lg0xU7Om/GkOmdSVOouQfej9MAWOCn5mS
5pf/9QBjgZz8wGDmxeiGUClB532oRuz0oqZ6q77oryGckbXdToLERyzzdir4B3R5
pOmwcuciQPuLWqOcRk1E80V5g1tC+z4=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 948, mode: os.FileMode(292), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAtMXSWvS89Wp1WgSOFuQTZyuC86Y7en6lBreGPkySsckA12jM
brZ1thnVkqAdLYPyWHH4a/kU73T66gSSl4KdIGn3+sLLhQyJDWPUNWZTrk3iqW1X
ylix9pIkTHxlKuO8tt5/pS7Rn4ng+OnWF6L35SYY/HN9jrYYKh6IFMqAmYi57mfY
W3OH8X71GREj+/N4InZPnn5aEfv4H+gs+j0Dp8ugao9p7Pmy3kabLonHS+OsPgka
0UlB8J3m60hqpajgv8BIQLWbEfHCQPw8GKheDyMz+5tldSAylalfNIgp8kEUd9t5
t8Uv576Bf6Bg33pRG7+uoanGWzQ2ta9+YgCwpQIDAQABAoIBAG9paF7kbTz30sGb
AxN6l7bDK18M+aViPkUogNUOjm6CCkG4dh5Z16xWubk3cyQlKQx3mXq6NbvrJeVq
0goM1tguV0Y2HgavFhyphRUwLqzDlcmD+VJdXbkwkqyNEjDf0OQHtzXP6CPib0QZ
ofhJWWziEQ4uA5kcA0KaNJZTw/RbNPERpUCO96WfLA4atv3l7yyPBx2OMmhPRSr5
dIKt12Pggduxg+eR/S7SCHbkbTc68mfMkDrqx0oSqDcYqKFoMgmS+qdaA1MW4xIg
9v5l2ByP6SCStorcB16XiAp/jmu5xqW6yXoKVG7SlNBxJTi4nOt/TEVydgmGPMFj
RQS7rbUCgYEAxp2g8bhV5Vta2IU5O7UQEY3qPyeS+rQ5FiQhGqpuryAGU10SPPA9
vpkB4zdFQHUqd0wNMAosOAYfC4bRL7AHtFnbm05dfzkMdjqgkbqK0AynyPgutnIv
/Z1LcOslep9eAPR0b6TsHDVJAhlXNsViY3osLH4LXeOQciJDLXKgUccCgYEA6QB1
IBv5fOjPMLFV9TChKU0InySWE0mYfApz3NL51ycl2aEX5XSc15+yw6j5eIx0BeSp
Y6QqV0qzeT/WxzA2lwy+AXZfxgXreb22DtRnRpCOOzcRZWKWphzwJUAAW1/kNVey
7GgFFDjh6ycLh3MTB/2KNKBfSm5yo9EfswQsajMCgYEAwnIV3DAsn9PVV77t7l9w
MM9wMo4q3hjM/rk2U6XhoL/IkZq/vTsyJ8QiTfGRce6DObISAyMicWLEyAMgDwDW
OiHy1tRcwq32XlU9WA550f9h0GXxTZrzEucIsa70zVzyqhqpV5fttBwSsuReNvf9
QAie8JwhwrSEeMjEXd0nyYcCgYAvr9VI5hDQvMEy4QiLrxE857Q9BfrlJancsTL3
XgKeQzfe67Z9UrmK8/ddTicIwg446oy0hPPZe8NxrFwj1j1F+uikWfrOB4YjG224
aUZdzdYeTm30BxJ4GvIXXZr1GJIXTMSk18E6W035l7snVKjveLehf7UhAava1UEc
nV0NuwKBgCWsa2c0AKTrFN8wZ4r0cISnhaCttvM2mSN/6RbzXl3aQYJ+cIiwFI9w
oughV8E/+4menXP5NmmVE3aHSQrj+3MCLnE5PYtZuBuK8jmougWy+gYvjU/jStOP
hk957mHWudwz9PK4imwgf0cSCs6bp0MJozLF/HCP8Sa9dc25m4g/
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIESzCCAjOgAwIBAgIQZJU/4ImTfbnhf4mQqPjn4zANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNzIwMTI0MloXDTQzMDcx
NzIwMTIzN1owGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAogzdreCu0hr6rfK5CYJx0xavLyrjanigGnL4
zIETQHzznE6wvrAAcyRBjt608Xt2CcRVUFGat3lkUwp9QUAmKu2uBC2cjtuQ42y5
u7ayOiJCCqJbENtcAWAd5YmDML5wsMj2bfYJ9McIFdLDzweHprmWBBrriVCDbYR0
AbCtb5SmysdTpmffjRGKPblDnd0dmRNRdJtRQOGnn5wQlCaqBmScAz3PzqK99UUs
BNhlIFpqHrzs1SB6eGPAqTwgjadEjlxYei9QcNQ4wrrQVr5gQ9K2S2AtjQyXLsJZ
JNhdr/qIAgkRz10iqh7KNwpJpwUABtYq/UY5nZ2giaWKmcf9eQIDAQABo4GOMIGL
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFBDfWX0Yf7xL2EHbwERwF/gtbQLaMB8GA1UdIwQYMBaAFDHFfobw
QyZG3ND0kFHwm1PVdQ/4MBoGA1UdEQQTMBGCCWxvY2FsaG9zdIcEfwAAATANBgkq
hkiG9w0BAQsFAAOCAgEAbO6ugTnYsV7Z7xfHGFdBJ1rCaynPhjOj2yCpgssckud8
QxyKjSdg4k84xn6GfrrR1SsPomiU0f3YjNXE7ArZFgaRcdJ0dtukjbQHAfBJO6xQ
h59BsO5egpZIT28b7jYnO4vrIYMqqgH5fX5mh+RKqaA8/w6eHipneyEF3k+cBuCA
HrDne5QPpQTAEOjRiWkK4rc74fZhp2ybDtYbEzTCDoMtn/KEkiZ9tgJFuNe+iomB
10ZPdOQOMX9tfE6wd3s30pcJKLOX9HsSJ+xbhe68fZdWhfSLXeP02W28BAdP8ruv
/YXo8YfI5wiNWIg6zWZAqPsaqAkNxWGaXK/inHkq2XSxchN6w2KdIbWlNkOTVBeG
IUwG0r5kzwbLxfiG/bPnTPhYPgUjPTwHVlZbPpvY3AuSOToeg+5XKTzxAo/czVft
llw83JCZG1IoQ3tKwASL0ig8QQsuYbjdrtTTO2zlgD9gJB3XI++ZaWwtBYfY9Znq
ZDmF85gYAwhtBtHxi/AqGmHqwmA1Gvd4JkZLDwZrpWkXCcAS/Fj5DJ23+iVByoSW
SAdKQfXjkelX1DT2irQVNVTElvpGAQtd8tLLfBpY6vslQ0Io7F8awPkAAkeELhHQ
1bN28S+wm1GpxXUAZJZB1VLSmmIKh7zkQ8TrPzUILFs5TMEwJ7MJIv+uYNvBvNo=
-----END CERTIFICATE-----
`)

func reverselogproxyCrtBytes() ([]byte, error) {
	return _reverselogproxyCrt, nil
}

func reverselogproxyCrt() (*asset, error) {
	bytes, err := reverselogproxyCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.crt", size: 1549, mode: os.FileMode(292), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICjDCCAXQCAQAwGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAogzdreCu0hr6rfK5CYJx0xavLyrjanig
GnL4zIETQHzznE6wvrAAcyRBjt608Xt2CcRVUFGat3lkUwp9QUAmKu2uBC2cjtuQ
42y5u7ayOiJCCqJbENtcAWAd5YmDML5wsMj2bfYJ9McIFdLDzweHprmWBBrriVCD
bYR0AbCtb5SmysdTpmffjRGKPblDnd0dmRNRdJtRQOGnn5wQlCaqBmScAz3PzqK9
9UUsBNhlIFpqHrzs1SB6eGPAqTwgjadEjlxYei9QcNQ4wrrQVr5gQ9K2S2AtjQyX
LsJZJNhdr/qIAgkRz10iqh7KNwpJpwUABtYq/UY5nZ2giaWKmcf9eQIDAQABoC0w
KwYJKoZIhvcNAQkOMR4wHDAaBgNVHREEEzARgglsb2NhbGhvc3SHBH8AAAEwDQYJ
KoZIhvcNAQELBQADggEBAAjjfLghZh2B/rOZsEdebT/T7THXtwqtopHM9plCo9D/
U50yfqj+M3QEqJdlyIdS2wJRlM1uQrapI4Fn/Oz8bA4L/uy8ip5SoOdnESH7WCQi
yicaYlKRumczBvo2kHcSmbRsBl1Q5XczVPyr4c3ZRnUrr6lB+PP+SOPUXtS4sqZT
kJNCWmO3FTqNh6ahYd5pR6jf77yjJb1c1GjLGlU1QbaBvKAzXvSiVV+KSM8Ti944
AFGQRIFvugr9pst2ritYVnQBWEHGGeW6KBXtmTUM19Q1KMTydSsU+LMzuLo0JOz+
9TVTVpn8Z4MLIn5tkShNdC13Wnz3GFJvNhIIcpEzgB4=
-----END CERTIFICATE REQUEST-----
`)

func reverselogproxyCsrBytes() ([]byte, error) {
	return _reverselogproxyCsr, nil
}

func reverselogproxyCsr() (*asset, error) {
	bytes, err := reverselogproxyCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.csr", size: 960, mode: os.FileMode(292), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAogzdreCu0hr6rfK5CYJx0xavLyrjanigGnL4zIETQHzznE6w
vrAAcyRBjt608Xt2CcRVUFGat3lkUwp9QUAmKu2uBC2cjtuQ42y5u7ayOiJCCqJb
ENtcAWAd5YmDML5wsMj2bfYJ9McIFdLDzweHprmWBBrriVCDbYR0AbCtb5SmysdT
pmffjRGKPblDnd0dmRNRdJtRQOGnn5wQlCaqBmScAz3PzqK99UUsBNhlIFpqHrzs
1SB6eGPAqTwgjadEjlxYei9QcNQ4wrrQVr5gQ9K2S2AtjQyXLsJZJNhdr/qIAgkR
z10iqh7KNwpJpwUABtYq/UY5nZ2giaWKmcf9eQIDAQABAoIBAHwJxRT2ylngdMj4
5VG2G1IsJuO/vFsfAc28+1vt4MKX4hBe20LajT2VHukw5ueATRWkxni4Pej6biRx
/vYXGB/71hs0noVq4zhxXKmmaj29QzfIllQM1BvpanjsDRMecjufV6FLlstaHYI2
1dJ+PQMNQxrZUDjG/BK0M+enSNoCguPpjp9UrdBe5HFoH4FFvTzK4XdjfLrtXaun
vT2ECzH/buojNCPhaR7OiyKwA/CmZwZWhUPbH8y2OoI6G28A0VTEjqqdOrHBsU/v
K2WzKcpLVwjVSnD+PNPyo5k+nRKyfj2LYdIggDLTd41Je7kAy8MkGKr5pEkaTRZr
0P2GOAECgYEAySgC5IrbZGFTy63Kqt45cgJbAcycoMC1lO7FYe/MIOLx7/mbeqHq
oHjmsgk5+Qi/POIrV4XnI0l41EVJtHEEe0rUIAiAwUttYOTVSatCfrD7Zhf5kt1c
NwDc//H9puL0BzFGTePil14ZsKQs3d8JlcDd8MLfL2KrLgFBgjVAzUECgYEAzjtk
tE2lW9oV3QRYP/xM8V43T0G9ttD/Q2lYTOsZRYUhoKjYVYGHCYAWABHk0Dw3F9xA
hmqOGOdmggk/qCQV2lIt1Zu7uAniCmvtl7XXNjLaaMb3DPee/rIiYsCnCW0bUdhI
8YkI/rIBVO5Um44wqzpa92FRggpz78NcA3IlyjkCgYAILUAw2hQg+HPXi7D5UR80
qzPX1uFnB25aJ3qOiJjbnV4ISzUuvvYyn7eA9S8OGHTtnKP2YtMKdCodNtPQKefs
uxX0V2Qkd1Ry49pnrDZ/v+H4PHFArw7YjYhuPv/4kLEqua4J7IGBdanFrGbGfhJ9
q+FZsBIycuhSbmqjSFbiAQKBgBI15meRb6eTs1iH2K8VvUmW8zVZbcIl5FR0ieqI
2/tqjRSdtDSgsmbhW4/4BIdqucaumTgFUrTaQg/7dxaG0TMtDIUPMl1G6iHXc+xw
jydnCCg2YXxQpUaCPk0QC+/mJYJtoctKOXQcDcgNH4V44c1M4tlzS3o7KA+k5Ywc
WT/pAoGANZ74MmJMrAehS3BPv/PDWZOvgc9yKCmZhAhREh29Ta7tZbA1M170500h
C4hyjnBbJ8C0+vRTlgG7EP58M4DkeitTwqJQ2opk1lRHaZ1Fj2TUOtBw4UBvATPd
p0gXo7IBI082PhdQ8HfNzxLg2BZtxslgEWR45IbLrFBeEglu6+A=
-----END RSA PRIVATE KEY-----
`)

func reverselogproxyKeyBytes() ([]byte, error) {
	return _reverselogproxyKey, nil
}

func reverselogproxyKey() (*asset, error) {
	bytes, err := reverselogproxyKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIERzCCAi+gAwIBAgIRAIxXD3PTq9HcsG5j9U9LOqMwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTcyMDEyNDJaFw00MzA3
MTcyMDEyMzdaMBUxEzARBgNVBAMTCnJscGdhdGV3YXkwggEiMA0GCSqGSIb3DQEB
AQUAA4IBDwAwggEKAoIBAQDAHP7o0aVakuhHq7sOIY16dg4VCSk4Up7DCiX4vRNU
HPu3gHlqSeJgdm/SUxzctuAukON4lHHwah0UuHP55DBFpIaL90UrK03WhmuFiiZQ
s7tEYXuhlq5ZFYPiqcw9jNDIgktdNkkgY0vkRVpBzzShBuNhnqkKw9XFtE+OJRkb
MxI1wfFemFwy2CBDtdwuv9CWMvqJ5wFAMB0R/C5wJbQ/d+T2Pw9XSTMfPN8UB8Qd
mdfsxPtQcjrvuUeH7X8tGsdhoPqP0J3FI6BRynoS8+e/kWMpMscnrELvdwwy9Egw
xME4QGFK87UCZ7CQsaJSx37QXLJ9FhsmcxUBRkkwGg4JAgMBAAGjgY4wgYswDgYD
VR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV
HQ4EFgQUXsmEsJt+Si7QukS22DtGmmOXPyIwHwYDVR0jBBgwFoAUMcV+hvBDJkbc
0PSQUfCbU9V1D/gwGgYDVR0RBBMwEYIJbG9jYWxob3N0hwR/AAABMA0GCSqGSIb3
DQEBCwUAA4ICAQBtVJkpLRzFOSKy0dNDHdRJf1vWsTDj4jvOrRwhsC0IP/jA/3V7
hhT78Li14teZH0B84XifLSskkk91iY71H0XFhK6BK2RUEnbd4SIS90oXlfU06iQR
r3Q7yLtiznIHT0E6/4lixoEL2DaQgK6v1LHZV2D+b4Kg7qbydZaFb4j/pPhnZgVe
5wu25/j3d4PYGaDOYGZQxp71l1JIZvAstpvRtlUd4GoZ9GbUsoUsyGX/a2NMSEtN
LEwU3jeU+eRFrit6JBwyeZPluutgpRQkY+HJ0R7qnPZ+FjHer21RRWXYlxQaylXd
RUVu0uRYbzhbAuOq/5OohoAOcOhGexml1bHAcX7l0l5wOdDxd5JCRrTzeEgjUQod
MI2iRJl/EAn8WJgvq/wIk6If/LwKaLbhTtlaOV+06F6jtFmxRp0UvDdof/2ncS+H
Oza5c1qv227OLMp2ykN0cZEqwBvblBWJKO+H2z5wSXWjT53pX5Yg/sKIaVj8ohm6
5TAzEy6yh6CEoyPdY5L5WhElZQ22sOXzU+NwkrY7Dx5RXteSsfm7DQVjoza8W0Ha
0AVRYWMie0lpX8cPODEyBpMYZ4gJ9hAMYuunLPlyeYZXXE0s7vQwy68qoahijwl5
RHWJxdrrFXyE4+htQFZkxg4VQmHhuDTcXpJkyMXAMxSVc+cbKN4yKx3BFA==
-----END CERTIFICATE-----
`)

func rlpgatewayCrtBytes() ([]byte, error) {
	return _rlpgatewayCrt, nil
}

func rlpgatewayCrt() (*asset, error) {
	bytes, err := rlpgatewayCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.crt", size: 1545, mode: os.FileMode(292), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIIChzCCAW8CAQAwFTETMBEGA1UEAxMKcmxwZ2F0ZXdheTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBAMAc/ujRpVqS6Eeruw4hjXp2DhUJKThSnsMKJfi9
E1Qc+7eAeWpJ4mB2b9JTHNy24C6Q43iUcfBqHRS4c/nkMEWkhov3RSsrTdaGa4WK
JlCzu0Rhe6GWrlkVg+KpzD2M0MiCS102SSBjS+RFWkHPNKEG42GeqQrD1cW0T44l
GRszEjXB8V6YXDLYIEO13C6/0JYy+onnAUAwHRH8LnAltD935PY/D1dJMx883xQH
xB2Z1+zE+1ByOu+5R4ftfy0ax2Gg+o/QncUjoFHKehLz57+RYykyxyesQu93DDL0
SDDEwThAYUrztQJnsJCxolLHftBcsn0WGyZzFQFGSTAaDgkCAwEAAaAtMCsGCSqG
SIb3DQEJDjEeMBwwGgYDVR0RBBMwEYIJbG9jYWxob3N0hwR/AAABMA0GCSqGSIb3
DQEBCwUAA4IBAQAkhe1B+j7U1zDVOO/Y7dm/L4VquPXgjpQRHf5pZUWgOnjf0eHu
Xy/+00Nhb6d8FIKE81Yev07u5aPqrOr8EekKCDjJk3wcexhdMZlmWpzMxZFdXk0m
yerRSAaXuvVHr4lfz2BYXW2QdC0RKMv/JOmtdirK2DOLrZfhCglubdqfVxRsgHNW
Y82+jH5S5eevEGYxNa8bqd28mfJzr/OIa0bHllglRzP19kRXGKiq8xG3n2IOLuaH
AVgbw1iHl1NR9Bh5qkQVRpm8BYmDVoDQKx3ElKmSfY7LdbYuzoWCpkeq7icAN3NJ
kOOAzYjAgLIg+rnqCalObHCs2A6Ek6q/+zcY
-----END CERTIFICATE REQUEST-----
`)

func rlpgatewayCsrBytes() ([]byte, error) {
	return _rlpgatewayCsr, nil
}

func rlpgatewayCsr() (*asset, error) {
	bytes, err := rlpgatewayCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.csr", size: 952, mode: os.FileMode(292), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAwBz+6NGlWpLoR6u7DiGNenYOFQkpOFKewwol+L0TVBz7t4B5
akniYHZv0lMc3LbgLpDjeJRx8GodFLhz+eQwRaSGi/dFKytN1oZrhYomULO7RGF7
oZauWRWD4qnMPYzQyIJLXTZJIGNL5EVaQc80oQbjYZ6pCsPVxbRPjiUZGzMSNcHx
XphcMtggQ7XcLr/QljL6iecBQDAdEfwucCW0P3fk9j8PV0kzHzzfFAfEHZnX7MT7
UHI677lHh+1/LRrHYaD6j9CdxSOgUcp6EvPnv5FjKTLHJ6xC73cMMvRIMMTBOEBh
SvO1AmewkLGiUsd+0FyyfRYbJnMVAUZJMBoOCQIDAQABAoIBADAwVcSiqb6BcSBh
NEeEJQ/dwwSFysAlAUvdJM8y5kFID9/kqw/9PnqB2uTAElJO0Qb9MwHRAo+Snn7P
EdBR68XcUh+Tw9bjQuAX0aqqj5fYrZWmejN7L3qLCgz2GJQr2UciX7Me5dLo9WVp
/Azb49CsgKbA/JgFrX6tDvOR3K1Uf9h7VhLb4dayZ8hFHpTI9oC4fWLqzknr5ZNT
qfqhJsJVMwpyEy+pjh62M9od1DP4MkiSdyhhBCfclcS2DAjl1/8maiKvEWcJ1fqE
owbK20LbBL6vV25Gkv9LnpUZMZSN08Kk9fJ7e9NXZpYfKqEnwhdmCucSMlaZwGlH
X8/SX90CgYEA5wTrpoByWCyhZAhw0aJyxk3/S8ODHO/n1PGeTQqlK/71oNYrBSfP
KMo9CHvYe2C16+z43UD57lLYmC+GKB87vFEOLceMT2PMx3Jr0JW57rrdEGjhp8dB
jbvS1KKf0qdASwGLTpexF1uJ0KWtpZ08G46G2xyIFQZDS+BTfc9Fo/MCgYEA1OMU
Y0hi5OqhdphpY+fkJ0SO2AFUeL3RaEvTkwespMoMPBBtBy8bZIpopkRwh2Pa1sry
ih86D/V9kgBvrOhPzpSTttq3ouxCgkhd9+gelFhfTWoW4PeUx/QMZoUbADNc3vrJ
rp994X1Et9NhSYY+fFujIcAvccR+OawcD411URMCgYEAnqhZcttKLFZSbNIDMWYA
r0KH76+Rj0EQFcXusvh5oXKTnOcZWowRkPD746Syc2Fi72mrLMDgJRYOnM4es9Vn
gBimxTgDm85tqBhkBTefH16ETi3JtCF7WuzAibo6S0EEPb8Mvmgdfm4mgv4V+OS4
kDBdW4QHzXCkrSqeDIxaRpMCgYEAoLcd+SX4ouEPLD07sxSphYuYWzIF13FV2esE
uwccKvvt6Jpt9PJ3N5vWDU+1tECKQYXNPMD+UHYAamyx4lMvjMFWEsFjyTebrkd7
yWAPVeaxa/wfcY73X0y639q0253rCttBzvbRTZ4Ids65r4wNOEzmBuDT8Itqz5dD
R+p/GskCgYBADf358DS6FHTopJVT9O/o/b0FtHfHjY/mfLl6QTtW+TvTmnchZ3px
mxnPE4gdMG8LDaCCESxZrj8AZZXNU6x6NX+jf2RIAapo4vhgY0vUdh/PpoUdzI6Q
obj8HvnnJHjbEA5jcltFFtdvy3U7359FoT30dEpJPu1mCZsbAcT89w==
-----END RSA PRIVATE KEY-----
`)

func rlpgatewayKeyBytes() ([]byte, error) {
	return _rlpgatewayKey, nil
}

func rlpgatewayKey() (*asset, error) {
	bytes, err := rlpgatewayKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIETjCCAjagAwIBAgIRAM5T1ACEdityhC9Flad8/m0wDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTcyMDEyNDJaFw00MzA3
MTcyMDEyMzdaMBwxGjAYBgNVBAMTEXN5c2xvZ2RyYWluYmluZGVyMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3ga6U6JqTn6H+a2ggERXnCWs0Yf2LWnJ
ZrrpFx+/p6gx5dgpbUASsbdrvph/I9Y0zfEChRGYRFZ39DcLFglnVZTCXL+GFP2u
zttbleZh7f1uMmOMdQHt3/dGUeet2t5gE1wbdT9N3HNrD3BC5ccsKGSt4wwsFK89
6CPuaZvFzP11/K28i0ZEpVBJQsvHZWRRsFo0r6iHvgW07ckK9VRXtsZT8xtmppkp
TYtfjDFNEOB+SbubMIAVy3rEOIGm6rYrjsn6lwqHzpXXwGKUityRK1nrfDa0D2QQ
eN02L4sYoE6AlAY7rnqehxQIcdaAtTSr2W8VprAAqOMj/bHDMmGNhQIDAQABo4GO
MIGLMA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH
AwIwHQYDVR0OBBYEFK+HRqx7i1qLux9V3w/elDbc9vyvMB8GA1UdIwQYMBaAFDHF
fobwQyZG3ND0kFHwm1PVdQ/4MBoGA1UdEQQTMBGCCWxvY2FsaG9zdIcEfwAAATAN
BgkqhkiG9w0BAQsFAAOCAgEAfjGkxbZGsm7VqK4jt1vpc7XB99KGRXsuhsKvpICO
h1qETOJwstGfYb04oSdU5toAnOzwAtnBaNgpZJOShoTYdi82VZbsFzipmb0EVh37
bldzrSQMlNsBLnbI6T8VUPlhnvMm9S49S9l7pf/9HIhNnKPpKMJ9sokipIa0pp6z
ZQnE7cAUUldNM/6jA+BjO0A0HNRjOF9wO9my8kokyr5gAY4uE6BTf6Z/RqFuQVOL
etGzVgKSJJ5/w581UOLp9lR2TxKXbA4w5eMlk7VAkTg372TgOREXkkho6OtnP4OB
f4DP5DFBsMH5LCAWFbEHfWUt4ldgSEgko4WEJR/sK7gE/gZkGSScL4A/3T2l2Xvw
clTM9kcAoeIEWpwtT95Zx4w6JaeSRe2X9p+1nKMrRj8rlsGQP++kWT+Z523bZuLI
1bOMTmCeP426Y+Yq0HlNVy9gG//ULuk6m/CzXQDARA9LKh/ppSYDGUXnRhyaA/4O
D3xeBA4cUMlUIvfmSWFKuAHXgxpsGEIkF3h/guoACuq98/Ky9C/ptL9KMh050jpa
mYM2133j1PtKf613z5dl4YXleTiCztE8Bd949aBtCpNK4woU8kzfWuGuFYUkRJeg
AC/EOAKJO75ca3hy/mSkzuX8Kq1MICQLOmFvmyGmp1MqPew19rbaj0fPEg+Mge3X
x5g=
-----END CERTIFICATE-----
`)

func syslogdrainbinderCrtBytes() ([]byte, error) {
	return _syslogdrainbinderCrt, nil
}

func syslogdrainbinderCrt() (*asset, error) {
	bytes, err := syslogdrainbinderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.crt", size: 1554, mode: os.FileMode(292), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICjjCCAXYCAQAwHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDeBrpTompOfof5raCARFecJazRh/Yt
aclmuukXH7+nqDHl2CltQBKxt2u+mH8j1jTN8QKFEZhEVnf0NwsWCWdVlMJcv4YU
/a7O21uV5mHt/W4yY4x1Ae3f90ZR563a3mATXBt1P03cc2sPcELlxywoZK3jDCwU
rz3oI+5pm8XM/XX8rbyLRkSlUElCy8dlZFGwWjSvqIe+BbTtyQr1VFe2xlPzG2am
mSlNi1+MMU0Q4H5Ju5swgBXLesQ4gabqtiuOyfqXCofOldfAYpSK3JErWet8NrQP
ZBB43TYvixigToCUBjuuep6HFAhx1oC1NKvZbxWmsACo4yP9scMyYY2FAgMBAAGg
LTArBgkqhkiG9w0BCQ4xHjAcMBoGA1UdEQQTMBGCCWxvY2FsaG9zdIcEfwAAATAN
BgkqhkiG9w0BAQsFAAOCAQEASdgBEtHrvbMsCqVAakiRENFCe0U2PTeauEff/3tY
I2eg3Vq+sJ+BIk8x6DjPRvPnMaqS2oviWqz/Gl6/1dQSJeHh1PspafOxR5eLnQVB
0EfTxLJdoCmv/g2Wb4nP09T2ubTnRutO9YDKChyEs1ESNqw7y/Y5b4uxgvcZuPbY
JxWbhXarxzgXe7d3Pl7CBUFT5fHUQJdWaTuQr0IhHg+5TGXouMnHH25BY5snqV5q
+IwrYqcuA12aYc4i+HEGDFrfXXY5B6ZAWCyXdJUO21KKeqYrGrkJob195n0vVYhJ
dmHXHqRhwKyPSTYkCotIhg4R0e2V3/5MrM1khID7nre5aw==
-----END CERTIFICATE REQUEST-----
`)

func syslogdrainbinderCsrBytes() ([]byte, error) {
	return _syslogdrainbinderCsr, nil
}

func syslogdrainbinderCsr() (*asset, error) {
	bytes, err := syslogdrainbinderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.csr", size: 964, mode: os.FileMode(292), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA3ga6U6JqTn6H+a2ggERXnCWs0Yf2LWnJZrrpFx+/p6gx5dgp
bUASsbdrvph/I9Y0zfEChRGYRFZ39DcLFglnVZTCXL+GFP2uzttbleZh7f1uMmOM
dQHt3/dGUeet2t5gE1wbdT9N3HNrD3BC5ccsKGSt4wwsFK896CPuaZvFzP11/K28
i0ZEpVBJQsvHZWRRsFo0r6iHvgW07ckK9VRXtsZT8xtmppkpTYtfjDFNEOB+Sbub
MIAVy3rEOIGm6rYrjsn6lwqHzpXXwGKUityRK1nrfDa0D2QQeN02L4sYoE6AlAY7
rnqehxQIcdaAtTSr2W8VprAAqOMj/bHDMmGNhQIDAQABAoIBAQCG60203wB8vJVC
m0jqSR14DMjs9xMY260AmVplq+xaJHJV+rqJ4iK6Df0ScDbqfxPNhcSDOoLuHCF+
rSg2dvZtYh2OIPCItvPQTipkeABQj+2z/xxuSgLUU75OrVvPocx+Vz10TUiySwzm
79AnM5ZY4X1teIsc8rTK6XLKiFd1zfpr6usHF2WiE4qvJP4tXEJl3lvxPF06sTQS
oW7ElREzDdqbLV3fg3gX9QDUMHnpgh/Sf956IL0G72g7Kcy9aQ4PAnMmWDkQ5yP8
YFpuQ1K6GTCT4avNLWNgakpchWFeg7aZR1lTKkDH3NdklQranoF+Oi2Jl4bF/aKf
8e1pkQ+hAoGBAOueYms2UZ2WSlBvZOTMu84d/RnxK+v59s08ZQkLfJ49JyexZk0Y
63JBzgn9y2yq9KyIfrU+sTA2NgJlS5iNwiqHRhVjPAerEJuNn6hlesi+/mk4/SI5
Ydo96+n1RVkriRThzV6sA3lsKHLAn+Qg9oW4sHlF3S71uHDIDolGoDmtAoGBAPE7
WUep9VyHKfBZX1sR5xfhbLuB835c/kvZv+UaPbbqeTrXhXyD4UIb8BXqpV92gw06
8Yqex/qpufxZdLSI//1M9h2Y/UTYTbxGexBOgrvIaka82zGqcawDlfFVzkaGR+Xj
b6jAipIyMuwiidCATo2DXEtSMVRZIB2KMIiL6k45AoGAP916h9z9Wl22Xv8StgHY
lhIC3NlGMnxarV7FdCIs8SdaSaQIOrWafCniE0s7rITaNTn6Pl5z4MGQ+i1CxGMI
UkbAdGOljd6Mbd2BfT+kfG1owFS2KGStZV6LZ6sX1Qe77HEYHaU6e9sZS6FytX9J
0w0wqG6LeYMZL1jKt+Lw4zECgYBSreK1uzzLT9BB/n++OO6ZsruPsMSB5OGLocAx
h8LrNIYEcuXffVvxSp4JBPlVNMtJ94/d0Pn9obqLESX80o/ag0w/bLYxqGlMRGPd
fOs17UTvpb8C0MZRDJGRu7UNWuy9kCwvDH7yCJ6HbHcLrU4/FmzFrBAYNsvZFAn6
YuoVkQKBgQDj7SpNUPhvIrwhamxLl4fQSVPnYH6G9y2ZevOPlEflt8jMvPzFvNrW
xNmhwiHqNtu9jdxbV31C687gOVJSRJ/u/pdEi1W59ByVfyn121BSGm887eXZ0mH7
jP+d9XrbjOyZ6eETnPbVEUJ8xY6BJBIy1t2ExmSXS5bTmr99yHuGAg==
-----END RSA PRIVATE KEY-----
`)

func syslogdrainbinderKeyBytes() ([]byte, error) {
	return _syslogdrainbinderKey, nil
}

func syslogdrainbinderKey() (*asset, error) {
	bytes, err := syslogdrainbinderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531858362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIETTCCAjWgAwIBAgIQZv7FrM54HL9rocyJZNoeFjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxNzIwMTI0MVoXDTQzMDcx
NzIwMTIzN1owHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDF2bBCnp6T30Wz0ZPDEbTuwh4ULQ8hL4Iy
zCTtpm3LIXkILIAAv9HGBB23aTOqgQ+rgSmEmoy9duNtTtckfrJyPq1+BykGaLPr
LGOFFtVei1a1pjqlT9B4FSsZgAMZYWNwA6Oa9Lf1fgLSHV5zOCu9jVKuXgiyCH9y
aIWSzRJY63PK0OKQRYdZPtQmg0tpSayoB51qqHV5pDUm9N3PuhxQF4sPB78xoQCK
W3QJJqxOdtoHEwkSmxA8VIcZxE0btmJNJh8M/M7/zGLqSN+GK1o22yna8ON+jgWE
B9l7tbQ1slprjc2qwX/9CPrRI+MejBntYOMcw09QE/INrNzdg4VfAgMBAAGjgY4w
gYswDgYDVR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcD
AjAdBgNVHQ4EFgQUTmGCQgSEYmC1F00PQGbQJQJbZlcwHwYDVR0jBBgwFoAUMcV+
hvBDJkbc0PSQUfCbU9V1D/gwGgYDVR0RBBMwEYIJbG9jYWxob3N0hwR/AAABMA0G
CSqGSIb3DQEBCwUAA4ICAQCR3Eex/YQRKCn2JVryPvb35LCqeBgfdDP/iT4fjEX2
TjlpKhMT2CMxiGxFfzWAaXYrKGMvzE1nW9Nt2sdVwsBDH5GXhSYIzIKWef6Ea968
jqxFT18rKfGuF9dOxFcE48lANJrMD2qBxnfcBhUVj70Tb0r7GqWwpO198ntpRshH
6QJr4Hcb9ujqo3oS+v50suVJY6yRIGvKD7HYF4YEb7mO70/kdRT/n7uxMX34jZWn
MKuu9wqxrbHRzsyL4cCd0IXlETmuc1QsL2eAijX8HWMk28pJ6PhLGUO+vQRfCKHo
2lZAOa8egz7rs3U5O/Xd10GtRrp+K4PeGZ5ByXR14PnfJWrGgUGkCh2jsgRSivmn
rackIAvhXQ8DY1SMhOdq+pQ8aYMB0qR/ZnR93rg9QgZTRpYz2xzFPRm6SRp5kUH6
FH8GMMijPwNuVuDhqyMEYesF2oWS0+jQaZ7jSD5tpM4RgdFA7moIvrBED6qvAYJ6
n+qVrhuDR/MlUoW4R5T9mLoy5cPeRh2BIoZG/5C4UIX9rRn8XWVHKMsbjw9Ftey1
i4cv9hni3diG9tCaax26kC2NXZ17ejUG8BkTMzeZ9F4/d9jB/RlHl7+Vacjao/4W
ONbIkPIpDTQZdrsQ7TWo2xRUIhYvoI2MN2m0vVNhVBGchrl5inLk4085jiQnckkU
Tw==
-----END CERTIFICATE-----
`)

func trafficcontrollerCrtBytes() ([]byte, error) {
	return _trafficcontrollerCrt, nil
}

func trafficcontrollerCrt() (*asset, error) {
	bytes, err := trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.crt", size: 1554, mode: os.FileMode(292), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICjjCCAXYCAQAwHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDF2bBCnp6T30Wz0ZPDEbTuwh4ULQ8h
L4IyzCTtpm3LIXkILIAAv9HGBB23aTOqgQ+rgSmEmoy9duNtTtckfrJyPq1+BykG
aLPrLGOFFtVei1a1pjqlT9B4FSsZgAMZYWNwA6Oa9Lf1fgLSHV5zOCu9jVKuXgiy
CH9yaIWSzRJY63PK0OKQRYdZPtQmg0tpSayoB51qqHV5pDUm9N3PuhxQF4sPB78x
oQCKW3QJJqxOdtoHEwkSmxA8VIcZxE0btmJNJh8M/M7/zGLqSN+GK1o22yna8ON+
jgWEB9l7tbQ1slprjc2qwX/9CPrRI+MejBntYOMcw09QE/INrNzdg4VfAgMBAAGg
LTArBgkqhkiG9w0BCQ4xHjAcMBoGA1UdEQQTMBGCCWxvY2FsaG9zdIcEfwAAATAN
BgkqhkiG9w0BAQsFAAOCAQEAQTSbH9aRZAhVqtwlwiHzdFSQGBRCCUPYGrX7x6DV
HrUDgYLSEijprTObf2rhhjIQ1VapBwvWvfO1yQ0Dt4QjSq3gnBcweXabZl4BFHpL
SKLkDl/RCguMAc4L1SGt/Okl267yzEmGWNhRj1vRqV1qmMFnPyl3LC7VYL3KkSmL
CY07FTTkEWK5dQzNduDWoxby3F9p3xC+Voj3WJ/AEybrCPGWU2gnPHItS193V+V5
ns8lamYB8dj2zngYDK4GqPH9wyjXSu0wD7oinS5uvm9Z45xjYxLojdBxUTXZM1wp
7fVBHZBz1/j6Zvui56TvfpCb9bZC9zXAloRrhChYPuj11g==
-----END CERTIFICATE REQUEST-----
`)

func trafficcontrollerCsrBytes() ([]byte, error) {
	return _trafficcontrollerCsr, nil
}

func trafficcontrollerCsr() (*asset, error) {
	bytes, err := trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.csr", size: 964, mode: os.FileMode(292), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAxdmwQp6ek99Fs9GTwxG07sIeFC0PIS+CMswk7aZtyyF5CCyA
AL/RxgQdt2kzqoEPq4EphJqMvXbjbU7XJH6ycj6tfgcpBmiz6yxjhRbVXotWtaY6
pU/QeBUrGYADGWFjcAOjmvS39X4C0h1eczgrvY1Srl4Isgh/cmiFks0SWOtzytDi
kEWHWT7UJoNLaUmsqAedaqh1eaQ1JvTdz7ocUBeLDwe/MaEAilt0CSasTnbaBxMJ
EpsQPFSHGcRNG7ZiTSYfDPzO/8xi6kjfhitaNtsp2vDjfo4FhAfZe7W0NbJaa43N
qsF//Qj60SPjHowZ7WDjHMNPUBPyDazc3YOFXwIDAQABAoIBABvFXY9MUnfxHAiM
f1AfOSVWTACK/peq4nyc2QYemUSs8x8pl+IDCr/frggjlSP2r6tkGt7JDr49ZNjf
+yTdP9D3aUTKXoDOy4pUFbgFp3d42Xfv2EWB+YIRfpY6uLSkTd/YMuu6M+QahuzV
QH+tv74Aiz18Z34N4U2+zBj5/fxK+Sx6A8OrOBjcIzjMIWhp95/1nibFXkv/JkJi
LIUeNouqfaqi0Ott+9S0UA81TtBp9oQqn5cqgu+eOww7Mv2AbghK8DOsq0Q508TD
gQFxOVxG4+eg2gzydgx94PmzwXd9P+xP7YvHzIsIsK+o62a0SrOHr3P/81HlxRLz
7Lw0ZmkCgYEA36ORurAJwryD2sgoZvLUY7qaA/LluXoDr0cTCUU4lMVvAkyrmfPr
9qUrnv0nGINR4yAdqTygNPktioajdVyirjeHSGFQLRvze/BfWY+Kv7zWcCd6cxne
PK5pG4WVMc7HOOkpy+AmHI0yyr8Vo58e46WP2TxsHgOGLatH3p5SRusCgYEA4nrP
8aVR18/mzXvfNtJeBManyX1zgMSd7X7NWcdZDCaVdkbzxVXINKZC37f/91+z0DAz
aYa4QjLW/LqVRgqfDolrEAmEiEMozL6oDD2HkA36ly2x5BWjQvMtNs6d/HQlK8M8
k7xD8Lrbgsv3EI9+F9AHgCioP/geJTWlNB7Sxl0CgYA7c3I0HMQbfp3WtUr4Qylu
8ZYr4pBrRCJioBRRbJNkCTA/fj5ICO37fWEhPM791zsXk9wOt00nh+4xWyVs95lP
kvdlqGj19O4/TmEqn9wUqJCg8/27R28q1nqelF5bBUs0t9cimY3IHUkZWL7Z5l0B
y2t4JnXfbLRow5WxeokIzQKBgG8N2bmcXy17/Kj1/NZdAU1GPDBJG8Igp3A1pWxI
nBmhMdj1ocM59RocDN620wTyILINcKhmLyQG2fTDaT8XJjdymtUaVaqbg/4h3zVh
VoAE2sQW3AwDsDK8G4eseTu5mCCFc8bdolMAzXKtoVC1jBcRIxxs01PKzr1gOMn9
80zhAoGAGFXpUqsmpdZEZ7Z5H1CdoOqqbzAAmLG4OMN//GMvenZ3rklaAXSKXm2i
x/RJRKv2C9Q4gerYBlGfs8+FO2noyYScQAFWwe21QeK+O8EsoyrjJPiC0niAdtCB
JTQ3kxH3nqw/a0ytPYnGs5Fdj+87oh1t9HkkKhiJGzvStkhqczI=
-----END RSA PRIVATE KEY-----
`)

func trafficcontrollerKeyBytes() ([]byte, error) {
	return _trafficcontrollerKey, nil
}

func trafficcontrollerKey() (*asset, error) {
	bytes, err := trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531858361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cc_trafficcontroller.crt": cc_trafficcontrollerCrt,
	"cc_trafficcontroller.csr": cc_trafficcontrollerCsr,
	"cc_trafficcontroller.key": cc_trafficcontrollerKey,
	"doppler.crt": dopplerCrt,
	"doppler.csr": dopplerCsr,
	"doppler.key": dopplerKey,
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"metron.crt": metronCrt,
	"metron.csr": metronCsr,
	"metron.key": metronKey,
	"reverselogproxy.crt": reverselogproxyCrt,
	"reverselogproxy.csr": reverselogproxyCsr,
	"reverselogproxy.key": reverselogproxyKey,
	"rlpgateway.crt": rlpgatewayCrt,
	"rlpgateway.csr": rlpgatewayCsr,
	"rlpgateway.key": rlpgatewayKey,
	"syslogdrainbinder.crt": syslogdrainbinderCrt,
	"syslogdrainbinder.csr": syslogdrainbinderCsr,
	"syslogdrainbinder.key": syslogdrainbinderKey,
	"trafficcontroller.crt": trafficcontrollerCrt,
	"trafficcontroller.csr": trafficcontrollerCsr,
	"trafficcontroller.key": trafficcontrollerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cc_trafficcontroller.crt": &bintree{cc_trafficcontrollerCrt, map[string]*bintree{}},
	"cc_trafficcontroller.csr": &bintree{cc_trafficcontrollerCsr, map[string]*bintree{}},
	"cc_trafficcontroller.key": &bintree{cc_trafficcontrollerKey, map[string]*bintree{}},
	"doppler.crt": &bintree{dopplerCrt, map[string]*bintree{}},
	"doppler.csr": &bintree{dopplerCsr, map[string]*bintree{}},
	"doppler.key": &bintree{dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl": &bintree{loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": &bintree{loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": &bintree{loggregatorCaKey, map[string]*bintree{}},
	"metron.crt": &bintree{metronCrt, map[string]*bintree{}},
	"metron.csr": &bintree{metronCsr, map[string]*bintree{}},
	"metron.key": &bintree{metronKey, map[string]*bintree{}},
	"reverselogproxy.crt": &bintree{reverselogproxyCrt, map[string]*bintree{}},
	"reverselogproxy.csr": &bintree{reverselogproxyCsr, map[string]*bintree{}},
	"reverselogproxy.key": &bintree{reverselogproxyKey, map[string]*bintree{}},
	"rlpgateway.crt": &bintree{rlpgatewayCrt, map[string]*bintree{}},
	"rlpgateway.csr": &bintree{rlpgatewayCsr, map[string]*bintree{}},
	"rlpgateway.key": &bintree{rlpgatewayKey, map[string]*bintree{}},
	"syslogdrainbinder.crt": &bintree{syslogdrainbinderCrt, map[string]*bintree{}},
	"syslogdrainbinder.csr": &bintree{syslogdrainbinderCsr, map[string]*bintree{}},
	"syslogdrainbinder.key": &bintree{syslogdrainbinderKey, map[string]*bintree{}},
	"trafficcontroller.crt": &bintree{trafficcontrollerCrt, map[string]*bintree{}},
	"trafficcontroller.csr": &bintree{trafficcontrollerCsr, map[string]*bintree{}},
	"trafficcontroller.key": &bintree{trafficcontrollerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

