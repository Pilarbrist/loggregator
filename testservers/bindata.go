// Code generated by go-bindata.
// sources:
// loggregator-certs/cc_trafficcontroller.crt
// loggregator-certs/cc_trafficcontroller.csr
// loggregator-certs/cc_trafficcontroller.key
// loggregator-certs/doppler.crt
// loggregator-certs/doppler.csr
// loggregator-certs/doppler.key
// loggregator-certs/loggregator-ca.crl
// loggregator-certs/loggregator-ca.crt
// loggregator-certs/loggregator-ca.key
// loggregator-certs/metron.crt
// loggregator-certs/metron.csr
// loggregator-certs/metron.key
// loggregator-certs/reverselogproxy.crt
// loggregator-certs/reverselogproxy.csr
// loggregator-certs/reverselogproxy.key
// loggregator-certs/rlpgateway.crt
// loggregator-certs/rlpgateway.csr
// loggregator-certs/rlpgateway.key
// loggregator-certs/syslogdrainbinder.crt
// loggregator-certs/syslogdrainbinder.csr
// loggregator-certs/syslogdrainbinder.key
// loggregator-certs/trafficcontroller.crt
// loggregator-certs/trafficcontroller.csr
// loggregator-certs/trafficcontroller.key
// DO NOT EDIT!

package testservers

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cc_trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEMzCCAhugAwIBAgIRAKyvuGg9FVh/FDk7NVh4h7IwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTgxNTIxMjdaFw00MzA3
MTgxNTIxMjJaMB8xHTAbBgNVBAMMFGNjX3RyYWZmaWNjb250cm9sbGVyMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtSAEd4gWv6t+MNiy7ke/LLYcOKoD
BNWUMiWQQNFsjvn7VWaDg+NZ7ap6gT47EJiSN2n4RUxWW7cS3E8nU9v0DcC1KsCJ
8CVlybDsLS/NBXmXLaL8Enu7peAzj20QqZ1xKZXOdjsNRylWSD6cijHg2ZoB41AU
q68YzpHnSi6iIGpvzCKza+5cj/Agqz4hdMVbnZxtMoDb8dWPaawD7ctlHE/UYy/A
869wJrxpTeaZgBRbS3FqOOp5y9Hw8rvNZ6xf7qfIgPO/7mH4lwci9UL+PbDDD85T
aj28T+xm0V0V3z1RqNfSavNGufZvHyhVAPg3YQGCL/eqWh4FbE1OIfw/MQIDAQAB
o3EwbzAOBgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUF
BwMCMB0GA1UdDgQWBBRau3cVJkkO+Q8kT9rmYotRH26t7DAfBgNVHSMEGDAWgBRq
gfJND2vBKL5KKWspk5UcwUkevjANBgkqhkiG9w0BAQsFAAOCAgEAERywXPcnJ1mN
1Hf5SB7SZPqQHi09eWkuuPewV4ivBlah+yhV7PnbaQaW08zzSe2sTjf/vT1Rm4GH
I3rty649IKlDUKwcXiSaoUMbNoEhheMW/wUYWkW4FCcEGC9GChZei5YTESsMRm94
34oY7ITYgwe1hB40VzYMNoTjwP15nPQ2nLrmFN4CDeA3Me5lJEspenJntHjHswTk
TV8qX6LJknKh0uAcFzEy4lDgxG++ZxuenQmT5RDOQgQVJ7+gJjmkHCE/7knEq4aF
NmXv432Rosks98ItatMTAKO5zvLiAs8LedA2J6itQcNIsS2dJdPE0TFR/LPDgItw
aW9w1k6aOP0oL3aPjbaPgQXG41/UUrozEhdIPAKe9//R8mBcciiOGLooDShmLcYw
cPFsHZbJGsRDagfukhhKk8+SdAtFTOKMA/I/YW8pRFlB1Qa2Dnkrito+iUvFGlVa
S6xujcGh8aEgJMx6mlMnJaMUvKCIdn9mgUfACwQXYBFTIiAxe6CO68qs5bHKRpoc
iMBdc04kpFXPsJgEmbf9kLlruvEAY3JQVASQ516JMzmvypuzWHt5U3u9TVNEsqFl
Wbgso+hFp7g1QxQzaNHc9NeV2ZddWlS2R3pgYdeAcP/aQoOJj2tHDlK3+6dDSD8/
KpIYcJ0hB8pgdEHHwpcD7H99nM40dok=
-----END CERTIFICATE-----
`)

func cc_trafficcontrollerCrtBytes() ([]byte, error) {
	return _cc_trafficcontrollerCrt, nil
}

func cc_trafficcontrollerCrt() (*asset, error) {
	bytes, err := cc_trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.crt", size: 1517, mode: os.FileMode(292), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cc_trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICZDCCAUwCAQAwHzEdMBsGA1UEAwwUY2NfdHJhZmZpY2NvbnRyb2xsZXIwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC1IAR3iBa/q34w2LLuR78sthw4
qgME1ZQyJZBA0WyO+ftVZoOD41ntqnqBPjsQmJI3afhFTFZbtxLcTydT2/QNwLUq
wInwJWXJsOwtL80FeZctovwSe7ul4DOPbRCpnXEplc52Ow1HKVZIPpyKMeDZmgHj
UBSrrxjOkedKLqIgam/MIrNr7lyP8CCrPiF0xVudnG0ygNvx1Y9prAPty2UcT9Rj
L8Dzr3AmvGlN5pmAFFtLcWo46nnL0fDyu81nrF/up8iA87/uYfiXByL1Qv49sMMP
zlNqPbxP7GbRXRXfPVGo19Jq80a59m8fKFUA+DdhAYIv96paHgVsTU4h/D8xAgMB
AAGgADANBgkqhkiG9w0BAQsFAAOCAQEAl1Ea+YNHaS16vGAlX+QIN94bJNkjKBxH
9yZMNkMYYtps0gbYJCKGrE8cBNmb1/ICYw6nyD79DLdjQv8EzxUWX++f5+BbKvnT
SmQnoqyQ9LN2JvAe3uoJE8O8LXUL3LdnjsvIqJ4NO/xQqZ+IFAVABZx+HKKQ9qu3
aTrmmZykQ4iO5yzafiXpMtRivO/nCvcGasaImktNRN9k0Q7xM5beKc6SA0dCDo8w
4/K6+r/lhPfkJZnXfpTnhfHZmDq63YuwgQ6uQct/gVvSEuUY9M2MvpP0Xx8kqOz2
CLMMDB5y6miiZXcYvQO0HdzxKIWzJFiV0lDTCSEoCxvOTp9ITZG3zw==
-----END CERTIFICATE REQUEST-----
`)

func cc_trafficcontrollerCsrBytes() ([]byte, error) {
	return _cc_trafficcontrollerCsr, nil
}

func cc_trafficcontrollerCsr() (*asset, error) {
	bytes, err := cc_trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.csr", size: 907, mode: os.FileMode(292), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cc_trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAtSAEd4gWv6t+MNiy7ke/LLYcOKoDBNWUMiWQQNFsjvn7VWaD
g+NZ7ap6gT47EJiSN2n4RUxWW7cS3E8nU9v0DcC1KsCJ8CVlybDsLS/NBXmXLaL8
Enu7peAzj20QqZ1xKZXOdjsNRylWSD6cijHg2ZoB41AUq68YzpHnSi6iIGpvzCKz
a+5cj/Agqz4hdMVbnZxtMoDb8dWPaawD7ctlHE/UYy/A869wJrxpTeaZgBRbS3Fq
OOp5y9Hw8rvNZ6xf7qfIgPO/7mH4lwci9UL+PbDDD85Taj28T+xm0V0V3z1RqNfS
avNGufZvHyhVAPg3YQGCL/eqWh4FbE1OIfw/MQIDAQABAoIBAHd92/SPz5I7rVDE
ZadVpgX1TsEDSGKUFOTQa06X2yqoOOuqafFEuDtXUOKbD5RvU2dDfgsZxY9URBkc
DzH/1g6Mp/jAdT/9LB3Xnrhg5L1L7jSpZes7vhw8wUdKCMgdml54+nB9nNDpsIaQ
5+0z4scsFzrDxh9NsOv2zcPe6A7BjOGbyrulA1Nr0/f7nvr3LeeuyU03IIVy1mjQ
1ZaYwYK9tN2HgAVtOt86uvl9xA9diKkyvZrnzwVtZPI33Mvz2v3cvjCwtAlT7vjf
a9/g5ScZ90bA5g8eVf3BulsgkqqobO402lDm3OPoodxwrAWdiF+7zSbS7d2XuNa2
8/WiDcECgYEA4xwNOhctAh5kc4tvXOylt0/iy5jvIS5lHVJoVDAHrwhCVN7Ze89V
hkrPeZfYaXHhJ4EjTAuIW+RhAemY0ONL6xSBSDYfz/cQlk0vPY8A+tXUoY6KkQ5i
IRelYzWCwGgvs5ex3dRxkqrGm28ISkxZXtlqho+Vu6EVm2HL6cuknEUCgYEAzCp0
d+PCtZm+CDCyYHOfymToWphn/PTrOWS9N+ddBFVIcyiPOIlhLsbWWj2F+Ndo2Klv
csRD9Km34Hjrkl3c3+S9G2/+nJAUZVzS3uP3wgm4qXJXvmE7VJHsQafd8mZKUmeh
rWg+sNh3xLCPZq43dBolJwwe1O2H4//BD/KlA/0CgYEAiA6gJfMIdcJ7b3VTTBpB
1SY4urxuVjSTQxPBiN4VXFjYVDwFktTNadybmz7K2bDtsFr/KGmoUVTqgNjPQiVJ
sBXitb4nJNHg0AqBiKGJdrxv3DGm9evmAelGnb7LDDXejfsNBdZmC/XfcfL8xnYi
/F3IIcEXdQa2CRZ3sSLdBPkCgYEAhdN2UHe802iZRakV418m6HXIUEoCL68i2JYN
6a0ALazxNnrpljeGujCfpLsbLAeWtB4r7WB04tS0sLDSSTi5ZRD8XBXHITzYAbEc
j/mCF3Bj2L4YgbQePcsAv/CW7SLbqLRBJ/di0Gyz5PuOo9Gii7nvjG7Hbu7b2jl0
hU2ZmMkCgYACAf9VhHCFYws5g2hBssC/aSCJmlOUMlhiXJ1Wpyofk1sZazXxDP6I
RIKOuW54YiJlKQD/6ggRjIpNMFIxH2ezde7gatgzMvBELe3t5/cbbnx5QtEWHc9a
mRxR8a8o7LbgLGaAcyxzEOOyHYy6ca6lXafWpXt0nnOJfVdOGuszLA==
-----END RSA PRIVATE KEY-----
`)

func cc_trafficcontrollerKeyBytes() ([]byte, error) {
	return _cc_trafficcontrollerKey, nil
}

func cc_trafficcontrollerKey() (*asset, error) {
	bytes, err := cc_trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cc_trafficcontroller.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIQQPW+GLG8fW5EmB4d8SlKFjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxODE1MjEyNloXDTQzMDcx
ODE1MjEyMlowEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAKAT7hZxTXpw/oDoaMC1s5cfZswW9GHeciXZCIBv9NElQmhL
kUvdBtCDqeWqhsCIPsuPbQvGzDuJiD/0enDJiGfzRUz0AvaT/+0srKPnWEkeTst+
5ZHg2WcuvUE017ejrdcIjKr4YAih13g+kgzSv3kdbJmLRqXI6dKA+ONqymUlGmwH
H2RF0UXDXmn6mGDmi6ayrFvPz+TuFpfQMm7AUOS098RjSxBaZIpIsjLprsOuhe2/
MNKzYEXBprJmLGGF44bnuoziOAO399VJgMcPcQHq/3rCPcyDV3l0e0KjrMh8j7rK
2d2YENzKSESDhPY5cE4dDvNXEZmtb84lFvfr0fkCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
6EKZBhIeaKmcUYZnaTFYYdEz7i8wHwYDVR0jBBgwFoAUaoHyTQ9rwSi+SilrKZOV
HMFJHr4wDQYJKoZIhvcNAQELBQADggIBALFRwzgbbrFEWEqf/2jChKyX0wCAVMrX
Ry5oZiXmpNpDip0L4gut1GDv7sBh8GO3JMPlOP/mpguu1jcAaD71v4b27U2Alo7c
pC8kzzcHt88gaC2FGU9qFiZPxnwc6b/sORN1vtx3LibY3GH/J2r5LZgND4Rz+5aT
qvWKriUSEmI6fqkmONWNTn0N8aLvrw+qCXOGc533HXjYlKvo5nstjhwsoBIbK14J
sWGPiHKaAgsIb/MwY82c2dtmmgsutgeoxfqTRbEcsKgnT8pmqanRHocL92pSE47b
1MfjPeUoCQQQCnlKdLH0iUB9n6XhcBxsjhLY44JDrKrN9GETCi8MducfQQT8ztBI
S77aGtb6/qoNu1/OebwSPnNZCkTwsXKZPPhEeUDr8oDV/HYP4TWJXq9kxsI3xiN5
Kpdw3TRZeZaVosmI5DJFJqckxb0GBK3q+MN+cqSbK9mITf/3uagj9pubV6T99ZQP
bXYNC7JcV9Aoo0lnwutwDxVzG+ixaDmSY0kJ7wZRKOK9dnNowJqsh1M359s1Ht63
R5jJfHu3hXo1+UG0jM6NlaCbHY6sBmhlgpgbBqF1hpSoG3U3Zfrpt1PH1xY25cO1
Nd4RKCesMVpDgSKSBYBkEp9g8bAn81rmpyEbut8CwFiBjSmWjdKosxGkl0RVy7cP
ZMQg/txTp49O
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1531927286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAKAT7hZxTXpw/oDoaMC1s5cfZswW9GHeciXZCIBv9NEl
QmhLkUvdBtCDqeWqhsCIPsuPbQvGzDuJiD/0enDJiGfzRUz0AvaT/+0srKPnWEke
Tst+5ZHg2WcuvUE017ejrdcIjKr4YAih13g+kgzSv3kdbJmLRqXI6dKA+ONqymUl
GmwHH2RF0UXDXmn6mGDmi6ayrFvPz+TuFpfQMm7AUOS098RjSxBaZIpIsjLprsOu
he2/MNKzYEXBprJmLGGF44bnuoziOAO399VJgMcPcQHq/3rCPcyDV3l0e0KjrMh8
j7rK2d2YENzKSESDhPY5cE4dDvNXEZmtb84lFvfr0fkCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQB3sI0GVPPAb+8pU4hEihEaeiXWhP0Xeri5tDPIT0LRRjEbAFAW
T+Ff+DXWA/WSGnWCYM6Pqt21AxmcEYmIbreMZ4IBhi6ixanP/t4i3sETIiobmFQg
XjY0NJRWjgALGpT/2amR9wesWz+PN3dSesTaoWWWk+PZsv4aAxeOrqUBdmUVvCiP
kRw54UIX+ce6a6XFosnb79PuL8ZtFHc55DJ9lSp11Kna+dR8Gn5gBNun6+KsrDcx
Ibkhl7M/B5/paPiY489kz7rlhi1gPxctAhBjryGveoHI7OyJApbkNGTVx5zysfSd
M6LOCmeB/K1D8BBHCdyFbjQXFAcP8aUm4inp
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1531927286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAoBPuFnFNenD+gOhowLWzlx9mzBb0Yd5yJdkIgG/00SVCaEuR
S90G0IOp5aqGwIg+y49tC8bMO4mIP/R6cMmIZ/NFTPQC9pP/7Syso+dYSR5Oy37l
keDZZy69QTTXt6Ot1wiMqvhgCKHXeD6SDNK/eR1smYtGpcjp0oD442rKZSUabAcf
ZEXRRcNeafqYYOaLprKsW8/P5O4Wl9AybsBQ5LT3xGNLEFpkikiyMumuw66F7b8w
0rNgRcGmsmYsYYXjhue6jOI4A7f31UmAxw9xAer/esI9zINXeXR7QqOsyHyPusrZ
3ZgQ3MpIRIOE9jlwTh0O81cRma1vziUW9+vR+QIDAQABAoIBABZutI6wkgr2irPF
3egjjmc/H0i6bsTIR3bGU0qsZcJpVkUHUfUvpCTUTprAquGQNjyQfNeJpFUzkMRl
nkLv+w2WKb/+8etcEiFKgWb2pIialrAtuD4ZJF4xTpQ0s4YoidP4fr320H5lL6zK
F+10GyD93polymCxJxM4v6ge7v39XEkjWRWl4MeqPE+dRpIYn318wFceB7729svU
tOk0JhsqbbZ3jlaxhntjDTUjGopqbuCiZcM5b28sTqrQ13yfGP5zBPlxa7zGpW3T
mfa6odJhqZvwBcafoncfd/O7oaID2dQARrQ7KRhqGeVwEGOaP6sK+iHPH8huUDhR
QXF4w4ECgYEA1F8ai4ud0O45oXHgrzXVLLcAir3u1qhWx5JZGYUuG+a4alXkGoXX
iIF5x5mlSEf3KLBOsjCMHWERsbkmkcFN2xhhyCTAx8HpYZIo97iKnVzfs8wefnMh
3pDB18pdCGlq6qEq9nGK3XN4YmHemIOJEY1l08fZVMSMAYEL+bni8/sCgYEAwPai
exDhWvJvwn4T8MSDDgqPZ4ef4+msHBmpByGDgisEVTYnpBof7YOi+DI773jm05DN
+ZIetpyOHyT4LlH8jzCkLdKLcMDZOrV+3mZAWfjLLzSddK7cUCKffJRGC+hILARh
mNDLRLSah8ssygEcNZLtf38UcFttdFw4gfXx+5sCgYBKB2Dcde2sT+587ZJR4SUP
MjeZJX4lC4c8iDJQ6BDbnwB36Lrb1/360o9d2Zw45wUsBNFZ4fxlnVmqpwzf0A9Q
qV4kg1NEDr9IyMdJGuYO1roQFb4nfAC5caJwk1T8wqqHYWj1gTzT1xWGzfDnHyrf
mHd/bHHAz8ayG4bOJVMMkwKBgBLEag0aGTDlP2VlKb9S/YQSFtx03mImSez5uezN
n6K7WFKJT9WwDMbm9KS7DgU+dwTAoqfRRFdyZog06kZnBu9ORcmHHrS6rOX+3PX4
b+3QOsK+lUnR7++DToupSB7EWrCdRHi+ZeaqwhTO9+41qW60eZDa5TwASGb2yTAq
oXxdAoGAUmHq+pvBIMpg4f0ZLrjISlDjVuWS15iq+0ytgyLJEmhj6TR+iZMAN3gk
9IrOnoF/pcDL7XjlMHay28dZ0NMUfWXoov48nBdovIGZzNHhevk8XNuDL8fr/gG6
IizRwraCpeR/kruI+B8drbEUmhb8LN9Lf0CTiLvtCOyn6S59fQ0=
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531927286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE4MDcxODE1MjEyNloXDTQzMDcxODE1MjEyM1owAKAjMCEwHwYDVR0jBBgw
FoAUaoHyTQ9rwSi+SilrKZOVHMFJHr4wDQYJKoZIhvcNAQELBQADggIBAMTS4h0K
b0dMzi2FzPU/2OIJAcxJixEph1NLz+/OtdXdB/PuLwqf/4FTYUVq4JDTh8Wa1dkf
O5UvrJoFJ60bLkpaJQLeY0WqrvdI73/7jmwPZ+/JH7/4uEcd4qf2R9pFq2qrnwlG
uUKyQRUuD0i473F95KGNZ3O+78JTyzWHhDYR2/2jF6581HJ3WuK//9devHqBIBNW
8iZsDs97oqRUQXuiWza7/ev5k4ik/U2NoHKpaeH6V/QhAF6VFpJCyOjkFnS+aTJ8
TAVam8czQTaPX6ICJoTxXiK2v8gCc+B1KJgfU2nlN6G6kngKkcGH9Zm4qdkIff9x
eKO+4rHePCJUx6G2E97hNGf6MkNBjKD8iSfkykdfALiXY0MgFHh+UBD6o/fsDmd0
Q0FcPfzSvpd4We0KwVMegFkwV+SrPnebYIwIS+a9vDc02A8BV8Wni/0ewRxmQVon
u+FbrSP2MCwUg9QWY3YygP/n68xqRso2fqNl7rH+2HAyfgJLR/YkiH4kevQ1Gicj
MMBy484EyMB5B6bHnszJ+56eRkwVdEfGsS8kCsidmZa6F/udQsy+GA8lUcbmfPZd
i3o2jzTDwyIhoEHXzM3emwOUCMz5JepIKDYmBW3CRMVFvZyJFpb1v+s5uWHaUUvp
4esjM4Yq7UJF8D+gNqRa2QbgDwu3XxJHywH7
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1531927286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE4MDcxODE1MjEyM1oXDTQzMDcxODE1MjEyM1owGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAMvFLKYjnKBA9Ngf1hiWJ6QUGjPr1M25yPpEAF73oldDtAKUzoJYBSOiS+ie
M4LCzM6wjEJ2/9QmFHE+nHrVqGWRjffQxotWW8t2LurvlyxOPRdwyCba+yVBGaiF
5NgtbruGh2Hnvb+3+BLNqAKTj7e9KRxfxIiHwNNmsiloLjIhpbeTM87nvOk6p2pa
RSs6PYjaHXMzbpZu1MgR8SNbB+2Y8HxqL0Xgy8oLw9snA25kpwCMCS9AuUtuupE8
x2fjEm42UHoaZLxe8D7IDI23QgyAYn2ywKsu2sNuwT89Rtd9dnOE9GbB9pbD1NkO
bKQFv464W54WoARoSfiM1SLDoBXrmOrSNt0hJGIkGPD5mQaK2MLis1aH69DIpIAQ
DRtBIYNYhqTuHEjpTsSk5xLlaibX7OyXExJS4LPpm4WtRlepOR6Mz+UwNpZf0i/L
6YyYNJzWeQJHhm61ZmE3a4i+H02ij2kwNEkQrHuvZgMJOpz/pW7vXSzT6AwuO8se
IzRlCT+uWfoOQYthYhnx7eDzPnjhHZWRQ/fhFHrXl4LnlulCQOJktAylHCqul6pe
uMdbzCnqojl6/lTyTCW6CnrkBE1wsc489KCrGNmOuz/zzmrEugmpVWiGB3UPT/6V
pGWa9fjbJW/oy4GHwWhUBEVJ4CuoVcGLPDeq0R2hMk6GhUKRAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRqgfJN
D2vBKL5KKWspk5UcwUkevjANBgkqhkiG9w0BAQsFAAOCAgEAtEToka/rS/SdZcYS
/3zU/JDzJ+zuNFkRwuzE9s5Ku0JVqP/yzfpZ7tZ08RuKN50weWOUjDQXnGdGq7dh
cl7vpcs0zHjk2MlKeLKWp2DE27W+1LKlFhzWAMA4LQzwaQnmaQwrfaolE25szFzV
47VdSBqKUddJ5/UqCKBEd6eXV2AqQ6NBR9a7cnTNI935mTD4eAbHDmrEv2FDlnfZ
UYX9Ij04NjZX7w7MlsvN2MigPAEoksRlTvKLInd/NeeN9GYrsE+bkxKaFPQtrTTc
2fL/CtNOxlpsI/CcdTkrubBeqNzqooMcE9IqJLJd0dH1pGhNvmB+xzcGP4fPOgtU
umiA7eouLV4jCGCdyzsQXHDW1Kfs6q9ys0fw3e9nmR6x1FQbll8aR8aWpuB3HqhX
tRkstHaC85jgDfO/qKf8oP5+W5Hr+nOtOfb6fpAj9siUH+4nYVmWxtSZxztlzKZ0
SIhvi/Bz0wRFiUh2YzzZFbaICF7P+v9LvFjLEm078lBCxO8mzPIBP63zisv/3Jk3
QtC7CEhIS0HVlwndByILa3P0SVUbM6p21oIFI5M0m/7yu/GMQ+R+H5sAetjfLWrn
qemAA9MmruTVNj84pIWuIR8GAu/oj/o79ndcXFiBr6ePFwwDWKfOGp0u7EyZZyjQ
lgJ9r3ICJWAilEeYF0ufGEEZub0=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1531927286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1531927286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAJOrjsk6ishoLmyfI+wzLWEwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTgxNTIxMjdaFw00MzA3
MTgxNTIxMjJaMBExDzANBgNVBAMTBm1ldHJvbjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAO9uU9Dc2nU3gWXvr9Rxc2rVvvIXjRFecJZNrSER8DMW1kQN
UBEVX8bNecEfmvHjPtQZ3B26waDJNSFQU7VYKmbsKsJVwkCHBHhnFGtLAca74v4l
s8AGVm2l5F524XovQhhsA1eXCuSGczwQl+K5rhIDO7dc54a3++WeBP7Rb/lE34CS
n+cin492CDAXSbJWUQFceq0iH9QsgXRMqfRTXMZJDl9051h9eHplXNeXY9LeCKWF
ecQuH19Q113zfJE4fkM+AVnL5IbS2R2qtxO6w7SvmSOyHsi1OIfAkybD5YYJLik5
SDeUxME63725jB15rRjf/Mv8/56OM45omfUyuWECAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
n7pPKfJxRL9sumsX34D3Mc6WZ7IwHwYDVR0jBBgwFoAUaoHyTQ9rwSi+SilrKZOV
HMFJHr4wDQYJKoZIhvcNAQELBQADggIBAI295n0bA2iwg1pLQkNQI7RBQqN6xp4h
tockmYMKTFIrxbZtm2PqmjJD9g0/zzqjkdu7HZXp038WvedOoXF7K+QTWaCBa+r0
mUI+WS9bNKoVslmQAIupq5pbPBf3FF0X7nDrsOgOymuCSdSJHOxUnGo3N5fgbZj0
hbu2TvXx+6JfuvPpaKCFNWa6oWIOxvTkAtuW/YSIYK6uvoPtsm4HaTCr/RiE90DT
crncUDdr0laXPyusrt7TR7pZdWGSDZySDd/zhJZkYsc0AagTD16FFeGuaMyhhV9+
K9F0UYY4+eqkNOFbcNP1wxCfoE0G/OLvAeXyHjZl2ZFgB9Wod74p+24wNprmC+0J
bKwX1nPEAF+jkqIkhLmjDmMeAPRwERDOuQZTj2BfejEYP8CArcdIFFZWUPnZZ1ZF
Tvnxd2tnPdd9IVwfMxbxOJcRsdmERkSH4K4DJj4OinTOIYxS2e6Gd+6jMOcmJxdq
P2ZmGFyfdlj2E3xoX76l6MsbbEvkTxhbjFmhXOD2eirkA8gglR2ZsOTd0pxka56N
MEmEYVAa9Jp0ZDGOp1eYrIoOHL7Gm3D2wNE8hyK8qbOkATowtE4HFnS5Gnf2xMsU
OL8kvBUGo3lmjoFWs+dwDr5tAngk+0v39Q5S+KPt33V/fnKv1unum98BJzDji/w2
eqy7f/WY5sHp
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA725T0NzadTeBZe+v1HFzatW+8heNEV5wlk2tIRHwMxbW
RA1QERVfxs15wR+a8eM+1BncHbrBoMk1IVBTtVgqZuwqwlXCQIcEeGcUa0sBxrvi
/iWzwAZWbaXkXnbhei9CGGwDV5cK5IZzPBCX4rmuEgM7t1znhrf75Z4E/tFv+UTf
gJKf5yKfj3YIMBdJslZRAVx6rSIf1CyBdEyp9FNcxkkOX3TnWH14emVc15dj0t4I
pYV5xC4fX1DXXfN8kTh+Qz4BWcvkhtLZHaq3E7rDtK+ZI7IeyLU4h8CTJsPlhgku
KTlIN5TEwTrfvbmMHXmtGN/8y/z/no4zjmiZ9TK5YQIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAHqn62ESRYlvlY0vyR4DEC23OupHWXhz55P6RCTXoL3PB2Ao9U9b
QUprv0ibV8wB1kRIPYzuTX/c2dEiqcJRs8FhD2dQzLMbA4L3F2wiMsncf8sQ7Ai3
hls4elEFu1326wXkFGE0x5lPLTKOL1EWtv/oQLPysop/WGW1oxeRO2VZ7XMiZOUS
U6vSspHRWRYfKousGJgeVGe5+KDQlNzC62oVXifw7biUAYIk3ZMqvrdaVaMApCq7
VW3ByE4u2XaeqNDg1s3tf7L6cSd2hgN6SvzQuXT42jF8ROy4vINHk8aZaRH0YenQ
gTINHXXbt5081hNwvMJ9tjwd9MbrXlasvn8=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA725T0NzadTeBZe+v1HFzatW+8heNEV5wlk2tIRHwMxbWRA1Q
ERVfxs15wR+a8eM+1BncHbrBoMk1IVBTtVgqZuwqwlXCQIcEeGcUa0sBxrvi/iWz
wAZWbaXkXnbhei9CGGwDV5cK5IZzPBCX4rmuEgM7t1znhrf75Z4E/tFv+UTfgJKf
5yKfj3YIMBdJslZRAVx6rSIf1CyBdEyp9FNcxkkOX3TnWH14emVc15dj0t4IpYV5
xC4fX1DXXfN8kTh+Qz4BWcvkhtLZHaq3E7rDtK+ZI7IeyLU4h8CTJsPlhgkuKTlI
N5TEwTrfvbmMHXmtGN/8y/z/no4zjmiZ9TK5YQIDAQABAoIBAQCcs0xPyft/88/Q
c0pUc9vh8/qAX0GIOJLfC/9fQWo/RZb9+uiIBcElT517879oyB16m2IgYvYO0SDg
qL3gVc+KhM6HWbFEohke4/fNMM38z0MEqpA2AO/X21bXLF7tpLhRW3/kd4o9fnE0
wndlf7iZOVx/6WHuHcPSx9TlIRVzwYeOv2q2JEe5ykBipCy6w50KBzLKjbNe0br+
+d1ekNJ+PSIzBpxJEWT8sSqYE9yNuF4gpmGNeMVa1xZ7ssVatYobgyTDdiMCw5g+
7RE4vQAQElLIsIETfqx/6X5/9N3ZKFmVsi0GImAb7Nre/5U+Jru1MaHl++JmVJw1
3/OFJfJBAoGBAP1B7I3/VYAfSgLUCnjdE7+5S/1EGjVLEpU7jlXEeEhiRLFoPZQs
tL2KyNH9ApZpdk9QEqZ/AfRrnAmhO8z01h6pZHxygkTrSbF3HJgKgwjAUKnrDeKu
DK/55yoP+RaK+HNssPdYDOCLhbdcYyWX8dEmWFGnLg10oO3EYmk7Jr8VAoGBAPIG
EtrLkH7r5g6wXpBVAd7QbkkdrpGHzjUtFn5ADZctd6XN1nj3IdC+iamSd6YIwhBT
AqcIYCwTjSpBfyuOL5a4Nbf0SBSuC97YD9PMa+PYHR7ze6mXBOC0fT4nsuBG+KXu
GJ4UXg0LWX00gvKglHo1P+KU0GyBHsu7Gh3iN8QdAoGAD9r7u1wb9zx+PrUVvsFg
hiVMq5uC5IlBrZQf8iCtwyJb2JuFF2zBGAjDT9o+Ojp6DLcfo8rZzXqbN0Mf4lIF
wb+rKdtlankskO67HI2z7G1V3312zhVFeBL2NPzxBEdJDLjmT2X00G4LvhILpwPf
QM/cwafsyyzdEmW0H5BzeY0CgYBJGvSPCnY3IGJ5hWTLDCJof2UQyNp2MyNihKAK
uqZgR+egObDTETMxrpw+kHN7v6F+9NQUSD9kkPNPFEGpkmVljXcMfclYFcqYIYOG
YnUkeZ8yPjHYZDmg9mPuZmdtv4JT/LuK5HQUVJ1PaJE1YLP4xiTp+DGM1OPMflPB
OxfFMQKBgFDbcQ1+UVjZMh+qnksyKPRrQwylzWVcFLtjXWTpYS39OlFCRiMe0rUm
BuQEJZuk1poqFfB4qqIR5B6xy53SsF1mVJXRoqpYar56CFgXQMXi+SnhRuqsjcUN
a7wboZrx6PEX4T2Jw87DGCzGqcaPq3JrsaSTB+sPsp69waFb3BdV
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELTCCAhWgAwIBAgIQCo/NXzcKn6p36W8mFe0/4TANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxODE1MjEyOFoXDTQzMDcx
ODE1MjEyMlowGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnHTy3KJ6nAZMNr1jFNh64RkQVXv0CgIh7YC2
wW5F20uuDLF9ODsuyq5GaoIFI0XmpCzIs64ErI5g8z64XxMRfw9VJRsOcVs94Szu
WdiKl0smDjRLdTTNw0GQNHeNnPKwNvW5yJb3xk++gxPfL37MwN5x+QQQeTaygnZh
6+wuNY6eOcMxekivLX9Ahkfybl0L6zH6yfXMCvKeiGZIuFGjNVtVicc8Ucwgx0Hl
py95VARPENhrWrfaWKxW41PGD6az1S0ueUuk/dTvEH3t8xN1YxDpDJo9VA9fF8Fb
5U2lkXgEI0+oAmw/4TIgVXJK7lv+VPbsa+IfxCicoiW+lePUBQIDAQABo3EwbzAO
BgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0G
A1UdDgQWBBSRX1n1/b4aQIgaGunZwfXAnAfl6TAfBgNVHSMEGDAWgBRqgfJND2vB
KL5KKWspk5UcwUkevjANBgkqhkiG9w0BAQsFAAOCAgEAtprb22xRyBZOdzH4VSLU
ZMxmiylLGW6OdYbvcAlT7PICwnH0OVtJGSHefFpFHHQ6u+bYfelzsDj0isbHYXFw
G0Oov7Cn1uk42JPU+ow2EZbnRTVQ8V2cd8EYMv3LhYxANA5IQYUIiDoqrwqSZjZT
GdT4sZrJjIn+Y6uf50Gj7pgWK0GCvPaYlFEDk7evI2E4UVDKVcEt5lUt1hI2SyTl
uzL79LOpViKKjRDgi9IReafvb6MOswwMK94tKEKQU1BvxHZDkpdRVAzaYIyfj4WT
e32EfPabGtA7kxGbM87gyjD/58rCGirF2YOfAruGZNy1XSXp2EY2TSA96ifhg76G
ehqHGlbXqS3mo30rJMSI6OOUyKe34i0bJDMul8Jt0LK8qIwFH0VgACt0WuLa6JxA
A+HkYSJUVLZhpH0g3yjolUxuJ1H6had9rcqE1OYZvFJMQJmETXQ3K0qkQXtZNXrj
DxMQIF+7cfc9+9bWpvnmIpVbYSfyokJE+tkSV+u/LqRPLXXjHLB9nPGxSTrz9Aev
k+/iYze3marDMriMeNKyqnmurCkt/YiCX+PAf9vjxZd6MSaxKkcE5HWDEVzdhTUs
eRh5h69xJjGmF3ku274/7O8gNP/iExuyKxmCbe+tAEjykJKMR+e+iz39d2oAJ8OH
gPf25O2r1+LJYOxRQa0FD1M=
-----END CERTIFICATE-----
`)

func reverselogproxyCrtBytes() ([]byte, error) {
	return _reverselogproxyCrt, nil
}

func reverselogproxyCrt() (*asset, error) {
	bytes, err := reverselogproxyCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXzCCAUcCAQAwGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnHTy3KJ6nAZMNr1jFNh64RkQVXv0CgIh
7YC2wW5F20uuDLF9ODsuyq5GaoIFI0XmpCzIs64ErI5g8z64XxMRfw9VJRsOcVs9
4SzuWdiKl0smDjRLdTTNw0GQNHeNnPKwNvW5yJb3xk++gxPfL37MwN5x+QQQeTay
gnZh6+wuNY6eOcMxekivLX9Ahkfybl0L6zH6yfXMCvKeiGZIuFGjNVtVicc8Ucwg
x0Hlpy95VARPENhrWrfaWKxW41PGD6az1S0ueUuk/dTvEH3t8xN1YxDpDJo9VA9f
F8Fb5U2lkXgEI0+oAmw/4TIgVXJK7lv+VPbsa+IfxCicoiW+lePUBQIDAQABoAAw
DQYJKoZIhvcNAQELBQADggEBAEsGQCiOIzwpVptu/X/hXm1yUh1dbqj9CtGCCdcT
pPAz+6bExwHnuleju/lC2mW+qE6IdiXQzGej0B9EXIbooapIEcg4CE3trlAhPtCU
bCKWJd4hPXE74LUmTjujgsC5+EVuLT82T6OyuTbdXxxEutOIRjLg8bvWaI3Umv06
J0TNMnkYF2pw2ai0A1DLZCnoOEZCwOz5M0FJxMeqig04W/MYMlbAuB8+Iser0tBN
kVgD/hqlTLLFqXVbPmZJEPP9QIiIgt93HJhSH8V0b3KKMlTBeV/+Xy8FSlrqtPGF
E/wA616VEASCR8xVaigsiQFz+/gTaYGBFvHi5Xf0+yBQ5KE=
-----END CERTIFICATE REQUEST-----
`)

func reverselogproxyCsrBytes() ([]byte, error) {
	return _reverselogproxyCsr, nil
}

func reverselogproxyCsr() (*asset, error) {
	bytes, err := reverselogproxyCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.csr", size: 899, mode: os.FileMode(292), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAnHTy3KJ6nAZMNr1jFNh64RkQVXv0CgIh7YC2wW5F20uuDLF9
ODsuyq5GaoIFI0XmpCzIs64ErI5g8z64XxMRfw9VJRsOcVs94SzuWdiKl0smDjRL
dTTNw0GQNHeNnPKwNvW5yJb3xk++gxPfL37MwN5x+QQQeTaygnZh6+wuNY6eOcMx
ekivLX9Ahkfybl0L6zH6yfXMCvKeiGZIuFGjNVtVicc8Ucwgx0Hlpy95VARPENhr
WrfaWKxW41PGD6az1S0ueUuk/dTvEH3t8xN1YxDpDJo9VA9fF8Fb5U2lkXgEI0+o
Amw/4TIgVXJK7lv+VPbsa+IfxCicoiW+lePUBQIDAQABAoIBAHfMIG2KR4GSXOcJ
KoW6oJQdAeHCsIC9U0cs6ELB8eFRWGrFuJDG2DQ/LxG8jryMeGa7F85k75VEy71V
CA1cZ2g30EVCK1PmvkHdin/nC29/DhuQNTsAfJEGcamK5TcIqJ7cli2eUwhY5RIu
tBUE7Ti82t4GG6sEk7jLdn0T8en1IEDTlWyaif1yHWY68fkuiAbJK8VxTzuYrCP5
pYnP2j/+SgqszGHfNe2YVmP4sOvUxhwnvrQ/cbrYjPLayeM5xuh94UXL8Ujxe6GU
lbm+LrzXA0eFFA4chTmHx/TGFlHN6PZyGNoQiKqrK96RyA7Vq3ikCl9pb4HD4HzB
d8uyDT0CgYEA0BdmdfmGQ/hOjols7bzdtOMYRnIoX+gv+tPaKSxhBZ5jZjLvmCY2
zUS/uAgFhY9ozt1XlDSvnGfMTCRg2VRT/qECQmCQ0bDjVzGpkZePSGeUms1IUvY4
Or7RWe9JR7lJbiyO+RWqjtFAgYQVNryYEklgmYdrhAzkhGofUnxKQD8CgYEAwHpI
arbSETeBepQFu4BCjI4oT/o241azEikMCqIUHJp11eCudNHLFlFibnNPiSdMUfix
jPJiLp1Lmo5Xxeye8xWA4RGYxGOtZevGr+YErk0OJH5iIA8pYIEh6dksOr8YuMj9
2rCnSucu9A+HDRRoSrfJbP/w7ufSBzUFQE6/mrsCgYBiKrfebeGGTSyaF4C4wsGA
pSV9jjs3y2xfEvQ3OkVnBip0OxFGoLh3q7gaFEaulFHoTQkU1KoHyfvZ68t4m0yo
scJEGBQZqC4Ho1kQYwRoLt0vDirRYHB0XjKbD8RtPp7Ch+jG3w7AIz0gHHR5hwzi
i5UzuGvjNsXTJdEy84l/twKBgQCd8HmV33iWmhZMEER37DIvhcL8hZQejhkYsMfp
vb+FDRXeL6TXxQLByHxdp48/Oxj8Nnby8j2whG/yXhUWGyj+zMlZZggWNrilZog9
9CApKp+NQIuiRO6t+qhqbENH3WEa2Aq+NbDA3N0BdfBawkEl9pN5NrdsQptsQIyT
jUraWwKBgQCE85mlfi7j3W9CYvRRDWksY3UUM1oWnJ6TLon+VEDbkktLIelrhzgy
naB83JdHWiMOqPzPX86pbqFIP9fiQpN5oB7qG+ahTPUf8YoLrFrtNJ6aczBuJzZa
L/4ckRf9dpwC2mvZgW4FV7WQ9IuGCZeB86Rpa/kMz/sSmos+2J9oQw==
-----END RSA PRIVATE KEY-----
`)

func reverselogproxyKeyBytes() ([]byte, error) {
	return _reverselogproxyKey, nil
}

func reverselogproxyKey() (*asset, error) {
	bytes, err := reverselogproxyKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKDCCAhCgAwIBAgIQRxVxs84CXyMQp1i5+ssEljANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxODE1MjEyOFoXDTQzMDcx
ODE1MjEyMlowFTETMBEGA1UEAxMKcmxwZ2F0ZXdheTCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANdsa/ZiFqRZC/lXmAK2YditHJ15h4ov3SR6114rnDQL
1z6cXqc4FI3JTH4Eo5e3g8lhN4xFEapgah9qeTGyFW+AbezpM1Z0X/20jndlM0h+
Qa+0IR20NQpIWPbAJvYXvcE8eSDt78yQjbvbUP7yGfzzy0Yskmz+jfO0UTuUUQKZ
LNzTaK689LRCq8AkUgFhTny0Ea8bYs4XAAuAyGsiPARwNxBZG8QIlCNOWqbPnKal
v0OgAlVV+xGTywJDteTeIQ4dTvC/Zv7ItATbT25G+tVoP40l1FJgvb97Epq4/EGM
jnqIpc5xdSkWGUou/aIEs5B2YHfT5wNOJjWLfwtbC0kCAwEAAaNxMG8wDgYDVR0P
AQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4E
FgQUox4A2IEzTxngeJOxTraK+omKRQAwHwYDVR0jBBgwFoAUaoHyTQ9rwSi+Silr
KZOVHMFJHr4wDQYJKoZIhvcNAQELBQADggIBAFBPhPCZCkdDVXAAnO90ZcICKHvI
u+BiYsm8EOLlRuMjgPOfg3t31to2E8wlXmZCAntM2k6gWhJS0SBi7TpGWKjcEC5H
EWY3N3GeabXBWRkh9mXXkKRb5clW0bw8sddFyF8e3Ky2AdZWbovsVaVvYZwbLoLj
K1/6+T4f+PLojCuNY9/ZxDTf//7iusHMaVL1pmukrEacaTG8LONmEHe0WTIERRki
88Ryfaga14tQdTEYmLAiC+5qpz15W0xhN3KqSiR/HE5O33aotP5YSHE2N49IxNG2
7AcsAeIkXzJ9QkkBEd/rhnwx7deKzvkHPzJb4s37duWTC6ThbVAooCw71rJO1rvm
Fmf/ExT2x7FROaBz2dKJlVFEUuhMujqHB+nqcW1tL1o+vXv7p2Dk6X1rKS1xJufS
5qMEsGCkjeUlkRV6dSTo/FWHlBaB0eJKqCWYrGm5MnsUdWpTUsEUZE0YX0hk5ToJ
io5lb2UeR5o83UBaAJZzN3DPLOi+JStVF0ciGCydQc5pUpj6Cnn2I5Au4gX1y98+
35z/6CpDY+z2jdPKy0YPtXZzLXaCn+Tq2jBuA3i1qw+/cfrB68IP8Y1vzoe1uTEU
ABEsTH3i3hby81PPfe/Iao0rHePM8joowvaD7D6l6AmQgX2I1LEdAyqK0sKrG+5v
f8gCTV5yqgbfeJN6
-----END CERTIFICATE-----
`)

func rlpgatewayCrtBytes() ([]byte, error) {
	return _rlpgatewayCrt, nil
}

func rlpgatewayCrt() (*asset, error) {
	bytes, err := rlpgatewayCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.crt", size: 1501, mode: os.FileMode(292), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWjCCAUICAQAwFTETMBEGA1UEAxMKcmxwZ2F0ZXdheTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBANdsa/ZiFqRZC/lXmAK2YditHJ15h4ov3SR6114r
nDQL1z6cXqc4FI3JTH4Eo5e3g8lhN4xFEapgah9qeTGyFW+AbezpM1Z0X/20jndl
M0h+Qa+0IR20NQpIWPbAJvYXvcE8eSDt78yQjbvbUP7yGfzzy0Yskmz+jfO0UTuU
UQKZLNzTaK689LRCq8AkUgFhTny0Ea8bYs4XAAuAyGsiPARwNxBZG8QIlCNOWqbP
nKalv0OgAlVV+xGTywJDteTeIQ4dTvC/Zv7ItATbT25G+tVoP40l1FJgvb97Epq4
/EGMjnqIpc5xdSkWGUou/aIEs5B2YHfT5wNOJjWLfwtbC0kCAwEAAaAAMA0GCSqG
SIb3DQEBCwUAA4IBAQASYfJ2NffAMTr15unpS0UPlzlXqQr7sDAqYbuL2/aOBN0p
2Tvg+oDDgqS7ZK3TGyv1UdzLHPwANUNFUsTzYpu5KU6L70ZhJtCsrqxWGcN2vafh
NG2QT/mYfjUtJGQPC90EhDk0cgSz1D6tzE47yEqWPJBl+Vo0oFt4ajf2MECtiODq
DPWjjH227RuiCfKF4TdHHXWKScEH0/uWXvi+XeOTtbRU4lU9vDJi/LGQjbjZfWwn
sGNESfH8yvtfZradiO1IghgtPZ+KwYPZJs2b2rn5iRJet9bcW2otCSi5sRDyEu8d
kvaTHmx/kKrNZGKQYSlXPqoC1AEO3fKs8Ys8ea8B
-----END CERTIFICATE REQUEST-----
`)

func rlpgatewayCsrBytes() ([]byte, error) {
	return _rlpgatewayCsr, nil
}

func rlpgatewayCsr() (*asset, error) {
	bytes, err := rlpgatewayCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.csr", size: 891, mode: os.FileMode(292), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rlpgatewayKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA12xr9mIWpFkL+VeYArZh2K0cnXmHii/dJHrXXiucNAvXPpxe
pzgUjclMfgSjl7eDyWE3jEURqmBqH2p5MbIVb4Bt7OkzVnRf/bSOd2UzSH5Br7Qh
HbQ1CkhY9sAm9he9wTx5IO3vzJCNu9tQ/vIZ/PPLRiySbP6N87RRO5RRApks3NNo
rrz0tEKrwCRSAWFOfLQRrxtizhcAC4DIayI8BHA3EFkbxAiUI05aps+cpqW/Q6AC
VVX7EZPLAkO15N4hDh1O8L9m/si0BNtPbkb61Wg/jSXUUmC9v3sSmrj8QYyOeoil
znF1KRYZSi79ogSzkHZgd9PnA04mNYt/C1sLSQIDAQABAoIBAQC05k07F1+gH07Y
0d/K11EPXT+cVcOmHU99JNLaN5Dye8cCwtkRXxyTfCkJ4edmriqy3zqARjfxdQlo
3EZtnvg1LAojWilMPmmlaQwB4y/Pfoa2f3MXuI6Z1esvOmj9Wy5zqM6nAmfOxsze
pes8TB3atvdKNH+5m4Gk1xUoDQKCRIf263J8Qs2RAjDJ78xIn+LbVjLFhtOW6LQ5
MdBduAE2/306+PbelZRC+2mM7kX2EDR0XSR7GGbdOE77q4GTYxmlrDXcAMC9vjPy
OyrlHvQUqtMHNRi4Km9xWEC4JwSCaLPIHmaOx8OQV9Qm2MdbLfDk7WCNN3FZS+Hr
M6EiFp2hAoGBAPZEay7epZ+9kxDy5id87xNL52XS0LxYO7O9IBkNsVU4wFaY4cE8
+70dfw3L5B0etTdeU/nMq1/wNcEDCOyCRu6fkiLIg1T08Quw/7jsCLXnpL8xmh9U
NN0H0t8e3+qw7aKDaOZqpX5FFNwaMn2G91GB6lgQ0PpyVYnM1FAHRE6dAoGBAN/v
8esD0i5T5bH8LOqqpRqymqWSns2VB9/ZKitj1wnftr3bKO++86uje/oedCQ3mFxV
tgzePARyJu82eHin6Bp0GTCtdwWzLWrLEyuOZOQhGGVSayerVD8vPltRnKsSnFgF
EaGdGDHC/XgHJk8FfYszkrJJtLezhv4w//1y95mdAoGBAOfUis4pnOMe9JZtA0tD
KlEREHnjlsrniPRwYwoSwNDIRxB+hW+DODzUyqmzOkBLiy7fZtBu4xnCqOfVMo5r
KdkzcL+74R6WI2DtNB7iXGTZ91ZhnIRHoig9WD7g8swd2Oc3LAZVeQvAfp2hL8zJ
xIL/eRuEYSaTgYDiyS+5V41lAoGAfT+n8AlYEh9Mlkr0GGBPLep9QmQKO/PBzrqY
smIKEPS2MeQVNlp30SUEH3XPAb6ykdpCk1ns+ZObISo3IUzQLZOHz0kGDAMWQOfK
Fg9zcIDuMyVw12QlH53d45d259vl4/kZzmmd8Z8cw3hEPehVOnki8GL3F9PqiduA
IhKeV6UCgYBErXlvuD5PXa+PIwoMKaSqB+SICopATEqWUScfzhhK4XVVM8RINw7I
YBd2d6fOFB5+xz8WZKdcB3byXJW0iqoEtSU4fQHN61Pm6FfQHw50VkEdkrbKWC2X
HPfA3stWhVCSLphPn8myb6yi9S2R0sH6wHcdaSkiJi3Le5pQT7/QWw==
-----END RSA PRIVATE KEY-----
`)

func rlpgatewayKeyBytes() ([]byte, error) {
	return _rlpgatewayKey, nil
}

func rlpgatewayKey() (*asset, error) {
	bytes, err := rlpgatewayKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rlpgateway.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQWCgn/UTjklDvGtfwivc7FjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcxODE1MjEyOFoXDTQzMDcx
ODE1MjEyMlowHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtM4viZxfSSZLdW35/NCiPUHrDJjJcEEMC
xAy88gm69Rb6r9FjjZAklS+Dw3oWp0j59zmEliRjQh/Menbszfb5O5Eb2ZkaXmUM
eSE2/l8tBnOH9yHu0auLyOsEJ/WvfahKQolcGRWVxhXu8Bi1mhcPpv5xpwJWr7cv
5f4Dv0PXzcfa5eP8Ugtx2sketeyEhdM/fFCp4NREcAibmU5QdM6chZD3Vt0EFw/S
DVqYU7YyxjsZ+4dlCrfUcwdT7PBY1cApJ8pyiYA+MSRbSTGCESpasq1o7Jjm70bm
GG3uNKyg79t/YeuvhTnCAbjVw+mHPjTGHPDam8vG0NCpV0AGlZXVAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFNHqvKIWyb/iGl9yjyuhysc9Iuo4MB8GA1UdIwQYMBaAFGqB8k0P
a8EovkopaymTlRzBSR6+MA0GCSqGSIb3DQEBCwUAA4ICAQCV/9TILPp468Tf2O9Q
gjJIE04IkmgEWm+p7qmzZNP4kBA0PnwH1hULITU3N3dmDou1CY7RE3cFr3ij57m5
PWIiUKPtPrih1ltrrLeDOMSkRPIYCjunQO9aAktSkFNPj+Uv8sltvDhQcJeSz/v+
JyAVyGiT6uliQWLOBojwFba75J5VCFGFlJhFkU8AvnineTv2U9puKdmt+imZxc6V
maf5VXwfkxNWg4QWRoDUtq3W34ZgpGWsTW75IDUErvjJUTGHLO2S43u+19y7oKfL
A1CIIrQsmFMkIugjabxS9qyAlRilDxEwOe73fgvSUAzmbsLJ8P9l3lOf75wxC0tp
u8POrk9TX/SbKpovpzv7rKqG3rvGiIvgDCoBa2HxUQtFOZht+gl67g4yXe7GjU2u
pqK6ba5smPpHmRDqot29vUZ6dkcVdx10iWNhLx9yo8nj0g2BxcISOnYh3esM0olA
q1GB7SddJ67cqj2HIC2ZrDkSlDZhKNJSvtCjHKWA1JZH+2yuoVVcSBdvbx5G0JmP
z8L59RikgofDk3y+NRPvuXid/RICbz7qgX2+Pk9hQt2FB3myIcleoc5pO4sMXFS7
/DdIVdKE7/PWzF+VokGs2burmL3BIU94UPHnqSCQHsa5mYVrZzLm523pVRK+3xCt
WiM3/gMqLCkZY+JW/pPbjBp+iQ==
-----END CERTIFICATE-----
`)

func syslogdrainbinderCrtBytes() ([]byte, error) {
	return _syslogdrainbinderCrt, nil
}

func syslogdrainbinderCrt() (*asset, error) {
	bytes, err := syslogdrainbinderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtM4viZxfSSZLdW35/NCiPUHrDJjJc
EEMCxAy88gm69Rb6r9FjjZAklS+Dw3oWp0j59zmEliRjQh/Menbszfb5O5Eb2Zka
XmUMeSE2/l8tBnOH9yHu0auLyOsEJ/WvfahKQolcGRWVxhXu8Bi1mhcPpv5xpwJW
r7cv5f4Dv0PXzcfa5eP8Ugtx2sketeyEhdM/fFCp4NREcAibmU5QdM6chZD3Vt0E
Fw/SDVqYU7YyxjsZ+4dlCrfUcwdT7PBY1cApJ8pyiYA+MSRbSTGCESpasq1o7Jjm
70bmGG3uNKyg79t/YeuvhTnCAbjVw+mHPjTGHPDam8vG0NCpV0AGlZXVAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAaVIlRf/RJP6aj+QMMH2sNIUBFRDlKnD8bXQa
STwtJOH/FJJnReI6O3tChK+5y0YYgr0e3xvV3I8FpxnpDOTt2RnJA5Rd9sZwneU/
9agWMyE+SXQTVQKHlkIp8XwYKfc8r2YsMVEDcRW0gq37K5Mm2u6PMacFi5JmM9D0
Zw0sq654AfNmG7y0N6SwjS7XGNHcr5bRvzUUSwAO2WJqXXGYKrmfRGX4W8oikwe9
x6TivMFu4RknYftOpsYbv+ImzLpy5qomRpvWuR6ysxFX2QfZZGAdq0WwuXIr/15Z
Y3NIrbHRdfyv3E+EOis0UbfWbI0hSgmELZ7KKjpa1jZY8Jbejw==
-----END CERTIFICATE REQUEST-----
`)

func syslogdrainbinderCsrBytes() ([]byte, error) {
	return _syslogdrainbinderCsr, nil
}

func syslogdrainbinderCsr() (*asset, error) {
	bytes, err := syslogdrainbinderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEArTOL4mcX0kmS3Vt+fzQoj1B6wyYyXBBDAsQMvPIJuvUW+q/R
Y42QJJUvg8N6FqdI+fc5hJYkY0IfzHp27M32+TuRG9mZGl5lDHkhNv5fLQZzh/ch
7tGri8jrBCf1r32oSkKJXBkVlcYV7vAYtZoXD6b+cacCVq+3L+X+A79D183H2uXj
/FILcdrJHrXshIXTP3xQqeDURHAIm5lOUHTOnIWQ91bdBBcP0g1amFO2MsY7GfuH
ZQq31HMHU+zwWNXAKSfKcomAPjEkW0kxghEqWrKtaOyY5u9G5hht7jSsoO/bf2Hr
r4U5wgG41cPphz40xhzw2pvLxtDQqVdABpWV1QIDAQABAoIBADf1bX6KfGHOr4qh
Iu+KNIiJIgCm+KJSBrSADvWE5avnv7Li1y3o8OdA5AcYQvvKtIM+YvD5aWxAUvHH
p2C+8sp3elybIyIn2VH8WMThznJHoVAOgoIcb+ZL1dKT7obyfErx0FtXJ2gqha+b
FwCldknyVEb4BINpZjAtiLJBO3QfWasVbpz7zVRx3sR4Y9Gs8EKSOw4hAjZSCcBo
M4oE71ytnZdJsn04uuvImnW4yn34QI3Un27KUJnwkKj1PWvD/9IIvspqVk5sHAP1
kHoVZGpn94x6ojivjhV8kFy1wxzbG55jmTcpAAthl0Lx73/nwtBTl39gfGayZocu
cqizmQECgYEAwgHCkmHJtdUHCKcjjRq2oOUCyjsbz0ZUKiO6Q8Jv2XehDXJ4Su7+
GKQ2qTvu3vjJVSU+Y7XIsFTG0gId5Gjpp9qVIqxOKW8d+hDAAfwOwB/YBjryocxQ
gwYOdVPvVShT8njnnkROjisGVgiaFtKMkx5SF5gRVrfrV1007PSwTXUCgYEA5IvX
7WTrTURuvBxGqOW5zDJBpfW4g5YOhTyIWrwmdIg9KBTNCtp4EOzY0VkQ6EO/cvO7
soz5D0HzH2rvAkC3dXM/fQJOlAA0brJ+TJGRwGNHifCalqfizM8zkEWpVKJwVMGG
LgwiAWbwhWW6fX7N48//846EOKo5DSSDs6IhOuECgYB9qcowKusOvmeJ8UkT0uPM
n8oI1/SRc8p8aRvzW/Q69kP5g9XrI5auu180iz+Uaa1vW2poB41wudj2mqxmEJaY
RPsotFcEe5b9LPBR2MRtKbMxhek3aDIWTEv9L1rs2+xUOIA+gZwodjHqdDPq6IJp
oNAnvDYu536m3ha0DWJNKQKBgQC8tuhWQqW1CJOzSlniLsbLYJgqlIqGRQq6Y7Bn
08KhKLnu9bYVhy3rM9cYjkXSs9ZK8g0DszoYqik5wQ+YOZ4DImXDMHt34+9nlIWL
bgv+4zt4IC9VxU0WNuVp9MuMchD1O1MzhJszsy9ZxxVFeMZDnUXIc96j95LiUktZ
sb9koQKBgB55zK0bFw5Zbb36x/PhtL6U1Kd1vTudEX1HLEMdxXLFLng6nVmjx9Qr
JIPRjR0b/parpgPzeXt+yK83F2Jr/WZoV4forieFXrNg007Y/FnGvvx6EQsdlpSH
/E50otRtHY/a9L9O0GZzyByGooKP2kxmuzwAT1T4IgXsVWMZLeSb
-----END RSA PRIVATE KEY-----
`)

func syslogdrainbinderKeyBytes() ([]byte, error) {
	return _syslogdrainbinderKey, nil
}

func syslogdrainbinderKey() (*asset, error) {
	bytes, err := syslogdrainbinderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1531927288, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEMDCCAhigAwIBAgIRAJ3XOoV/isCYdyStqbdx4NkwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA3MTgxNTIxMjdaFw00MzA3
MTgxNTIxMjJaMBwxGjAYBgNVBAMTEXRyYWZmaWNjb250cm9sbGVyMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtd+lH+dYnMQRbqz/6hHm+wUIsJiEpfJf
mj8G/dh+meZxUqXcHb/EcuLcpVmD0Z9JboxYPpBapsy68Z1pxa8xAIuumW9/rKcu
vI4ttgHTceZDDgbVxBSZcoNA0QEq95423kLdVPJnGL68UsZPbjHs8vEMhrBNB6mw
sTeMiWIvpqu8I334Dck8LPQkC3nL8LofBhdDUiEwioxyPCVlu94XOYCZUW36Jz81
M5tVWWdeRdArVJDtnkIGeTLcZTZWEwk9GCLYh4+z6JhmJZYRlxGZKKXg9reATkf1
tlwllz75F9jal0GG8Kp7nthub8vSV9B7a97yocqeTWNTx5cTEMOm3wIDAQABo3Ew
bzAOBgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
MB0GA1UdDgQWBBTTkWAMuMg5pMwU9ry5k46Ozfyz9DAfBgNVHSMEGDAWgBRqgfJN
D2vBKL5KKWspk5UcwUkevjANBgkqhkiG9w0BAQsFAAOCAgEAaszvCaNtR/SLQQuh
zgJC2dKHkpL6oD3o53kWwKCUCpEeCE4eIbAzR7ENzTUkULinK8fgm3uPIOIE76DD
Xs4bjIOkvLAc3/EhrV0DldEkX+tsqUzOONZ+M4D6/RzYmtXGo4q3L8TSgEowmrUX
R9otN4JeYw6AhXI5WnxkGCaTysNyykVAUdvSoY/d39lwhOUqURKRby1Qn0wHcDut
k0sPK66XX30bfiKsllfA6Do7Ka6U4a2VaEfiKGe5zD/DnCqzw2po+V0VKR/84p4S
Nq9rBQYL9PcQeNAljrWLwDiG1IF4X0r27GfkfqVdlZIQAWzJngJJBvOkqXZ0Ljet
L1rEDuDjavc93W64jAlB9+dpWKWIslLC/miFxC2N8YMTea8XrP2TNbkJAsPtiRir
tf60CQOjxhjLCRqzn1yrdspdAil0ehEprRoc/XwA4LSSfFsaGMhD0lkJfAd3YZ9u
0ZV/t6PbHCTZlUGU0bqK5TcwsQO/lfeUCObvdCBk6xD3FvyKidc6b4P7stDcaJqe
pDk2GMzgdbDXMU0JgBXai+mdXjLM3oFLjTb9klb4T6QR8OWtqCJz5lcJqXrLwDPy
90txPSqJLf4Yt3wnpKuZXMul+EqXcRHag6QJ7T/5m29xlnfAe5TgPhWIgCy9WttC
RyT3BOINhjUZbksWztgKIqDbr44=
-----END CERTIFICATE-----
`)

func trafficcontrollerCrtBytes() ([]byte, error) {
	return _trafficcontrollerCrt, nil
}

func trafficcontrollerCrt() (*asset, error) {
	bytes, err := trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC136Uf51icxBFurP/qEeb7BQiwmISl
8l+aPwb92H6Z5nFSpdwdv8Ry4tylWYPRn0lujFg+kFqmzLrxnWnFrzEAi66Zb3+s
py68ji22AdNx5kMOBtXEFJlyg0DRASr3njbeQt1U8mcYvrxSxk9uMezy8QyGsE0H
qbCxN4yJYi+mq7wjffgNyTws9CQLecvwuh8GF0NSITCKjHI8JWW73hc5gJlRbfon
PzUzm1VZZ15F0CtUkO2eQgZ5MtxlNlYTCT0YItiHj7PomGYllhGXEZkopeD2t4BO
R/W2XCWXPvkX2NqXQYbwqnue2G5vy9JX0Htr3vKhyp5NY1PHlxMQw6bfAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAfOP1Mm36rm7GK/XmFzE0Vn/Nq9shza5m2qtx
eEYhfAS2mbJiuXfNuYcLmd0DvghL2LEqvdhsmWoiwmrBye7GHjmqKmaV8PPTohjz
3NtzfyhEW4SjpZkhiIwgoVulREwl7PLGR2Wn5O86+fuhQD4sim5KjO5RViY+QT+/
hYdlgCrrdeK9PMEhAZGIGEEqOlFgtEIjiSWGNa8n4XVzoVOZxwgT9a9nCU4O7OBW
WS/RI4zpbruasWL1zO3WBPqf95sgiT3HC6xfTgvg5QWZM/43vxG7V0V0u09+fgQr
BxjNEe5W5d6qaLLbY3Jo912zzrkY67AsEgo1QrnJbOwXh3a/AQ==
-----END CERTIFICATE REQUEST-----
`)

func trafficcontrollerCsrBytes() ([]byte, error) {
	return _trafficcontrollerCsr, nil
}

func trafficcontrollerCsr() (*asset, error) {
	bytes, err := trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAtd+lH+dYnMQRbqz/6hHm+wUIsJiEpfJfmj8G/dh+meZxUqXc
Hb/EcuLcpVmD0Z9JboxYPpBapsy68Z1pxa8xAIuumW9/rKcuvI4ttgHTceZDDgbV
xBSZcoNA0QEq95423kLdVPJnGL68UsZPbjHs8vEMhrBNB6mwsTeMiWIvpqu8I334
Dck8LPQkC3nL8LofBhdDUiEwioxyPCVlu94XOYCZUW36Jz81M5tVWWdeRdArVJDt
nkIGeTLcZTZWEwk9GCLYh4+z6JhmJZYRlxGZKKXg9reATkf1tlwllz75F9jal0GG
8Kp7nthub8vSV9B7a97yocqeTWNTx5cTEMOm3wIDAQABAoIBAAT9W8RiTnYOkwPc
TzEWyKV+X9yocosy+Rh8Pi7cr6x9PAKudjmCt1sHilInAIzRt+wGga1FvJby6vYS
AYLg6ZFAQ8wF2RTdiVS2+d4ScsCfNpu96EN25TbVDwQs6gbdGlhCsVvRQq7VHMmQ
k0FMsVmA730KfTKGn0hdY8epH/GMnMFUySLH2vZoE2Xtxz2+VO7POh8aZMiyFWyX
kM1NMMKCqKIdBMwqYqxB6MJCNPhDuMVshhEX13OGs4QY9xaoQ4QBsn7jIqjliqbD
Y3RcL+en/dj0K/oNY6ya0VD71iYX4aa8GfigmIP1pOXU1y8uE3UtiWxU44kb+GyX
P7UTKNECgYEAyifR4z/boCvbrc/YEk++XMPdXWnJfEplHQa+wNXTBR5W8zAnhI/L
Ithk5OiZdDBzsk6JyR1dmU0OwjFpG9n837+bsFDjmGGs2sJgUXNdnb0SB98o7tAb
sdF1nPWgSrScNrkNMyLbZhxEJiZECQDGHdZqcA4HxNMGx2n0ctEecm0CgYEA5lDh
jMAeVw4L9c4dttltSDfztuAC3IgTGQcg9slIkgGd9Atl8CeoohGpVoDl8bRxrq4j
HyXIKFmuWQVRMAZz/jJ7aQ5J7fXyulRljzJG4Yd/s151qWGAl+ZBGVFwGptUmKyw
87xbl9n6Y7Lt3vqZOYaBhgNXzGEWkEXDC9eVjvsCgYBOG7ijH4dSid+ldss7uAgL
e7pKX5d0KKKM5pBJndSdA64A5LhAJfcNDaNeNukj1Zy+Zk4ioPALTZTIP6MnGcD1
Cumy5G4r8IGDPNtOXU7spaMT24vLSimJOS9CaD143/QDyNhqy6sN9xn1y486E0x5
NuGFTkZ+LDNQVYYX3ujuuQKBgQCv8V+sl2NWG6v1VkUK1ySNw/iRXqWw9N6qAvEi
tfeTWlrhAQgZoyJG1Pko1QVUVQV3bR31gHZcpM30wYQZDQT1TnlKcxj1CSspPqnq
73yIc2uRifqWr5596+8VOUpLeRfyHhJ70AukgGewXBMtgQEmmeM+jjU3M3/6LODo
ngNpmwKBgQCYAqBuALJtqTm+RBue2WllGFeiL97m2tLanD2kqzAIX3nOsuMrA8BC
WrXVgubr53NazjZ7ZnxaoKy3zsrx1blr1AarrLcD9NKZScNm4WGGh/GRsL6iRxJt
1mosiH98bDJsh6QBVsjxvvajWBgRmgQBZzYT0h4npNBfpVEvU2CzBA==
-----END RSA PRIVATE KEY-----
`)

func trafficcontrollerKeyBytes() ([]byte, error) {
	return _trafficcontrollerKey, nil
}

func trafficcontrollerKey() (*asset, error) {
	bytes, err := trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1531927287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cc_trafficcontroller.crt": cc_trafficcontrollerCrt,
	"cc_trafficcontroller.csr": cc_trafficcontrollerCsr,
	"cc_trafficcontroller.key": cc_trafficcontrollerKey,
	"doppler.crt":              dopplerCrt,
	"doppler.csr":              dopplerCsr,
	"doppler.key":              dopplerKey,
	"loggregator-ca.crl":       loggregatorCaCrl,
	"loggregator-ca.crt":       loggregatorCaCrt,
	"loggregator-ca.key":       loggregatorCaKey,
	"metron.crt":               metronCrt,
	"metron.csr":               metronCsr,
	"metron.key":               metronKey,
	"reverselogproxy.crt":      reverselogproxyCrt,
	"reverselogproxy.csr":      reverselogproxyCsr,
	"reverselogproxy.key":      reverselogproxyKey,
	"rlpgateway.crt":           rlpgatewayCrt,
	"rlpgateway.csr":           rlpgatewayCsr,
	"rlpgateway.key":           rlpgatewayKey,
	"syslogdrainbinder.crt":    syslogdrainbinderCrt,
	"syslogdrainbinder.csr":    syslogdrainbinderCsr,
	"syslogdrainbinder.key":    syslogdrainbinderKey,
	"trafficcontroller.crt":    trafficcontrollerCrt,
	"trafficcontroller.csr":    trafficcontrollerCsr,
	"trafficcontroller.key":    trafficcontrollerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cc_trafficcontroller.crt": {cc_trafficcontrollerCrt, map[string]*bintree{}},
	"cc_trafficcontroller.csr": {cc_trafficcontrollerCsr, map[string]*bintree{}},
	"cc_trafficcontroller.key": {cc_trafficcontrollerKey, map[string]*bintree{}},
	"doppler.crt":              {dopplerCrt, map[string]*bintree{}},
	"doppler.csr":              {dopplerCsr, map[string]*bintree{}},
	"doppler.key":              {dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl":       {loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt":       {loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key":       {loggregatorCaKey, map[string]*bintree{}},
	"metron.crt":               {metronCrt, map[string]*bintree{}},
	"metron.csr":               {metronCsr, map[string]*bintree{}},
	"metron.key":               {metronKey, map[string]*bintree{}},
	"reverselogproxy.crt":      {reverselogproxyCrt, map[string]*bintree{}},
	"reverselogproxy.csr":      {reverselogproxyCsr, map[string]*bintree{}},
	"reverselogproxy.key":      {reverselogproxyKey, map[string]*bintree{}},
	"rlpgateway.crt":           {rlpgatewayCrt, map[string]*bintree{}},
	"rlpgateway.csr":           {rlpgatewayCsr, map[string]*bintree{}},
	"rlpgateway.key":           {rlpgatewayKey, map[string]*bintree{}},
	"syslogdrainbinder.crt":    {syslogdrainbinderCrt, map[string]*bintree{}},
	"syslogdrainbinder.csr":    {syslogdrainbinderCsr, map[string]*bintree{}},
	"syslogdrainbinder.key":    {syslogdrainbinderKey, map[string]*bintree{}},
	"trafficcontroller.crt":    {trafficcontrollerCrt, map[string]*bintree{}},
	"trafficcontroller.csr":    {trafficcontrollerCsr, map[string]*bintree{}},
	"trafficcontroller.key":    {trafficcontrollerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
